{"version":3,"sources":["questions.js","components/MainPage/QuestionSelector.js","utils/spy.js","utils/tape.js","utils/runCode.js","components/MainPage/Border.js","components/MainPage/Console.js","actions/console.js","utils/consoleFactory.js","components/MainPage/index.js","actions/code.js","components/LoginPage.js","actions/login.js","App.js","reducers/code.js","reducers/login.js","utils/authLogin.js","reducers/console.js","reducers/index.js","index.js"],"names":["questionList","name","content","test","QuestionSelector","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","anchorEl","handleClicked","bind","assertThisInitialized","e","setState","currentTarget","_this$props","handleSelected","activeIndex","classes","items","questions","map","q","i","react_default","a","createElement","MenuItem_default","key","value","onClick","Button_default","aria-owns","aria-haspopup","className","button","variant","concat","Menu_default","id","open","Boolean","Component","withStyles","text-transform","spy","obj","methodName","origFn","callHistory","calledWith","secret","Math","random","toFixed","_len","arguments","length","args","Array","_key","result","apply","push","join","_len2","_key2","callCount","restore","tryCatchPatch","t","description","testBlock","comment","fail","getPatchedTape","require","tape","patches","_args$slice","slice","cb","slicedToArray","Error","toConsumableArray","combinePatch","subtest","should","wrapCode","undefined","replace","loopHead","debouncedRunCode","_","debounce","code","wrappedConsole","script","context","clock","sinon","useFakeTimers","sandbox","setTimeout","window","console","describe","vm","Script","createContext","runInContext","log","Border","ref","React","createRef","resize","startResize","endResize","width","height","document","querySelector","style","innerHeight","clientHeight","target","contains","current","addEventListener","allowWidth","clientX","offsetLeft","allowHeight","clientY","offsetTop","removeEventListener","dispatchEvent","Event","onMouseDown","children","Console","resetConsole","_ref","index1","text","index2","trim","connect","dispatch","type","createWrappedConsole","keys","reduce","cal","MainPage","testsRef","actions","_dispatch","SyntaxError","handleCodeChange","resetQuestion","changeQuestion","changeCode","changeSyntaxError","isLogin","rawCode","history","nextProps","nextState","compiledCode","innerHTML","index","newCode","fullCode","transform","transforms","dangerousForOf","spreadRest","loc","_e$loc","line","column","MainPage_Border","innerWidth","lib_default","showPrintMargin","mode","theme","onChange","tabSize","debounceChangePeriod","readOnly","MainPage_QuestionSelector","components_MainPage_Console","withRouter","codeObj","login","LoginPage","submitPassword","password","error","_this2","TextField_default","margin","placeholder","onKeyDown","keyCode","App","BrowserRouter","Route","exact","path","component","action","objectSpread","defineProperty","s","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","_console","reducer","combineReducers","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","es","src_App","getElementById"],"mappings":"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","file":"static/js/main.332c087e.chunk.js","sourcesContent":["const questionList = [\r\n  {\r\n    name: \"countChar\",\r\n    content: `\r\n/**\r\n * Implement the function 'countChar'\r\n * to count the occurance of each character for the input string,\r\n * and return an object containing those information.\r\n *\r\n * For example :\r\n *  input string: 'abca'\r\n *\r\n *  returned object:\r\n *  {\r\n *     a: 2,\r\n *     b: 1,\r\n *     c: 1\r\n *  }\r\n */\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction countChar(s) {\r\n\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('countChar test', (t) => {\r\n  t.subtest('should return character count in an object', t => {\r\n    const result = countChar();\r\n    t.equal(typeof result, 'object');\r\n  });\r\n  t.subtest('should be able to count chars', t => {\r\n    const input = 'abca';\r\n    const result = countChar(input);\r\n    t.equal(result.a, 2);\r\n    t.equal(result.b, 1);\r\n  });\r\n  t.subtest('should be able count some longer string as well', t => {\r\n    const input = 'The Quick Brown Fox Jumps Over The Lazy Dog';\r\n    const result = countChar(input);\r\n    t.equal(result[' '], 8);\r\n    t.equal(result.T, 2);\r\n    t.equal(result.o, 3);\r\n  });\r\n})\r\n\r\n`\r\n  },\r\n  {\r\n    name: \"forEach, map and reduce\",\r\n    content: `\r\n/**\r\n * Implement the function 'forEach, map and reduce'\r\n *\r\n */\r\n\r\n/**\r\n * Implement function body\r\n */\r\nconst myForEach = function (array, callback) {\r\n\r\n}\r\n\r\nconst myMap = function (array, callback) {\r\n\r\n}\r\n\r\nconst myReduce = function (array, callback, initValue) {\r\n\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('forEach, map and reduce test', (t) => {\r\n  t.subtest('should execute forEach correctly', t => {\r\n    let count = 0;\r\n    myForEach([1, 2, 3, 4], (val, index) => count += val * index * index);\r\n    t.equal(count, 50);\r\n  });\r\n  t.subtest('should execute map correctly', t => {\r\n    const result = myMap([1, 2, 3, 4], (val, index) => val * index * index);\r\n    t.equal(result[0], 0);\r\n    t.equal(result[2], 12);\r\n  });\r\n  t.subtest('should execute reduce correctly', t => {\r\n    const result = myReduce([10, 2, 3], (cal, val, index) => cal + val * index, 0);\r\n    t.equal(result, 8);\r\n  });\r\n});\r\n\r\n`\r\n  },\r\n  {\r\n    name: \"adder\",\r\n    content: `\r\n/**\r\n * Implement a function 'adder'\r\n * which behavior is like the following example\r\n *\r\n * ex:\r\n *   addTen = adder(10)\r\n *   addFive = adder(5)\r\n *\r\n *   addTen(10)  // return 20\r\n *   addFive(10) // return 15\r\n*/\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction adder() {\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('adder test', (t) => {\r\n  t.subtest('should return a function', t => {\r\n    t.equal(typeof adder(), 'function');\r\n  });\r\n  t.subtest('should be able to add two numbers', t => {\r\n    const add5 = adder(5);\r\n    t.equal(add5(10), 15);\r\n    t.equal(add5(20), 25);\r\n\r\n    t.equal(adder(40)(2), 42);\r\n  });\r\n})\r\n\r\n`\r\n  },\r\n  {\r\n    name: \"infinite adder\",\r\n    content: `\r\n/**\r\n * Implement a function 'adder'\r\n * which behavior is like the following example\r\n *\r\n * ex:\r\n *\r\n *   adder(10)(20)(30).getValue()  // return 60\r\n *   adder(10)(20)(30)(40).getValue() // return 100\r\n*/\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction adder() {\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('adder test', (t) => {\r\n  t.subtest('should return a function', t => {\r\n    t.equal(typeof adder(), 'function');\r\n  });\r\n  t.subtest('should get default value with 0', t => {\r\n    t.equal(adder().getValue(), 0);\r\n  });\r\n  t.subtest('should be able to add mutiple numbers', t => {\r\n    t.equal(adder(10).getValue(), 10);\r\n    t.equal(adder(10)(20)(30).getValue(), 60);\r\n    t.equal(adder(10)(20)(30)(40).getValue(), 100);\r\n  });\r\n})\r\n\r\n`\r\n  },\r\n  {\r\n    name: \"default function\",\r\n    content: `\r\n/**\r\n * Implement a function 'defaultWith'\r\n * which behavior is like the following example\r\n *\r\n * ex:\r\n *\r\n *   const fn = ({ a, b }) => a + b;\r\n *   const boundFn = defaultWith(fn, { a: 10 });\r\n *   boundFn({ b: 20 }); // return 30\r\n*/\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction defaultWith() {\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('defaultWith test', (t) => {\r\n  t.subtest('should return a function', t => {\r\n    const fn = () => {};\r\n    t.equal(typeof defaultWith(fn, {}), 'function');\r\n  });\r\n  t.subtest('should get correct result when all parameters are given', t => {\r\n    const fn = ({ a, b }) => a * 2 + b * 3;\r\n    const boundFn = defaultWith(fn, { a: 3 });\r\n    t.equal(boundFn({ b: 4 }), 18);\r\n  });\r\n  t.subtest('should get correct result when all parameters are given', t => {\r\n    const fn = ({ x, y, z }) => x * y * z;\r\n    const boundFn = defaultWith(fn, { x: 3, y: 4 });\r\n    t.equal(boundFn({ x: 7, z: 2 }), 56);\r\n  });\r\n})\r\n\r\n`\r\n  },\r\n  {\r\n    name: \"sequential\",\r\n    content: `\r\n/**\r\n * Implement the function 'sequential'\r\n * to execute async functions in sequence.\r\n *\r\n * 'sequential' takes an array of async functions as parameter,\r\n * and execute each of them after previous one has done.\r\n */\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction sequential(tasks = []) {\r\n\r\n}\r\n\r\n`,\r\n    test: `\r\nfunction asyncTask1(done) {\r\n  setTimeout(() => {\r\n    console.log('task 1 done');\r\n    done(1);\r\n  }, 500);\r\n}\r\nfunction asyncTask2(done) {\r\n  setTimeout(() => {\r\n    console.log('task 2 done');\r\n    done(2);\r\n  }, 400);\r\n}\r\nfunction asyncTask3(done) {\r\n  setTimeout(() => {\r\n    console.log('task 3 done');\r\n    done(3);\r\n  }, 300);\r\n}\r\n\r\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\r\n\r\ntest('sequential test', (t) => {\r\n  const log = spy(console, 'log');\r\n  sequential(tasks);\r\n  t.equal(log.callCount(), 0);\r\n  clock.tick(600);\r\n  t.equal(log.callCount(), 1);\r\n  t.ok(log.calledWith('task 1 done'));\r\n  clock.tick(600);\r\n  t.equal(log.callCount(), 3);\r\n  t.ok(log.calledWith('task 3 done'));\r\n});\r\n\r\n    `\r\n  },\r\n  {\r\n    name: 'parallel',\r\n    content: `\r\n/**\r\n * Implement the function 'parallel'\r\n * to execute async functions at once.\r\n *\r\n * 'parallel' takes an array of async functions as parameter,\r\n * and execute each of them in the same time.\r\n *\r\n */\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction parallel(tasks = [], callback) {\r\n}\r\n\r\n`,\r\n    test: `\r\nfunction asyncTask1(done) {\r\n  setTimeout(() => {\r\n    console.log('task 1 done');\r\n    done(1);\r\n  }, 500);\r\n}\r\nfunction asyncTask2(done) {\r\n  setTimeout(() => {\r\n    console.log('task 2 done');\r\n    done(2);\r\n  }, 400);\r\n}\r\nfunction asyncTask3(done) {\r\n  setTimeout(() => {\r\n    console.log('task 3 done');\r\n    done(3);\r\n  }, 300);\r\n}\r\n\r\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\r\n\r\ntest('parallel test', t => {\r\n  t.subtest('should run all tasks at once', t => {\r\n    const spyLog = spy(console, 'log');\r\n    parallel(tasks, (result) => { /* do nothing */ });\r\n    t.equal(spyLog.callCount(), 0);\r\n    clock.tick(600);\r\n    t.equal(spyLog.callCount(), 3);\r\n  });\r\n\r\n  t.subtest('should get task result in an array', t => {\r\n    let obj = {};\r\n    parallel(tasks, (result) => {\r\n      obj.result = result;\r\n    });\r\n    clock.tick(600);\r\n    t.deepEqual(obj.result, [1, 2, 3]);\r\n  });\r\n\r\n  t.subtest('should trigger callback only once', t => {\r\n    let count = 0;\r\n    const callback = () => count++;\r\n\r\n    parallel(tasks, callback);\r\n    clock.tick(300);\r\n    t.equal(count, 0);\r\n    clock.tick(600);\r\n    t.equal(count, 1);\r\n  });\r\n});\r\n\r\n`\r\n  },\r\n  {\r\n    name: 'combineReducers',\r\n    content: `\r\n// http://redux.js.org/docs/api/combineReducers.html\r\nfunction combineReducers(reducers) {\r\n}\r\n\r\nfunction calc(state = 0, action) {\r\n  switch(action.type) {\r\n    case 'ADD':\r\n      return state + 1;\r\n    case 'DEC':\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction calledCount(state = 0, action) {\r\n  if(action.type == 'CALL') {\r\n    return state + 1;\r\n  }\r\n  return state;\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('combineReducers', t => {\r\n  const reducer = combineReducers({\r\n    calc: calc,\r\n    calls: calledCount,\r\n  });\r\n\r\n  t.subtest('should init states', t => {\r\n    let state = {};\r\n    state = reducer(state, {type: ''});\r\n    t.equal(state.calc, 0);\r\n    t.equal(state.calls, 0);\r\n  });\r\n\r\n  t.subtest('should handle actions', t => {\r\n    let state = {};\r\n    state = reducer(state, {type: 'ADD'});\r\n    t.equal(state.calc, 1);\r\n    state = reducer(state, {type: 'ADD'});\r\n    t.equal(state.calc, 2);\r\n  });\r\n})\r\n`\r\n  },\r\n  {\r\n    name: 'applyMiddleware',\r\n    content: `\r\n// http://redux.js.org/docs/api/applyMiddleware.html\r\n\r\nfunction applyMiddleware(...middlewares) {\r\n  return createStore => (...args) => {\r\n    const store = createStore(...args);\r\n    let dispatch = store.dispatch;\r\n    /**************************\r\n     implement              here\r\n     **************************/\r\n\r\n\r\n\r\n\r\n    /***************************/\r\n    return Object.assign(store, { dispatch })\r\n  }\r\n}\r\n\r\n`,\r\n    test: `\r\n\r\nfunction createStore(reducer, preloadedState, enhancer) {\r\n\r\n  if (typeof enhancer !== 'undefined') {\r\n    return enhancer(createStore)(reducer, preloadedState)\r\n  }\r\n\r\n  let currentReducer = reducer;\r\n  let currentState = preloadedState;\r\n\r\n  function getState() {\r\n    return currentState;\r\n  }\r\n\r\n  function dispatch(action) {\r\n    currentState = currentReducer(currentState, action);\r\n  }\r\n\r\n  dispatch({ type: '@@INIT' });\r\n\r\n  return {\r\n    dispatch,\r\n    getState\r\n  };\r\n}\r\n\r\nfunction calc(state = 0, action) {\r\n  switch(action.type) {\r\n    case 'ADD':\r\n      return state + 1;\r\n    case 'DEC':\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst thunk = ({ getState, dispatch }) => next => action => {\r\n  if (typeof action === 'function') {\r\n    return action(dispatch, getState);\r\n  }\r\n  return next(action);\r\n}\r\n\r\ntest('applyMiddleware test', t => {\r\n\r\n  t.subtest('should execute normal action', t => {\r\n    const store = createStore(calc, 0, applyMiddleware(thunk));\r\n    store.dispatch({ type: 'ADD' });\r\n    t.equal(store.getState(), 1);\r\n  });\r\n\r\n  t.subtest('should execute function action', t => {\r\n    const store = createStore(calc, 0, applyMiddleware(thunk));\r\n    const incrementAsync = (dispatch, getState) => {\r\n      setTimeout(() => {\r\n        dispatch({ type: 'ADD' });\r\n      }, 1000);\r\n    };\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    t.equal(store.getState(), 0);\r\n    clock.tick(1000);\r\n    t.equal(store.getState(), 5);\r\n  });\r\n\r\n  t.subtest('should apply mutiple middlewares in the right order', t => {\r\n    let logCount = 1;\r\n    const log = () => next => action => {\r\n      logCount += 1;\r\n      next(action);\r\n    }\r\n    const log2 = () => next => action => {\r\n      logCount *= 2;\r\n      next(action);\r\n    }\r\n    const store = createStore(calc, 0, applyMiddleware(log, log2));\r\n    store.dispatch({ type: 'ADD' });\r\n    store.dispatch({ type: 'ADD' });\r\n    store.dispatch({ type: 'ADD' });\r\n    t.equal(logCount, 22);\r\n  });\r\n})\r\n`\r\n  },\r\n  {\r\n    name: 'createStore',\r\n    content: `\r\n// http://redux.js.org/docs/api/createStore.html\r\n\r\nfunction createStore(reducer, preloadedState, enhancer) {\r\n\r\n  function getState() {\r\n\r\n  }\r\n\r\n  function subscribe(listener) {\r\n\r\n  }\r\n\r\n  function dispatch(action) {\r\n\r\n  }\r\n\r\n  dispatch({ type: '@@INIT' })\r\n\r\n  return {\r\n    dispatch,\r\n    subscribe,\r\n    getState\r\n  }\r\n}\r\n\r\n\r\n`,\r\n    test: `\r\nfunction calc(state = 0, action) {\r\n  switch(action.type) {\r\n    case 'ADD':\r\n      return state + 1;\r\n    case 'DEC':\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst wrappedThunk = (createStore) => {\r\n  return function (...args) {\r\n    const store = createStore(...args);\r\n    const { dispatch, getState } = store;\r\n    store.dispatch = (action) => {\r\n      if (typeof action === 'function') {\r\n        return action(dispatch, getState);\r\n      }\r\n      dispatch(action);\r\n    }\r\n    return store;\r\n  }\r\n}\r\n\r\ntest('createStore test', t => {\r\n\r\n  t.subtest('should execute getState successfully', t => {\r\n    const store = createStore(calc, 0);\r\n    t.equal(store.getState(), 0);\r\n  });\r\n\r\n  t.subtest('should execute dispatch successfully', t => {\r\n    const store = createStore(calc, 0);\r\n    t.equal(store.getState(), 0);\r\n    store.dispatch({ type: 'ADD' });\r\n    t.equal(store.getState(), 1);\r\n  });\r\n\r\n  t.subtest('should execute subscribe and unsubscribe successfully', t => {\r\n    const store = createStore(calc, 0);\r\n    let dispatchCount = 1;\r\n    let dispatchCount2 = 3;\r\n    const unsubscribeForCount = store.subscribe(() => dispatchCount *= 2);\r\n    const unsubscribeForCount2 = store.subscribe(() => dispatchCount2 *= 2);\r\n    store.dispatch({ type: 'ADD' });\r\n    store.dispatch({ type: 'ADD' });\r\n    store.dispatch({ type: 'ADD' });\r\n    t.equal(dispatchCount, 8);\r\n    t.equal(dispatchCount2, 24);\r\n    unsubscribeForCount();\r\n    store.dispatch({ type: 'ADD' });\r\n    store.dispatch({ type: 'ADD' });\r\n    unsubscribeForCount2();\r\n    store.dispatch({ type: 'ADD' });\r\n    t.equal(dispatchCount, 8);\r\n    t.equal(dispatchCount2, 96);\r\n  });\r\n\r\n  t.subtest('should execute enhancer successfully', t => {\r\n    const store = createStore(calc, 0, wrappedThunk);\r\n    const incrementAsync = (dispatch, getState) => {\r\n      setTimeout(() => {\r\n        dispatch({ type: 'ADD' });\r\n      }, 1000);\r\n    };\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    t.equal(store.getState(), 0);\r\n    clock.tick(1000);\r\n    t.equal(store.getState(), 5);\r\n  });\r\n})\r\n`\r\n  },\r\n  {\r\n    name: 'explain',\r\n    content: `\r\n// explain the purpose of following code;\r\n// modify variable name and/or code style when appropriate;\r\n// add comments where you see fit\r\nfunction foo(a, b) {\r\n  var c = [];\r\n  for(var i0 = 0, i1 = 0; i0 < a.length && i1 < b.length; ) {\r\n    if(a[i0] < b[i1]) {\r\n      c.push(a[i0++]);\r\n    }\r\n    if(a[i0] >= b[i1]) {\r\n      c.push(b[i1++]);\r\n    }\r\n  }\r\n  if(i0 < a.length) {\r\n    for(var i = i0; i < a.length; i++) {\r\n      c.push(a[i]);\r\n    }\r\n  }\r\n  if(i1 < b.length) {\r\n    for(var i = i1; i < b.length; i++) {\r\n      c.push(b[i]);\r\n    }\r\n  }\r\n  return c;\r\n}\r\n\r\nconsole.log(foo([1,4,5], [2,3,6]))\r\n`\r\n  },\r\n  {\r\n    name: 'mergeSort',\r\n    content: `\r\n// implement function merge, so mergeSort can run correctly\r\nfunction merge(arr1, arr2) {\r\n  // TODO enter your code here\r\n  return arr1;\r\n}\r\n\r\nfunction mergeSort(arr) {\r\n  if(arr.length <= 1) {\r\n    return arr;\r\n  }\r\n  const mid = Math.floor(arr.length / 2);\r\n  const sortedArr1 = mergeSort(arr.slice(0, mid));\r\n  const sortedArr2 = mergeSort(arr.slice(mid));\r\n  return merge(sortedArr1, sortedArr2);\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('mergeSort', t => {\r\n  t.deepEqual(mergeSort([6,3,5,10,2,100,4,1]),[1,2,3,4,5,6,10,100]);\r\n  const randomNumbers = Array.from({length: 20})\r\n    .map(() => Math.floor(Math.random() * 100));\r\n  const sorted = randomNumbers.slice(0).sort((a, b) => a - b);\r\n  t.deepEqual(mergeSort(randomNumbers), sorted);\r\n})\r\n`\r\n  },\r\n];\r\n\r\nexport default questionList;\r\n","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport questions from '../../questions';\r\n\r\nconst styles = () => ({\r\n  button: {\r\n    'text-transform': 'none'\r\n  }\r\n});\r\n\r\nclass QuestionSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { anchorEl: null };\r\n    this.handleClicked = this.handleClicked.bind(this);\r\n  }\r\n  handleClicked(e) {\r\n    this.setState({ anchorEl: e.currentTarget });\r\n  }\r\n  render() {\r\n    const { handleClicked } = this;\r\n    const { handleSelected, activeIndex, classes } = this.props;\r\n    const { anchorEl } = this.state;\r\n    const items = questions.map((q, i) => {\r\n      return (\r\n        <MenuItem \r\n          key={i}\r\n          value={i}\r\n          onClick={() => {\r\n            handleClicked(false);\r\n            handleSelected(i);\r\n          }}\r\n        >\r\n          {q.name} \r\n        </MenuItem>\r\n      );\r\n    });\r\n  \r\n    return (\r\n      <div>\r\n        <Button\r\n          aria-owns={anchorEl ? 'simple-menu' : null}\r\n          aria-haspopup=\"true\"\r\n          className={classes.button}\r\n          variant=\"outlined\"\r\n          onClick={handleClicked}\r\n        >\r\n          {`${questions[activeIndex].name}  ▼`}\r\n        </Button>\r\n        <Menu id=\"simple-menu\" open={Boolean(anchorEl)} anchorEl={anchorEl}>\r\n          {items}\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default  withStyles(styles)(QuestionSelector);","const spy = (obj, methodName) => {\r\n  const origFn = obj[methodName];\r\n  let callHistory = [];\r\n  let calledWith = {};\r\n\r\n  const secret = Math.random().toFixed(4) + '';\r\n  obj[methodName] = (...args) => {\r\n    const result = origFn.apply(obj, args);\r\n    callHistory.push(args);\r\n    calledWith[args.join(secret)] = true;\r\n    return result;\r\n  };\r\n  return {\r\n    calledWith: (...args) => !!calledWith[args.join(secret)],\r\n    callCount: () => callHistory.length,\r\n    restore: () => (obj[methodName] = origFn)\r\n  };\r\n}\r\n\r\nexport default spy;","const tryCatchPatch = (t) => (description, testBlock) => {\r\n  try {\r\n    t.comment(description);\r\n    testBlock(t);\r\n  } catch(e) {\r\n    t.fail(e);\r\n  }\r\n}\r\n\r\nconst combinePatch = (tape, patches) => (...args) => {\r\n  const [cb] = args.slice(-1);\r\n  if(typeof cb !== 'function') {\r\n    throw new Error('should provide callback');\r\n  }\r\n  tape(...args.slice(0, -1), t => {\r\n    for ( let key in patches ){\r\n      t[key] = patches[key](t)\r\n    }\r\n    try {\r\n      cb(t);\r\n    } catch (e){\r\n      t.fail(e);\r\n    }\r\n  })\r\n};\r\n\r\nconst getPatchedTape = () => {\r\n  delete require.cache[require.resolve('tape')];\r\n  const tape = require('tape'); \r\n  require('tape-dom')(tape);\r\n  return combinePatch(tape,{\r\n    subtest : tryCatchPatch ,\r\n    should : tryCatchPatch\r\n  }) ;\r\n}\r\n\r\nexport default getPatchedTape ;","import _ from 'underscore';\r\nimport sinon from 'sinon';\r\nimport vm from 'vm';\r\nimport spy from './spy';\r\nimport getPatchedTape from './tape';\r\nimport { calendarFormat } from '../../node_modules/moment';\r\n\r\nconst wrapCode = (code = '') => {\r\n  return code.replace(/for *\\(.*\\{|while *\\(.*\\{|do *\\{/g, (loopHead) => {\r\n    return `let count = 0;\r\n      const detector = (c) => {\r\n        if (c > 100000) {\r\n          throw new Error('infinite');\r\n        }\r\n      }\r\n      ${loopHead}\r\n      detector(count++);\r\n    `;\r\n  });\r\n}\r\n\r\nconst runCode = (code, wrappedConsole) => {\r\n  let script = null;\r\n  let context = null;\r\n  const clock = sinon.useFakeTimers();\r\n  const test = getPatchedTape();\r\n  // should hijack setTimeout before pass to sandbox\r\n  const sandbox = {\r\n    setTimeout: window.setTimeout, // need to be passed also...\r\n    console: wrappedConsole,\r\n    sinon,   \r\n    describe: test,\r\n    test,\r\n    clock,\r\n    spy\r\n  };\r\n  try {\r\n    script = new vm.Script(wrapCode(code));\r\n    context = new vm.createContext(sandbox);\r\n    script.runInContext(context);\r\n  } catch (e) {\r\n    script = new vm.Script(wrapCode(''));\r\n    context = new vm.createContext(sandbox);\r\n    script.runInContext(context);\r\n    wrappedConsole.log(e);\r\n  }\r\n  clock.restore();\r\n}\r\nconst debouncedRunCode = _.debounce(runCode, 200);\r\n\r\nexport default debouncedRunCode ;","import React, { Component } from 'react';\r\nimport './MainPage.css';\r\n\r\nclass Border extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.ref = React.createRef();\r\n    this.resize = this.resize.bind(this);\r\n    this.startResize = this.startResize.bind(this);\r\n    this.endResize = this.endResize.bind(this);\r\n    this.state = { width: this.props.width, height: this.props.height };\r\n  }\r\n  componentDidMount() {\r\n    document.querySelector('.test-panel').style.height =\r\n      window.innerHeight - this.state.height + 'px';\r\n    document.querySelector('.bottom-panel').style.height =\r\n      window.innerHeight - document.querySelector('.top-panel').clientHeight + 'px';\r\n  }\r\n  startResize(e) {\r\n    if (e.target.contains(this.ref.current)) {\r\n      window.addEventListener('mousemove', this.resize);\r\n      window.addEventListener('mouseup', this.endResize);\r\n    }\r\n  }\r\n  resize(e) {\r\n    this.setState({\r\n      width: this.props.allowWidth ? e.clientX - this.ref.current.offsetLeft : this.state.width,\r\n      height: this.props.allowHeight ? e.clientY - this.ref.current.offsetTop : this.state.height\r\n    });\r\n    // Todo: need to get rid of real dom\r\n    document.querySelector('.test-panel').style.height =\r\n      window.innerHeight - document.querySelector('.code-panel').clientHeight + 'px';\r\n    document.querySelector('.bottom-panel').style.height =\r\n      window.innerHeight - document.querySelector('.top-panel').clientHeight + 'px';\r\n  }\r\n  endResize(e) {\r\n    window.removeEventListener('mousemove', this.resize);\r\n    window.removeEventListener('mouseup', this.endResize);\r\n    window.dispatchEvent(new Event('resize'));\r\n  }\r\n  render() {\r\n    return (\r\n      <div\r\n        ref={this.ref}\r\n        className={`border ${this.props.className ? this.props.className : ''}`}\r\n        onMouseDown={this.startResize}\r\n        style={\r\n          {\r\n            width: this.state.width + 'px',\r\n            height: this.state.height + 'px'\r\n          }\r\n        }\r\n      >\r\n        { this.props.children }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Border;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  resetConsole\r\n} from '../../actions/console';\r\nimport './Console.css';\r\n\r\nclass Console extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.resetConsole = this.props.resetConsole;\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={this.props.className ? this.props.className : ''}>\r\n        Console:\r\n        {\r\n          this.props.console.map(({ args }, index1) => \r\n            <div className=\"console\" key={index1}>\r\n              {\r\n                args.map((text, index2) => <div className=\"text\" key={index2}>{ `${text}`.trim() === '' ? <br/> : `${text}`.trim() }</div> )\r\n              }\r\n            </div> )\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  state => {\r\n    return {\r\n      console: state.console\r\n    };\r\n  },\r\n  dispatch => {\r\n    return {\r\n      resetConsole: () => dispatch(resetConsole())\r\n    };\r\n  }\r\n)(Console);\r\n\r\n","export function resetConsole() {\r\n  return {\r\n    type: 'CONSOLE/RESET'\r\n  };\r\n}\r\n\r\nexport function addConsole(key, ...args) {\r\n  return {\r\n    type: 'CONSOLE/ADD',\r\n    key,\r\n    args: [...args]\r\n  };\r\n}","const createWrappedConsole = (console, dispatch) => {\r\n  return Object.keys(console).reduce((cal, key) => {\r\n    cal[key] = (...args) => {\r\n      dispatch({ type: 'CONSOLE/ADD', key, args: [...args] });\r\n    };\r\n    return cal;\r\n  }, {});\r\n}\r\n\r\nexport default createWrappedConsole;","import _ from 'underscore';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { transform } from 'buble';\r\nimport brace from 'brace';\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/textmate';\r\nimport 'brace/theme/monokai';\r\nimport AceEditor from 'react-ace';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport QuestionSelector from './QuestionSelector';\r\nimport questions from '../../questions';\r\nimport {\r\n  changeCode,\r\n  changeQuestion,\r\n  resetQuestion\r\n} from '../../actions/code';\r\nimport {\r\n  resetConsole\r\n} from '../../actions/console';\r\nimport './MainPage.css';\r\nimport debouncedRunCode from '../../utils/runCode';\r\nimport Border from './Border';\r\nimport Console from './Console';\r\nimport createWrappedConsole from '../../utils/consoleFactory';\r\nimport firebase from '../../utils/firebase';\r\nimport { fn } from '../../../node_modules/moment';\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.testsRef = React.createRef();\r\n    this.wrappedConsole = createWrappedConsole(console, this.props.actions._dispatch);\r\n    this.state = { SyntaxError : '' } ;\r\n    this.handleSelected = this.handleSelected.bind(this);\r\n    // this.handleCodeChange = _.debounce(this.handleCodeChange.bind(this), 800);\r\n    this.handleCodeChange = this.handleCodeChange.bind(this);\r\n\r\n    this.actions = this.props.actions ;\r\n    this.resetQuestion = this.actions.resetQuestion ;\r\n    this.changeQuestion = this.actions.changeQuestion ;\r\n    this.changeCode = this.actions.changeCode;\r\n    this.resetConsole = this.actions.resetConsole;\r\n    this.changeSyntaxError = this.actions.changeSyntaxError;\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (!this.props.isLogin) {\r\n      this.props.history.push('/js-exam/login');\r\n      return;\r\n    }\r\n    const { rawCode } = this.props ;\r\n    this.handleCodeChange(rawCode);\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState) {\r\n    const { compiledCode } = nextProps;\r\n    if (this.testsRef.current) {\r\n      this.testsRef.current.innerHTML = '';\r\n      debouncedRunCode(compiledCode, this.wrappedConsole);\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    if ( this.props.index !== nextProps.index || nextProps.compiledCode === '' ){\r\n      this.handleCodeChange(nextProps.rawCode) ;\r\n    }\r\n  }\r\n\r\n  handleSelected(index) {\r\n    this.changeQuestion(index);\r\n  }\r\n\r\n  handleCodeChange(newCode) {\r\n    const fullCode = `${newCode} ${questions[this.props.index].test}`;\r\n    this.resetConsole();\r\n    try {\r\n      const { code } = transform(fullCode, {\r\n        transforms: {\r\n          dangerousForOf: true,\r\n          spreadRest: true\r\n        }\r\n      });\r\n      this.changeCode({ compiledCode : code , rawCode : newCode });\r\n      this.setState({ 'SyntaxError' : '' }) ;\r\n    } catch (e) {\r\n      this.changeCode({ rawCode : newCode });\r\n      if (e.loc) {\r\n        const { line, column } = e.loc;\r\n        this.setState({ SyntaxError : `Syntax error: line ${line}, column ${column}` }) ;\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { rawCode , index } = this.props;\r\n    return (\r\n      <div className=\"App\">\r\n        <Border className=\"input-panel\" allowWidth>\r\n          <Border \r\n            className=\"code-panel\"\r\n            allowHeight\r\n            width={window.innerWidth / 2}\r\n            height={window.innerHeight / 2}\r\n          >\r\n            <AceEditor\r\n              showPrintMargin={false}\r\n              mode=\"javascript\"\r\n              theme=\"monokai\"\r\n              onChange={this.handleCodeChange}\r\n              value={rawCode}\r\n              tabSize={2}\r\n              debounceChangePeriod={800}\r\n            />\r\n          </Border>\r\n          <div\r\n            className=\"test-panel\"\r\n          >\r\n            <AceEditor\r\n              showPrintMargin={false}\r\n              mode=\"javascript\"\r\n              theme=\"textmate\"\r\n              value={questions[index].test}\r\n              readOnly={true}\r\n              tabSize={2}\r\n              debounceChangePeriod={800}\r\n            />\r\n          </div>\r\n        </Border>\r\n        <div className=\"result-panel\">\r\n          <div className=\"top-panel\">\r\n            <div className=\"additional-info\">\r\n              <QuestionSelector\r\n                handleSelected={this.handleSelected}\r\n                activeIndex={index}\r\n              />\r\n              <Button\r\n                variant=\"outlined\"\r\n                onClick={(this.resetQuestion)}\r\n              >\r\n                Reset\r\n              </Button>\r\n              {!this.state.SyntaxError\r\n                ? null\r\n                : <div className=\"syntax-error\">\r\n                    {this.state.SyntaxError}\r\n                  </div>}\r\n            </div>\r\n            <Border \r\n              className=\"control-panel\"\r\n              allowHeight\r\n              width={window.innerWidth / 2}\r\n              height={window.innerHeight / 2}\r\n            >\r\n              <div id=\"tests\" ref={this.testsRef} />\r\n            </Border>\r\n          </div>\r\n          <Console className=\"bottom-panel\"/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  state => {\r\n    const { code : codeObj } = state ;\r\n    const { index } = codeObj ;\r\n    const compiledCode = codeObj.compiledCode ;\r\n    const rawCode = ( codeObj[index] && codeObj[index].code ) || questions[index].content ;\r\n    return {\r\n      rawCode ,\r\n      compiledCode ,\r\n      index,\r\n      isLogin: state.login.isLogin\r\n    };\r\n  },\r\n  dispatch => {\r\n    return {\r\n      actions: {\r\n        changeCode: (args) => dispatch(changeCode(args)) ,\r\n        changeQuestion : index => dispatch(changeQuestion(index)) ,\r\n        resetQuestion : () => dispatch(resetQuestion()),\r\n        _dispatch: dispatch,\r\n        resetConsole: () => dispatch(resetConsole())\r\n      }\r\n    };\r\n  }\r\n)(MainPage));\r\n","export function changeCode({ compiledCode , rawCode }) {\r\n  return {\r\n    type: 'CODE/CHANGE',\r\n    compiledCode ,\r\n    rawCode \r\n  };\r\n}\r\n\r\nexport function changeQuestion(index) {\r\n  return {\r\n    type: 'QUESTION/CHANGE',\r\n    index\r\n  };\r\n}\r\n\r\nexport function resetQuestion(index) {\r\n  return {\r\n    type: 'QUESTION/RESET'\r\n  };\r\n}\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { submitPassword } from '../actions/login';\r\nimport './LoginPage.css';\r\n\r\nclass LoginPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.actions = this.props.actions;\r\n    this.submitPassword = this.actions.submitPassword;\r\n    this.state = { password: '', error: '' };\r\n  }\r\n  componentDidUpdate() {\r\n    if (this.props.isLogin) {\r\n      this.props.history.push('/js-exam');\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"login\">\r\n        <TextField\r\n          onChange={e => this.setState({ password: e.target.value })}\r\n          margin=\"normal\"\r\n          placeholder=\"input the password to login\"\r\n          onKeyDown={e => {\r\n            if(e.keyCode === 13) {\r\n              this.submitPassword(this.state.password )\r\n            }\r\n          }}\r\n        />\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => this.submitPassword(this.state.password)}\r\n        >\r\n          Login\r\n        </Button>\r\n        <div className=\"error\">{ this.state.error }</div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(\r\n  state => {\r\n    return {\r\n      isLogin: state.login.isLogin\r\n    };\r\n  },\r\n  dispatch => {\r\n    return {\r\n      actions: {\r\n        submitPassword: (password) => dispatch(submitPassword(password))\r\n      }\r\n    };\r\n  }\r\n)(LoginPage));\r\n","export function submitPassword(password) {\r\n  return {\r\n    type: 'LOGIN/LOGIN',\r\n    password\r\n  };\r\n}\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route\r\n} from 'react-router-dom'\r\n\r\nimport MainPage from './components/MainPage/';\r\nimport LoginPage from './components/LoginPage';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Route exact path=\"/js-exam/\" component={MainPage} />\r\n      <Route path=\"/js-exam/login\" component={LoginPage} />\r\n    </div>\r\n  </Router>\r\n)\r\n\r\nexport default App;","const code = (state = { index : 0 }, action) => {\r\n  switch(action.type) {\r\n    case 'CODE/RESET':\r\n      return state ;\r\n    case 'CODE/CHANGE':\r\n      return {\r\n        ...state ,\r\n        compiledCode: action.compiledCode || state.compiledCode ,\r\n        [state.index] : {\r\n          code : action.rawCode \r\n        } \r\n      }\r\n    case 'QUESTION/RESET':\r\n      return {\r\n        ...state,\r\n        compiledCode : '' ,\r\n        [state.index] : {\r\n          code : '' \r\n        } \r\n      }\r\n    case 'QUESTION/CHANGE':\r\n      return {\r\n        ...state,\r\n        index : action.index ,\r\n        compiledCode : ''\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default code;\r\n","import { authLogin } from '../utils/authLogin';\r\n\r\nconst login = (state = { isLogin: false }, action) => {\r\n  switch(action.type) {\r\n    case 'LOGIN/LOGIN': {\r\n      return { isLogin: authLogin(action.password) } ;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default login;\r\n","const authLogin = (s) => `${(new Date().getUTCFullYear() + 1) * (new Date().getUTCMonth() + 1) * (new Date().getUTCDate() + 1) * (new Date().getUTCHours() + 1)}`.slice(0, 4) === s;\r\n\r\nexport {\r\n  authLogin\r\n}","const _console = (state = [], action) => {\r\n  switch(action.type) {\r\n    case 'CONSOLE/RESET':\r\n      return [] ;\r\n    case 'CONSOLE/ADD':\r\n      return [\r\n        ...state,\r\n        {\r\n          key: action.key,\r\n          args: action.args\r\n        }\r\n      ]\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default _console;\r\n","import { combineReducers } from 'redux';\r\nimport code from './code';\r\nimport login from './login';\r\nimport _console from './console';\r\n\r\nconst reducer = combineReducers({\r\n  code,\r\n  login,\r\n  console: _console\r\n});\r\n\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}