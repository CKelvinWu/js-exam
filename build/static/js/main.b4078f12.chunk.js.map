{"version":3,"sources":["app/components/Grid/Grid.module.scss","app/components/Border/Border.module.scss","app/components/Widgets/ConsoleWidget/ConsoleWidget.module.scss","app/pages/LoginPage/LoginPage.module.scss","app/components/Widgets/CodeWidget/CodeWidget.module.scss","app/components/Widgets/ResultWidget/ResultWidget.module.scss","app/components/Widgets/AnswerWidget/AnswerWidget.module.scss","app/pages/QuestionPage/AddPage/ControlWidget/ControlWidget.module.scss","app/pages/QuestionPage/TagWidget/TagWidget.module.scss","app/pages/QuestionPage/AddPage/ReactPage/ReactPage.module.scss","app/components/Widgets/TestWidget/TestWidget.module.scss","app/pages/QuestionPage/AddPage/JavaScriptPage/JavaScriptPage.module.scss","app/pages/QuestionPage/EditPage/ControlWidget/ControlWidget.module.scss","app/pages/QuestionPage/EditPage/ReactPage/ReactPage.module.scss","app/pages/QuestionPage/EditPage/JavaScriptPage/JavaScriptPage.module.scss","app/pages/QuestionPage/AdminQuestionDispatchPage/ControlWidget/ControlWidget.module.scss","app/components/Widgets/TapeWidget/TapeWidget.module.scss","app/pages/QuestionPage/AdminQuestionDispatchPage/ReactPage/ReactPage.module.scss","app/pages/QuestionPage/AdminQuestionDispatchPage/JavaScriptPage/JavaScriptPage.module.scss","app/pages/ExamPage/ControlWidget/ControlWidget.module.scss","app/pages/ExamPage/ReactPage/ReactPage.module.scss","app/pages/ExamPage/JavaScriptPage/JavaScriptPage.module.scss","app/utils/sentry.js","app/reducers/javascript.js","app/reducers/react.js","app/reducers/login.js","app/utils/authLogin.js","app/reducers/category.js","app/reducers/tape.js","app/reducers/console.js","app/reducers/index.js","aws-exports.js","app/utils/question.js","graphql/mutations.js","graphql/subscriptions.js","app/components/Border/index.js","app/components/Grid/index.js","app/components/Grid/GridItem.js","app/components/Widgets/CodeWidget/index.js","app/components/Widgets/ResultWidget/index.js","app/components/Widgets/AnswerWidget/index.js","app/utils/spy.js","app/utils/tape.js","app/utils/runCode.js","app/questions/index.js","app/questions/javascript.js","app/questions/react.js","app/components/Selectors/CategorySelector/index.js","app/pages/QuestionPage/AddPage/ControlWidget/index.js","app/pages/QuestionPage/TagWidget/index.js","app/pages/QuestionPage/AddPage/ReactPage/index.js","app/components/Widgets/TestWidget/index.js","app/components/Widgets/TapeWidget/index.js","app/pages/QuestionPage/AddPage/JavaScriptPage/index.js","app/pages/QuestionPage/AddPage/index.js","app/components/Selectors/QuestionSelector/index.js","app/pages/QuestionPage/EditPage/ControlWidget/index.js","app/pages/QuestionPage/EditPage/ReactPage/index.js","app/pages/QuestionPage/EditPage/JavaScriptPage/index.js","app/pages/QuestionPage/EditPage/index.js","app/utils/record.js","app/pages/QuestionPage/AdminQuestionDispatchPage/ControlWidget/index.js","app/pages/QuestionPage/AdminQuestionDispatchPage/ReactPage/index.js","app/pages/QuestionPage/AdminQuestionDispatchPage/JavaScriptPage/index.js","app/pages/QuestionPage/AdminQuestionDispatchPage/index.js","app/pages/NotFoundPage/index.js","app/routes/Admin.js","app/pages/LoginPage/index.js","app/actions/login.js","app/utils/consoleFactory.js","app/components/Widgets/ConsoleWidget/index.js","app/utils/stateHelper.js","app/pages/ExamPage/ControlWidget/index.js","app/pages/ExamPage/ReactPage/index.js","app/pages/ExamPage/JavaScriptPage/index.js","app/pages/ExamPage/index.js","app/routes/Guest.js","App.js","index.js"],"names":["module","exports","grid","item","border","vertical","horizontal","console-widget","console","login","login-input","error","code","ace_layer","result","answer","control","tag-widget","app","test-widget","tape","test","description","assert","name","actual","not-equal","expected","ok","fail","diff","Sentry","dsn","state","arguments","length","undefined","index","action","type","toUpperCase","Object","objectSpread","defineProperty","compiledCode","rawCode","remoteQuestion","s","isLogin","password","concat","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","slice","category","toConsumableArray","data","Console","key","args","reducer","combineReducers","javascript","react","_console","awsmobile","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","aws_content_delivery_bucket","aws_content_delivery_bucket_region","aws_content_delivery_url","Amplify","configure","awsExportConfig","listQuestions","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","query","wrap","_context","prev","next","API","graphql","graphqlOperation","sent","abrupt","stop","this","_x","apply","createQuestion","_ref2","_callee2","tags","content","params","_context2","input","_x2","getQuestion","_ref3","_callee3","id","_context3","_x3","updateQuestion","_ref4","_callee4","_context4","_x4","dispatchQuestion","_ref5","_callee5","question","_context5","questionSnapshotRoomId","alert","createQuestionSnapshot","_x5","subscribeOnCreateQuestionSnapshot","_ref6","_callee6","callback","_context6","subscribe","_ref7","value","_x6","Border","props","_this","classCallCheck","_this$props","possibleConstructorReturn","getPrototypeOf","call","allowWidth","allowHeight","disabled","borderSize","ref","React","createRef","resize","bind","assertThisInitialized","startResize","endResize","style","e","_this$props2","height","width","onUpdate","maxHeight","maxWidth","minWidth","minHeight","newHeight","clientY","current","offsetTop","newWidth","clientX","offsetLeft","window","removeEventListener","dispatchEvent","Event","target","contains","addEventListener","_this$props3","children","className","finalClassName","styles","paddingRight","paddingBottom","react_default","createElement","onMouseDown","Component","Grid","onResize","updateFullState","_this$ref$current","totalWidth","clientWidth","totalHeight","clientHeight","newData","map","column","indexOfColumn","indexOfItem","sumOfWidth","c","reduce","cal","val","sumOfHeight","setState","updateGridState","_this$ref$current2","layout","columns","newCal","x","sort","b","y","autoResize","_this2","Math","max","min","finalWidth","components_Border","w","JSON","stringify","itemInData","itemInColumns","isDisabled","static","h","find","GridItem","CodeWidget","handleCodeChange","mode","theme","react_ace_lib_default","showPrintMargin","onChange","tabSize","debounceChangePeriod","ResultWidget","AnswerWidget","spy","obj","methodName","origFn","callHistory","calledWith","secret","random","toFixed","_len","Array","_key","push","join","_len2","_key2","callCount","restore","tryCatchPatch","t","testBlock","comment","getPatchedTape","patches","harness","createHarness","createStream","objectMode","on","subtest","should","_args$slice","cb","slicedToArray","Error","wrapCode","replace","loopHead","runCode","_ref$wrappedConsole","wrappedConsole","onTapeUpdate","script","context","clock","sinon","useFakeTimers","sandbox","setTimeout","describe","ReactDOM","root","document","getElementById","renderToString","vm","Script","createContext","runInContext","log","Questions","getCategories","keys","categories","Option","Select","CategorySelector","es_select","defaultValue","q","i","ControlWidget","onChangeName","onSubmit","onChangeCategory","Selectors_CategorySelector","placeholder","marginRight","es_button","onClick","TagWidget","inputVisible","inputValue","handleClose","removedTag","onTagUpdate","filter","tag","showInput","focus","handleInputChange","handleInputConfirm","newTags","indexOf","saveInputRef","_this$state","isLongTag","tagElem","es_tag","closable","afterClose","tooltip","title","size","onBlur","onPressEnter","background","borderStyle","icon","ReactPage","onCodeChange","fullCode","transform","presets","decoratorsBeforeExport","plugins","_this$state2","isLoading","controlHeight","debouncedRunCode","nextProps","nextState","previousCompiledCode","_this$state3","innerWidth","innerHeight","spin","spinning","Grid_Grid","Grid_GridItem","Widgets_CodeWidget","newCode","Widgets_AnswerWidget","AddPage_ControlWidget","Widgets_ResultWidget","QuestionPage_TagWidget","TestWidget","_ref$readOnly","readOnly","_ref$handleCodeChange","TestRow","row","AssertRow","Fragment","EndRow","DescriptionRow","getRow","TapeWidget_TestRow","assign","TapeWidget_AssertRow","TapeWidget_EndRow","TapeWidget_DescriptionRow","TapeWidget","JavaScriptPage","addTape","actions","_this3","Widgets_TestWidget","newTest","Widgets_TapeWidget","Page","t0","message","history","AddPage_ReactPage","AddPage_JavaScriptPage","getPageComponent","QuestionSelector","list","QuestionSelector_Option","categoryIndex","questionIndex","onChangeQuestion","questionList","Selectors_QuestionSelector","_result$data$getQuest","items","EditPage_ControlWidget","EditPage_ReactPage","EditPage_JavaScriptPage","createRecord","subjectId","timeBegin","parseInt","getTime","updateRecord","newHistory","timeEnd","subscribeOnCreateRecord","onCreateRecord","subscribeOnUpdateRecord","onUpdateRecord","onDispatchQuestion","_questionList$index","recordId","AdminQuestionDispatchPage_ControlWidget","AdminQuestionDispatchPage_ReactPage","AdminQuestionDispatchPage_JavaScriptPage","onChangeCode","NotFoundPage","AwsConfig","Question","match","Switch","Route","path","component","QuestionAddPage","QuestionEditPage","AdminQuestionDispatchPage","withAuthenticator","render","LoginPage","preventDefault","submitPassword","display","htmlType","withRouter","connect","dispatch","createWrappedConsole","addConsole","Text","text","trim","ConsoleWidget","stack","ConsoleWidget_Text","onReset","resetConsole","ExamPage_ControlWidget","Widgets_ConsoleWidget","resetTape","updateRecordAction","questionContent","newTape","subscribeOnDispatchQuestion","_data$onCreateQuestio","onCreateQuestionSnapshot","ExamPage_ReactPage","ExamPage_JavaScriptPage","Guest","ExamPage","App","BrowserRouter","basename","process","Admin","onerror","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","es","src_App"],"mappings":"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","file":"static/js/main.b4078f12.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__1_ILV\",\"item\":\"Grid_item__2kQoc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"Border_border__2PKug\",\"vertical\":\"Border_vertical__1-vRv\",\"horizontal\":\"Border_horizontal__3v1h0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"console-widget\":\"ConsoleWidget_console-widget__3xqV7\",\"console\":\"ConsoleWidget_console__1_cas\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginPage_login__3vosL\",\"login-input\":\"LoginPage_login-input__12cCu\",\"error\":\"LoginPage_error__3JVC4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"CodeWidget_code__1HKNs\",\"ace_layer\":\"CodeWidget_ace_layer__dPOiP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"ResultWidget_result__3X-eM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer\":\"AnswerWidget_answer__3tfWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__lYbwl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag-widget\":\"TagWidget_tag-widget__27bv8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__cGJl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test-widget\":\"TestWidget_test-widget__njP2u\",\"ace_layer\":\"TestWidget_ace_layer__2FUy3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__1ai4w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__F-0BZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__13u_F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__mx5YB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__1WICo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tape\":\"TapeWidget_tape__1ArMF\",\"test\":\"TapeWidget_test__3RY47\",\"description\":\"TapeWidget_description__2i32u\",\"assert\":\"TapeWidget_assert__2SGWT\",\"name\":\"TapeWidget_name__16xyM\",\"actual\":\"TapeWidget_actual__1r8ww\",\"not-equal\":\"TapeWidget_not-equal__1rNdt\",\"expected\":\"TapeWidget_expected__2GBTu\",\"ok\":\"TapeWidget_ok__3Ul4C\",\"fail\":\"TapeWidget_fail__1k7ch\",\"diff\":\"TapeWidget_diff__3CXDj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__2wEPm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__1sT1Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__l58g8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__1Fcsz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__10JyZ\"};","import * as Sentry from '@sentry/browser';\n\nSentry.init({\n  dsn: 'https://466d7a4e8d174006b5449330cc18e4cc@sentry.io/1323316'\n});\n\nconst initErrorLogging = () => {\n  window.onerror = (e) => {\n    Sentry.captureException(e);\n  };\n};\n\nexport {\n  initErrorLogging\n};\n","const code = (state = { index: 0 }, action) => {\n  switch (action.type.toUpperCase()) {\n    case 'JAVASCRIPT/CODE/RESET':\n      return state;\n    case 'JAVASCRIPT/CODE/CHANGE':\n      return {\n        ...state,\n        compiledCode: action.compiledCode || state.compiledCode,\n        [state.index]: {\n          code: action.rawCode\n        }\n      };\n    case 'JAVASCRIPT/QUESTION/RESET':\n      return {\n        ...state,\n        [state.index]: {\n          code: ''\n        }\n      };\n    case 'JAVASCRIPT/QUESTION/CHANGE':\n      return {\n        ...state,\n        index: action.index,\n        compiledCode: ''\n      };\n    case 'JAVASCRIPT/QUESTION/REMOTE/CHANGE':\n      return {\n        ...state,\n        index: 0, //remote don't use index\n        compiledCode: '',\n        remoteQuestion: {\n            name: action.name,\n            code: action.code,\n            test: action.test\n        }\n      };     \n    default:\n      return state;\n  }\n};\n\nexport default code;\n","const code = (state = { index: 0 }, action) => {\n  switch (action.type.toUpperCase()) {\n    case 'REACT/CODE/RESET':\n      return state;\n    case 'REACT/CODE/CHANGE':\n      return {\n        ...state,\n        compiledCode: action.compiledCode || state.compiledCode,\n        [state.index]: {\n          code: action.rawCode\n        }\n      };\n    case 'REACT/QUESTION/RESET':\n      return {\n        ...state,\n        compiledCode: '',\n        [state.index]: {\n          code: ''\n        }\n      };\n    case 'REACT/QUESTION/CHANGE':\n      return {\n        ...state,\n        index: action.index,\n        compiledCode: ''\n      };\n    case 'REACT/QUESTION/REMOTE/CHANGE':\n      return {\n        ...state,\n        index: 0, //remote don't use index\n        compiledCode: '',\n        remoteQuestion: {\n          name: action.name,\n          code: action.code,\n          test: action.test\n        }\n      };       \n    default:\n      return state;\n  }\n};\n\nexport default code;\n","import { authLogin } from '../utils/authLogin';\n\nconst login = (state = { isLogin: false }, action) => {\n  switch (action.type) {\n    case 'LOGIN/LOGIN': {\n      return { isLogin: authLogin(action.password) };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default login;\n","const authLogin = s => `${(new Date().getUTCFullYear() + 1) * (new Date().getUTCMonth() + 1) * (new Date().getUTCDate() + 1) * (new Date().getUTCHours() + 1)}`.slice(0, 4) === s;\n\nexport {\n  authLogin\n}","const category = (state = { index: 0 }, action) => {\n  switch (action.type) {\n    case 'CATEGORY/RESET':\n      return { index: 0 };\n    case 'CATEGORY/CHANGE':\n      return {\n        ...state,\n        index: action.index\n      };\n    default:\n      return state;\n  }\n};\n\nexport default category;\n","const tape = (state = [], action) => {\n  switch (action.type) {\n    case 'TAPE/RESET': {\n      return [];\n    }\n    case 'TAPE/ADD': {\n      return [...state, action.data];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tape;\n","const Console = (state = [], action) => {\n  switch (action.type) {\n    case 'CONSOLE/RESET':\n      return [];\n    case 'CONSOLE/ADD':\n      return [\n        ...state,\n        {\n          key: action.key,\n          args: action.args\n        }\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default Console;\n","import { combineReducers } from 'redux';\nimport javascript from './javascript';\nimport react from './react';\nimport login from './login';\nimport category from './category';\nimport tape from './tape';\nimport _console from './console';\n\nconst reducer = combineReducers({\n  javascript,\n  react,\n  login,\n  category,\n  tape,\n  console: _console\n});\n\nexport default reducer;\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile =  {\n    \"aws_project_region\": \"us-east-1\",\n    // \"aws_appsync_graphqlEndpoint\": \"https://7hiay4be35bi5b2jujxw4lkfmu.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_graphqlEndpoint\": \"https://l2ef6zhywnel3att32o53ns2ve.appsync-api.us-east-1.amazonaws.com/graphql\",    \n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    // \"aws_cognito_identity_pool_id\": \"us-east-1:ac3970c1-998e-44f5-b8e7-915b61c672dd\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:08150bca-b94b-4b22-b34b-2b3cc4b4f2c8\",\n    \"aws_cognito_region\": \"us-east-1\",\n    // \"aws_user_pools_id\": \"us-east-1_iZaYY7v3Z\",\n    \"aws_user_pools_id\": \"us-east-1_M8wfpyIKJ\",\n    // \"aws_user_pools_web_client_id\": \"5doa5r4eeigmbvjmvo6475496a\",\n    \"aws_user_pools_web_client_id\": \"nkjhni8fo530fjmdkgseadri5\",\n    \"aws_content_delivery_bucket\": \"innovap3-js-exam-dev\",\n    \"aws_content_delivery_bucket_region\": \"us-east-1\",\n    \"aws_content_delivery_url\": \"http://innovap3-js-exam-dev.s3-website-us-east-1.amazonaws.com\"\n};\n\n\nexport default awsmobile;\n","import Amplify, { API, graphqlOperation } from 'aws-amplify';\n\nimport awsExportConfig from 'aws-exports';\nimport * as mutations from '../../graphql/mutations.js';\n\nimport * as subscriptions from '../../graphql/subscriptions';\n\nAmplify.configure(awsExportConfig);\n\nconst listQuestions = async (type) => {\n  const query = `\n    query {\n      listQuestions (\n        filter: {\n          type:{\n            eq: \"${type}\"\n          }\n        }\n        limit: 1000\n      ) {\n        items{\n          id,\n          name,\n          type\n        }\n      }\n    }`;\n  const result = await API.graphql(graphqlOperation(query));\n  return result;\n};\n\nconst createQuestion = async (data) => {\n  const {\n    tags, name, code: content, test, type\n  } = data;\n  const params = {\n    input: {\n      name,\n      content,\n      test,\n      tags,\n      type\n    }\n  };\n  const query = `mutation CreateQuestion($input: CreateQuestionInput!) {\n    createQuestion(input: $input) {\n      id\n      name\n      content\n      test\n      type\n      tags\n    }\n  }`;\n  const result = await API.graphql(graphqlOperation(query, params));\n  return result;\n};\n\nconst getQuestion = async (data) => {\n  const { id } = data;\n  const query = `query {\n    getQuestion(id: \"${id}\") {\n      content,\n      test,\n      tags\n    }\n  }`;\n  const result = await API.graphql(graphqlOperation(query));\n  return result;\n};\n\nconst updateQuestion = async (data) => {\n  const {\n    id, content, test, tags\n  } = data;\n  const params = {\n    input: {\n      id,\n      content,\n      test,\n      tags\n    }\n  };\n  const query = `mutation UpdateQuestion($input: UpdateQuestionInput!) {\n    updateQuestion(input: $input) {\n      id\n      content\n      test\n      tags\n    }\n  }`;\n  const result = await API.graphql(graphqlOperation(query, params));\n  return result;\n};\n\nconst dispatchQuestion = async (question) => {\n  const params = {\n    input: {\n      type: question.type,\n      name: question.name,\n      content: question.content,\n      test: question.test,\n      questionSnapshotRoomId: 'demoRoom1'\n    }\n  };\n  const result = await API.graphql(\n    graphqlOperation(mutations.createQuestionSnapshot, params)\n  );\n  alert(`Successfully dispatched a question \"${result.data.createQuestionSnapshot.name}\"!`);\n};\n\nconst subscribeOnCreateQuestionSnapshot = async (callback) => {\n  API.graphql(graphqlOperation(subscriptions.onCreateQuestionSnapshot)).subscribe({\n    next: ({ value }) => {\n      callback(value);\n    }\n  });\n};\n\nexport {\n  listQuestions,\n  createQuestion,\n  getQuestion,\n  updateQuestion,\n  dispatchQuestion,\n  subscribeOnCreateQuestionSnapshot\n};\n","// eslint-disable\n// this is an auto generated file. This will be overwritten\n\nexport const createRoom = `mutation CreateRoom($input: CreateRoomInput!) {\n  createRoom(input: $input) {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const updateRoom = `mutation UpdateRoom($input: UpdateRoomInput!) {\n  updateRoom(input: $input) {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const deleteRoom = `mutation DeleteRoom($input: DeleteRoomInput!) {\n  deleteRoom(input: $input) {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const createJeUser = `mutation CreateJeUser($input: CreateJEUserInput!) {\n  createJEUser(input: $input) {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const updateJeUser = `mutation UpdateJeUser($input: UpdateJEUserInput!) {\n  updateJEUser(input: $input) {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const deleteJeUser = `mutation DeleteJeUser($input: DeleteJEUserInput!) {\n  deleteJEUser(input: $input) {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const createTeam = `mutation CreateTeam($input: CreateTeamInput!) {\n  createTeam(input: $input) {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const updateTeam = `mutation UpdateTeam($input: UpdateTeamInput!) {\n  updateTeam(input: $input) {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const deleteTeam = `mutation DeleteTeam($input: DeleteTeamInput!) {\n  deleteTeam(input: $input) {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const createTest = `mutation CreateTest($input: CreateTestInput!) {\n  createTest(input: $input) {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        syncCode\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const updateTest = `mutation UpdateTest($input: UpdateTestInput!) {\n  updateTest(input: $input) {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        syncCode\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const deleteTest = `mutation DeleteTest($input: DeleteTestInput!) {\n  deleteTest(input: $input) {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        syncCode\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const createRecord = `mutation CreateRecord($input: CreateRecordInput!) {\n  createRecord(input: $input) {\n    id\n    subjectId\n    syncCode\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const updateRecord = `mutation UpdateRecord($input: UpdateRecordInput!) {\n  updateRecord(input: $input) {\n    id\n    subjectId\n    syncCode\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const deleteRecord = `mutation DeleteRecord($input: DeleteRecordInput!) {\n  deleteRecord(input: $input) {\n    id\n    subjectId\n    syncCode\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const createResult = `mutation CreateResult($input: CreateResultInput!) {\n  createResult(input: $input) {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const updateResult = `mutation UpdateResult($input: UpdateResultInput!) {\n  updateResult(input: $input) {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const deleteResult = `mutation DeleteResult($input: DeleteResultInput!) {\n  deleteResult(input: $input) {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const createQuestionSnapshot = `mutation CreateQuestionSnapshot($input: CreateQuestionSnapshotInput!) {\n  createQuestionSnapshot(input: $input) {\n    id\n    type\n    name\n    content\n    test\n    record {\n      id\n      subjectId\n      syncCode\n      timeBegin\n      timeEnd\n      history\n    }\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const updateQuestionSnapshot = `mutation UpdateQuestionSnapshot($input: UpdateQuestionSnapshotInput!) {\n  updateQuestionSnapshot(input: $input) {\n    id\n    type\n    name\n    content\n    test\n    record {\n      id\n      subjectId\n      syncCode\n      timeBegin\n      timeEnd\n      history\n    }\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const deleteQuestionSnapshot = `mutation DeleteQuestionSnapshot($input: DeleteQuestionSnapshotInput!) {\n  deleteQuestionSnapshot(input: $input) {\n    id\n    type\n    name\n    content\n    test\n    record {\n      id\n      subjectId\n      syncCode\n      timeBegin\n      timeEnd\n      history\n    }\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const createQuestionSet = `mutation CreateQuestionSet($input: CreateQuestionSetInput!) {\n  createQuestionSet(input: $input) {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const updateQuestionSet = `mutation UpdateQuestionSet($input: UpdateQuestionSetInput!) {\n  updateQuestionSet(input: $input) {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const deleteQuestionSet = `mutation DeleteQuestionSet($input: DeleteQuestionSetInput!) {\n  deleteQuestionSet(input: $input) {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const createQuestion = `mutation CreateQuestion($input: CreateQuestionInput!) {\n  createQuestion(input: $input) {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\nexport const updateQuestion = `mutation UpdateQuestion($input: UpdateQuestionInput!) {\n  updateQuestion(input: $input) {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\nexport const deleteQuestion = `mutation DeleteQuestion($input: DeleteQuestionInput!) {\n  deleteQuestion(input: $input) {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\n","// eslint-disable\n// this is an auto generated file. This will be overwritten\n\nexport const onCreateRoom = `subscription OnCreateRoom {\n  onCreateRoom {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const onUpdateRoom = `subscription OnUpdateRoom {\n  onUpdateRoom {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const onDeleteRoom = `subscription OnDeleteRoom {\n  onDeleteRoom {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const onCreateJeUser = `subscription OnCreateJeUser {\n  onCreateJEUser {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const onUpdateJeUser = `subscription OnUpdateJeUser {\n  onUpdateJEUser {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const onDeleteJeUser = `subscription OnDeleteJeUser {\n  onDeleteJEUser {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const onCreateTeam = `subscription OnCreateTeam {\n  onCreateTeam {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const onUpdateTeam = `subscription OnUpdateTeam {\n  onUpdateTeam {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const onDeleteTeam = `subscription OnDeleteTeam {\n  onDeleteTeam {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const onCreateTest = `subscription OnCreateTest {\n  onCreateTest {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        syncCode\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const onUpdateTest = `subscription OnUpdateTest {\n  onUpdateTest {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        syncCode\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const onDeleteTest = `subscription OnDeleteTest {\n  onDeleteTest {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        syncCode\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const onCreateRecord = `subscription OnCreateRecord {\n  onCreateRecord {\n    id\n    subjectId\n    syncCode\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const onUpdateRecord = `subscription OnUpdateRecord {\n  onUpdateRecord {\n    id\n    subjectId\n    syncCode\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const onDeleteRecord = `subscription OnDeleteRecord {\n  onDeleteRecord {\n    id\n    subjectId\n    syncCode\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const onCreateResult = `subscription OnCreateResult {\n  onCreateResult {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const onUpdateResult = `subscription OnUpdateResult {\n  onUpdateResult {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const onDeleteResult = `subscription OnDeleteResult {\n  onDeleteResult {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const onCreateQuestionSnapshot = `subscription OnCreateQuestionSnapshot {\n  onCreateQuestionSnapshot {\n    id\n    type\n    name\n    content\n    test\n    record {\n      id\n      subjectId\n      syncCode\n      timeBegin\n      timeEnd\n      history\n    }\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const onUpdateQuestionSnapshot = `subscription OnUpdateQuestionSnapshot {\n  onUpdateQuestionSnapshot {\n    id\n    type\n    name\n    content\n    test\n    record {\n      id\n      subjectId\n      syncCode\n      timeBegin\n      timeEnd\n      history\n    }\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const onDeleteQuestionSnapshot = `subscription OnDeleteQuestionSnapshot {\n  onDeleteQuestionSnapshot {\n    id\n    type\n    name\n    content\n    test\n    record {\n      id\n      subjectId\n      syncCode\n      timeBegin\n      timeEnd\n      history\n    }\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const onCreateQuestionSet = `subscription OnCreateQuestionSet {\n  onCreateQuestionSet {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const onUpdateQuestionSet = `subscription OnUpdateQuestionSet {\n  onUpdateQuestionSet {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const onDeleteQuestionSet = `subscription OnDeleteQuestionSet {\n  onDeleteQuestionSet {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const onCreateQuestion = `subscription OnCreateQuestion {\n  onCreateQuestion {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\nexport const onUpdateQuestion = `subscription OnUpdateQuestion {\n  onUpdateQuestion {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\nexport const onDeleteQuestion = `subscription OnDeleteQuestion {\n  onDeleteQuestion {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\n","import React, { Component } from 'react';\nimport styles from './Border.module.scss';\n\nclass Border extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      allowWidth,\n      allowHeight,\n      disabled,\n      borderSize\n    } = this.props;\n    this.ref = React.createRef();\n    this.resize = this.resize.bind(this);\n    this.startResize = this.startResize.bind(this);\n    this.endResize = this.endResize.bind(this);\n    this.borderSize = borderSize || 10;\n    this.disabled = disabled;\n    this.allowWidth = allowWidth;\n    this.allowHeight = allowHeight;\n    this.style = {};\n  }\n\n  resize(e) {\n    const {\n      allowHeight,\n      height,\n      width,\n      onUpdate,\n      allowWidth,\n      maxHeight,\n      maxWidth,\n      minWidth,\n      minHeight\n    } = this.props;\n    let newHeight = allowHeight\n      ? e.clientY - this.ref.current.offsetTop\n      : height;\n    if (maxHeight && newHeight > maxHeight) {\n      newHeight = maxHeight;\n    }\n    if (minHeight && newHeight < minHeight) {\n      newHeight = minHeight;\n    }\n    let newWidth = allowWidth\n      ? e.clientX - this.ref.current.offsetLeft\n      : width;\n    if (maxWidth && newWidth > maxWidth) {\n      newWidth = maxWidth;\n    }\n    if (minWidth && newWidth < minWidth) {\n      newWidth = minWidth;\n    }\n    onUpdate({\n      width: newWidth,\n      height: newHeight\n    });\n  }\n\n  endResize() {\n    window.removeEventListener('mousemove', this.resize);\n    window.removeEventListener('mouseup', this.endResize);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  startResize(e) {\n    if (e.target.contains(this.ref.current)) {\n      window.addEventListener('mousemove', this.resize);\n      window.addEventListener('mouseup', this.endResize);\n    }\n  }\n\n\n  render() {\n    const {\n      width,\n      height,\n      disabled,\n      children,\n      className\n    } = this.props;\n    this.style = {\n      ...this.style,\n      width: `${width}px`,\n      height: `${height}px`\n    };\n    let finalClassName = `${styles.border} ${className || ''}`;\n    if (!disabled && this.allowWidth) {\n      finalClassName = `${finalClassName} ${styles.horizontal}`;\n      this.style.paddingRight = `${this.borderSize}px`;\n    }\n    if (!disabled && this.allowHeight) {\n      finalClassName = `${finalClassName} ${styles.vertical}`;\n      this.style.paddingBottom = `${this.borderSize}px`;\n    }\n    return (\n      <div\n        ref={this.ref}\n        className={finalClassName}\n        onMouseDown={!disabled ? this.startResize : null}\n        style={this.style}\n      >\n        { children }\n      </div>\n    );\n  }\n}\n\nexport default Border;\n","import React from 'react';\nimport Border from 'app/components/Border';\nimport styles from './Grid.module.scss';\n\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      layout,\n      borderSize\n    } = this.props;\n    this.ref = React.createRef();\n    this.borderSize = borderSize || 10;\n    this.layout = layout;\n    this.columns = layout\n      .reduce((cal, item) => {\n        const newCal = [...cal];\n        const { x } = item;\n        newCal[x] = [...(newCal[x] || []), item];\n        return newCal;\n      }, [])\n      .map(column => column || [])\n      .map(column => column.sort((a, b) => a.y - b.y));\n\n    this.state = {\n      data: this.columns.map((column) => {\n        return column.map((item) => {\n          return {\n            width: item.width,\n            height: item.height\n          };\n        });\n      })\n    };\n  }\n\n  componentDidMount() {\n    const { autoResize } = this.props;\n    if (autoResize) {\n      window.addEventListener('resize', this.onResize);\n      window.dispatchEvent(new Event('resize'));\n    }\n  }\n\n  componentWillUnmount() {\n    const { autoResize } = this.props;\n    if (autoResize) {\n      window.removeEventListener('resize', this.onResize);\n    }\n  }\n\n  onResize = () => {\n    this.updateFullState();\n  }\n\n  updateFullState = () => {\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\n    const { data } = this.state;\n    const newData = data.map((column, indexOfColumn) => {\n      return column.map((item, indexOfItem) => {\n        const sumOfWidth = data\n          .slice(0, -1)\n          .map(c => (c[0] || { width: 0 }))\n          .map(c => c.width)\n          .reduce((cal, val) => cal + val, 0);\n        const sumOfHeight = column\n          .slice(0, -1)\n          .map(c => c.height)\n          .reduce((cal, val) => cal + val, 0);\n        return {\n          width: indexOfColumn === data.length - 1 ? totalWidth - sumOfWidth : item.width,\n          height: indexOfItem === column.length - 1 ? totalHeight - sumOfHeight : item.height\n        };\n      });\n    });\n    this.setState({ data: newData });\n  }\n\n  updateGridState = ({\n    indexOfColumn, indexOfItem, width, height\n  }) => {\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\n    const { data } = this.state;\n    const newData = [...data];\n    if (width !== newData[indexOfColumn][0].width) {\n      newData[indexOfColumn] = newData[indexOfColumn]\n        .map((item) => {\n          return {\n            ...item,\n            width\n          };\n        });\n      newData[newData.length - 1] = newData[newData.length - 1].map((item) => {\n        return {\n          ...item,\n          width: totalWidth - width\n        };\n      });\n    } else if (height !== undefined && indexOfColumn !== undefined && indexOfItem !== undefined) {\n      newData[indexOfColumn][indexOfItem].height = height;\n      newData[indexOfColumn][newData[indexOfColumn].length - 1].height = totalHeight - newData[indexOfColumn][indexOfItem].height;\n    }\n    this.setState({ data: newData });\n  }\n\n  render() {\n    const { columns } = this;\n    const { children, totalWidth, totalHeight } = this.props;\n    const { data } = this.state;\n    return (\n      <div\n        className={styles.grid}\n        style={{\n          width: totalWidth,\n          height: totalHeight\n        }}\n        ref={this.ref}\n      >\n        {\n          columns.map((column, indexOfColumn) => {\n            const maxWidth = Math.max(...column.map(item => item.maxWidth || 0));\n            const minWidth = Math.min(...column.map(item => item.minWidth || 999999));\n            const isDisabledForWidth = indexOfColumn === columns.length - 1;\n            const finalWidth = isDisabledForWidth\n              ? data[indexOfColumn][0].width\n              : data[indexOfColumn][0].width + this.borderSize;\n            return (\n              <Border\n                allowWidth\n                borderSize={this.borderSize}\n                width={finalWidth}\n                maxWidth={maxWidth}\n                minWidth={minWidth}\n                onUpdate={({ width: w }) => this.updateGridState({\n                  indexOfColumn,\n                  width: w\n                })}\n                disabled={indexOfColumn === columns.length - 1}\n                key={JSON.stringify(column)}\n              >\n                {\n                  column.map((item, indexOfItem) => {\n                    const itemInData = data[indexOfColumn][indexOfItem];\n                    const itemInColumns = columns[indexOfColumn][indexOfItem];\n                    const isDisabled = indexOfItem === column.length - 1 || itemInColumns.static;\n                    return (\n                      <Border\n                        allowHeight\n                        borderSize={this.borderSize}\n                        width={itemInData.width}\n                        height={itemInData.height}\n                        maxHeight={itemInColumns.maxHeight}\n                        minHeight={itemInColumns.minHeight}\n                        onUpdate={({ width: w, height: h }) => this.updateGridState({\n                          indexOfItem,\n                          indexOfColumn,\n                          width: w,\n                          height: h\n                        })}\n                        disabled={isDisabled}\n                        key={JSON.stringify(item)}\n                      >\n                        { children.find(({ key }) => key === item.key) }\n                      </Border>\n                    );\n                  })\n                }\n              </Border>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './Grid.module.scss';\n\nconst GridItem = ({ children }) => (\n  <div className={styles.item}>\n    { children }\n  </div>\n);\n\nexport default GridItem;\n","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport styles from './CodeWidget.module.scss';\n\nconst CodeWidget = ({\n  handleCodeChange,\n  data,\n  mode,\n  theme\n}) => (\n  <AceEditor\n    className={styles.code}\n    showPrintMargin={false}\n    mode={mode}\n    theme={theme}\n    onChange={handleCodeChange}\n    value={data}\n    tabSize={2}\n    debounceChangePeriod={500}\n  />\n);\n\nexport default CodeWidget;\n","import React from 'react';\nimport styles from './ResultWidget.module.scss';\n\nconst ResultWidget = () => (\n  <div className={styles.result} id=\"result\" />\n);\n\nexport default ResultWidget;\n","import React from 'react';\nimport styles from './AnswerWidget.module.scss';\n\nconst AnswerWidget = () => (\n  <div id=\"answer\" className={styles.answer} />\n);\n\nexport default AnswerWidget;\n","const spy = (obj, methodName) => {\n  const origFn = obj[methodName];\n  let callHistory = [];\n  let calledWith = {};\n\n  const secret = Math.random().toFixed(4) + '';\n  obj[methodName] = (...args) => {\n    const result = origFn.apply(obj, args);\n    callHistory.push(args);\n    calledWith[args.join(secret)] = true;\n    return result;\n  };\n  return {\n    calledWith: (...args) => !!calledWith[args.join(secret)],\n    callCount: () => callHistory.length,\n    restore: () => (obj[methodName] = origFn)\n  };\n};\n\nexport default spy;\n","import { createHarness } from 'tape';\n\nconst tryCatchPatch = t => (description, testBlock) => {\n  try {\n    t.comment(description);\n    testBlock(t);\n  } catch (e) {\n    t.fail(e);\n  }\n};\n\nconst combinePatch = (tape, patches) => (...args) => {\n  const [cb] = args.slice(-1);\n  if (typeof cb !== 'function') {\n    throw new Error('should provide callback');\n  }\n  tape(...args.slice(0, -1), (t) => {\n    for (let key in patches) {\n      t[key] = patches[key](t);\n    }\n    try {\n      cb(t);\n    } catch (e) {\n      t.fail(e);\n    }\n  });\n};\n\nconst getPatchedTape = (onUpdate) => {\n  const harness = createHarness();\n  const stream = harness.createStream({ objectMode: true });\n  stream.on('data', onUpdate);\n  return combinePatch(harness, {\n    subtest: tryCatchPatch,\n    should: tryCatchPatch\n  });\n};\n\nexport default getPatchedTape ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { renderToString } from 'react-dom/server';\nimport sinon from 'sinon';\nimport vm from 'vm';\nimport spy from './spy';\nimport getPatchedTape from './tape';\n\nconst wrapCode = (code = '') => {\n  return code.replace(/for *\\(.*\\{|while *\\(.*\\{|do *\\{/g, (loopHead) => {\n    return `let count = 0;\n      const detector = (c) => {\n        if (c > 100000) {\n          throw new Error('infinite');\n        }\n      }\n      ${loopHead}\n      detector(count++);\n    `;\n  });\n};\n\nconst runCode = ({ code, wrappedConsole = console, onTapeUpdate }) => {\n  let script = null;\n  let context = null;\n  const clock = sinon.useFakeTimers();\n  let test = null;\n  if (onTapeUpdate) {\n    test = getPatchedTape(onTapeUpdate);\n  }\n  // should hijack setTimeout before pass to sandbox\n  const sandbox = {\n    setTimeout: window.setTimeout, // need to be passed also...\n    console: wrappedConsole,\n    sinon,\n    describe: test,\n    test,\n    clock,\n    spy,\n    React,\n    ReactDOM,\n    root: document.getElementById('result'),\n    answer: document.getElementById('answer'),\n    renderToString\n  };\n  try {\n    script = new vm.Script(wrapCode(code));\n    // eslint-disable-next-line\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n  } catch (e) {\n    script = new vm.Script(wrapCode(''));\n    // eslint-disable-next-line\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n    wrappedConsole.log(e);\n  }\n  clock.restore();\n};\n\n// const debouncedRunCode = _.debounce(runCode, 200);\n\nexport default runCode;\n","import javascript from './javascript';\nimport react from './react';\n\nconst Questions = {\n  javascript,\n  react\n};\n\nconst getCategories = () => Object.keys(Questions).map((name) => { return { name }; });\n\nconst getQuestions = type => Questions[type];\n\nexport {\n  getCategories,\n  getQuestions\n};\n","const questionList = [\n  {\n    name: 'countChar',\n    content: `\n/**\n * Implement the function 'countChar'\n * to count the occurance of each character for the input string,\n * and return an object containing those information.\n *\n * For example :\n *  input string: 'abca'\n *\n *  returned object:\n *  {\n *     a: 2,\n *     b: 1,\n *     c: 1\n *  }\n */\n\n/**\n * Implement function body\n */\nfunction countChar(s) {\n\n}\n\n`,\n    test: `\ntest('countChar test', (t) => {\n  t.subtest('should return character count in an object', t => {\n    const result = countChar();\n    t.equal(typeof result, 'object');\n  });\n  t.subtest('should be able to count chars', t => {\n    const input = 'abca';\n    const result = countChar(input);\n    t.equal(result.a, 2);\n    t.equal(result.b, 1);\n  });\n  t.subtest('should be able count some longer string as well', t => {\n    const input = 'The Quick Brown Fox Jumps Over The Lazy Dog';\n    const result = countChar(input);\n    t.equal(result[' '], 8);\n    t.equal(result.T, 2);\n    t.equal(result.o, 3);\n  });\n})\n\n`\n  },\n  {\n    name: 'forEach, map and reduce',\n    content: `\n/**\n * Implement the function 'forEach, map and reduce'\n *\n */\n\n/**\n * Implement function body\n */\nconst myForEach = function (array, callback) {\n\n}\n\nconst myMap = function (array, callback) {\n\n}\n\nconst myReduce = function (array, callback, initValue) {\n\n}\n\n`,\n    test: `\ntest('forEach, map and reduce test', (t) => {\n  t.subtest('should execute forEach correctly', t => {\n    let count = 0;\n    myForEach([1, 2, 3, 4], (val, index) => count += val * index * index);\n    t.equal(count, 50);\n  });\n  t.subtest('should execute map correctly', t => {\n    const result = myMap([1, 2, 3, 4], (val, index) => val * index * index);\n    t.equal(result[0], 0);\n    t.equal(result[2], 12);\n  });\n  t.subtest('should execute reduce correctly', t => {\n    const result = myReduce([10, 2, 3], (cal, val, index) => cal + val * index, 0);\n    t.equal(result, 8);\n  });\n});\n\n`\n  },\n  {\n    name: 'adder',\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *   addTen = adder(10)\n *   addFive = adder(5)\n *\n *   addTen(10)  // return 20\n *   addFive(10) // return 15\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should be able to add two numbers', t => {\n    const add5 = adder(5);\n    t.equal(add5(10), 15);\n    t.equal(add5(20), 25);\n\n    t.equal(adder(40)(2), 42);\n  });\n})\n\n`\n  },\n  {\n    name: 'infinite adder',\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *\n *   adder(10)(20)(30).getValue()  // return 60\n *   adder(10)(20)(30)(40).getValue() // return 100\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should get default value with 0', t => {\n    t.equal(adder().getValue(), 0);\n  });\n  t.subtest('should be able to add mutiple numbers', t => {\n    t.equal(adder(10).getValue(), 10);\n    t.equal(adder(10)(20)(30).getValue(), 60);\n    t.equal(adder(10)(20)(30)(40).getValue(), 100);\n  });\n})\n\n`\n  },\n  {\n    name: 'default function',\n    content: `\n/**\n * Implement a function 'defaultWith'\n * which behavior is like the following example\n *\n * ex:\n *\n *   const fn = ({ a, b }) => a + b;\n *   const boundFn = defaultWith(fn, { a: 10 });\n *   boundFn({ b: 20 }); // return 30\n*/\n\n/**\n * Implement function body\n */\nfunction defaultWith() {\n}\n\n`,\n    test: `\ntest('defaultWith test', (t) => {\n  t.subtest('should return a function', t => {\n    const fn = () => {};\n    t.equal(typeof defaultWith(fn, {}), 'function');\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ a, b }) => a * 2 + b * 3;\n    const boundFn = defaultWith(fn, { a: 3 });\n    t.equal(boundFn({ b: 4 }), 18);\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ x, y, z }) => x * y * z;\n    const boundFn = defaultWith(fn, { x: 3, y: 4 });\n    t.equal(boundFn({ x: 7, z: 2 }), 56);\n  });\n})\n\n`\n  },\n  {\n    name: 'sequential',\n    content: `\n/**\n * Implement the function 'sequential'\n * to execute async functions in sequence.\n *\n * 'sequential' takes an array of async functions as parameter,\n * and execute each of them after previous one has done.\n */\n\n/**\n * Implement function body\n */\nfunction sequential(tasks = []) {\n\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('sequential test', (t) => {\n  const log = spy(console, 'log');\n  sequential(tasks);\n  t.equal(log.callCount(), 0);\n  clock.tick(600);\n  t.equal(log.callCount(), 1);\n  t.ok(log.calledWith('task 1 done'));\n  clock.tick(600);\n  t.equal(log.callCount(), 3);\n  t.ok(log.calledWith('task 3 done'));\n});\n\n    `\n  },\n  {\n    name: 'parallel',\n    content: `\n/**\n * Implement the function 'parallel'\n * to execute async functions at once.\n *\n * 'parallel' takes an array of async functions as parameter,\n * and execute each of them in the same time.\n *\n */\n\n/**\n * Implement function body\n */\nfunction parallel(tasks = [], callback) {\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('parallel test', t => {\n  t.subtest('should run all tasks at once', t => {\n    const spyLog = spy(console, 'log');\n    parallel(tasks, (result) => { /* do nothing */ });\n    t.equal(spyLog.callCount(), 0);\n    clock.tick(600);\n    t.equal(spyLog.callCount(), 3);\n  });\n\n  t.subtest('should get task result in an array', t => {\n    let obj = {};\n    parallel(tasks, (result) => {\n      obj.result = result;\n    });\n    clock.tick(600);\n    t.deepEqual(obj.result, [1, 2, 3]);\n  });\n\n  t.subtest('should trigger callback only once', t => {\n    let count = 0;\n    const callback = () => count++;\n\n    parallel(tasks, callback);\n    clock.tick(300);\n    t.equal(count, 0);\n    clock.tick(600);\n    t.equal(count, 1);\n  });\n});\n\n`\n  },\n  {\n    name: 'combineReducers',\n    content: `\n// http://redux.js.org/docs/api/combineReducers.html\nfunction combineReducers(reducers) {\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nfunction calledCount(state = 0, action) {\n  if(action.type == 'CALL') {\n    return state + 1;\n  }\n  return state;\n}\n\n`,\n    test: `\ntest('combineReducers', t => {\n  const reducer = combineReducers({\n    calc: calc,\n    calls: calledCount,\n  });\n\n  t.subtest('should init states', t => {\n    let state = {};\n    state = reducer(state, {type: ''});\n    t.equal(state.calc, 0);\n    t.equal(state.calls, 0);\n  });\n\n  t.subtest('should handle actions', t => {\n    let state = {};\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 1);\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 2);\n  });\n})\n`\n  },\n  {\n    name: 'applyMiddleware',\n    content: `\n// http://redux.js.org/docs/api/applyMiddleware.html\n\nfunction applyMiddleware(...middlewares) {\n  return createStore => (...args) => {\n    const store = createStore(...args);\n    let dispatch = store.dispatch;\n    /**************************\n     implement              here\n     **************************/\n\n\n\n\n    /***************************/\n    return Object.assign(store, { dispatch })\n  }\n}\n\n`,\n    test: `\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  if (typeof enhancer !== 'undefined') {\n    return enhancer(createStore)(reducer, preloadedState)\n  }\n\n  let currentReducer = reducer;\n  let currentState = preloadedState;\n\n  function getState() {\n    return currentState;\n  }\n\n  function dispatch(action) {\n    currentState = currentReducer(currentState, action);\n  }\n\n  dispatch({ type: '@@INIT' });\n\n  return {\n    dispatch,\n    getState\n  };\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst thunk = ({ getState, dispatch }) => next => action => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n  return next(action);\n}\n\ntest('applyMiddleware test', t => {\n\n  t.subtest('should execute normal action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute function action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n\n  t.subtest('should apply mutiple middlewares in the right order', t => {\n    let logCount = 1;\n    const log = () => next => action => {\n      logCount += 1;\n      next(action);\n    }\n    const log2 = () => next => action => {\n      logCount *= 2;\n      next(action);\n    }\n    const store = createStore(calc, 0, applyMiddleware(log, log2));\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(logCount, 22);\n  });\n})\n`\n  },\n  {\n    name: 'createStore',\n    content: `\n// http://redux.js.org/docs/api/createStore.html\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  function getState() {\n\n  }\n\n  function subscribe(listener) {\n\n  }\n\n  function dispatch(action) {\n\n  }\n\n  dispatch({ type: '@@INIT' })\n\n  return {\n    dispatch,\n    subscribe,\n    getState\n  }\n}\n\n\n`,\n    test: `\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst wrappedThunk = (createStore) => {\n  return function (...args) {\n    const store = createStore(...args);\n    const { dispatch, getState } = store;\n    store.dispatch = (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n      dispatch(action);\n    }\n    return store;\n  }\n}\n\ntest('createStore test', t => {\n\n  t.subtest('should execute getState successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n  });\n\n  t.subtest('should execute dispatch successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute subscribe and unsubscribe successfully', t => {\n    const store = createStore(calc, 0);\n    let dispatchCount = 1;\n    let dispatchCount2 = 3;\n    const unsubscribeForCount = store.subscribe(() => dispatchCount *= 2);\n    const unsubscribeForCount2 = store.subscribe(() => dispatchCount2 *= 2);\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 24);\n    unsubscribeForCount();\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    unsubscribeForCount2();\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 96);\n  });\n\n  t.subtest('should execute enhancer successfully', t => {\n    const store = createStore(calc, 0, wrappedThunk);\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n})\n`\n  },\n  {\n    name: 'explain',\n    content: `\n// explain the purpose of following code;\n// modify variable name and/or code style when appropriate;\n// add comments where you see fit\nfunction foo(a, b) {\n  var c = [];\n  for(var i0 = 0, i1 = 0; i0 < a.length && i1 < b.length; ) {\n    if(a[i0] < b[i1]) {\n      c.push(a[i0++]);\n    }\n    if(a[i0] >= b[i1]) {\n      c.push(b[i1++]);\n    }\n  }\n  if(i0 < a.length) {\n    for(var i = i0; i < a.length; i++) {\n      c.push(a[i]);\n    }\n  }\n  if(i1 < b.length) {\n    for(var i = i1; i < b.length; i++) {\n      c.push(b[i]);\n    }\n  }\n  return c;\n}\n\nconsole.log(foo([1,4,5], [2,3,6]))\n`\n  },\n  {\n    name: 'mergeSort',\n    content: `\n// implement function merge, so mergeSort can run correctly\nfunction merge(arr1, arr2) {\n  // TODO enter your code here\n  return arr1;\n}\n\nfunction mergeSort(arr) {\n  if(arr.length <= 1) {\n    return arr;\n  }\n  const mid = Math.floor(arr.length / 2);\n  const sortedArr1 = mergeSort(arr.slice(0, mid));\n  const sortedArr2 = mergeSort(arr.slice(mid));\n  return merge(sortedArr1, sortedArr2);\n}\n\n`,\n    test: `\ntest('mergeSort', t => {\n  t.deepEqual(mergeSort([6,3,5,10,2,100,4,1]),[1,2,3,4,5,6,10,100]);\n  const randomNumbers = Array.from({length: 20})\n    .map(() => Math.floor(Math.random() * 100));\n  const sorted = randomNumbers.slice(0).sort((a, b) => a - b);\n  t.deepEqual(mergeSort(randomNumbers), sorted);\n})\n`\n  },\n];\n\nexport default questionList;\n","const questionList = [\n  {\n    name: 'Search',\n    content: `\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n\nconst search = (query) => new Promise((resolve, reject) => {\n  const result = DATA.filter(({ name }) => name.includes(query.toLowerCase()));\n  if (result.length !== 0) {\n    resolve(result);\n  } else {\n    reject(new Error('not found'));\n  }\n});\n\nconst Item = ({ name, price }) => (\n  <div>\n    { name }: { price }$ \n  </div>\n);\n\nconst DATA = [\n  {\n    name: 'apple',\n    price: 10,\n    id: 1\n  },\n  {\n    name: 'orange',\n    price: 15,\n    id: 2\n  },\n  {\n    name: 'banana',\n    price: 7,\n    id: 3\n  },\n]\n\n`,\n    test: `\nclass AnswerApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '', data: [] };\n  }\n  changeValue = async (name) => {\n    this.setState({ value: name });\n    if (name.trim() === '') {\n      this.setState({ data: [] });\n      return;\n    }\n    try {\n      const result = await search(name);\n      this.setState({ data: result });\n    } catch (e) {\n      this.setState({ data: [] });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>Hi, I want to buy { this.state.value }</div>\n        <input onChange={e => this.changeValue(e.target.value)}/>\n        <div>\n          {\n            this.state.data.map(({ price, name, id }) => <Item price={price} name={name} key={id} /> )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <AnswerApp />,\n  answer\n);\n\ntry {\n  renderToString(\n    <App />\n  );\n  ReactDOM.render(\n    <App/>,\n    root\n  )\n} catch (e) {\n  console.log(e)\n}\n\n`\n  },\n];\n\nexport default questionList;\n","import React from 'react';\nimport { Select } from 'antd';\n\nimport { getCategories } from 'app/questions/index';\n\nconst categories = getCategories();\nconst { Option } = Select;\n\nconst CategorySelector = ({ index, onChange }) => (\n  <Select\n    onChange={onChange}\n    defaultValue={index}\n    style={{ minWidth: 200 }}\n  >\n    { categories.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\n  </Select>\n);\n\nexport default CategorySelector;\n","import React from 'react';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\n\nimport { Button, Input } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\n\nconst ControlWidget = ({\n  index,\n  onChangeName,\n  onSubmit,\n  onChangeCategory\n}) => (\n  <div className={styles.control}>\n    <CategorySelector onChange={onChangeCategory} index={index} />\n    <Input\n      placeholder=\"Question name\"\n      onChange={e => onChangeName(e.target.value)}\n      style={{ width: 200, marginRight: 5 }}\n    />\n    <Button\n      type=\"danger\"\n      onClick={onSubmit}\n    >\n      Submit\n    </Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport { Tag, Input, Tooltip, Icon } from 'antd';\n\nimport styles from './TagWidget.module.scss';\n\nclass TagWidget extends Component {\n  state = {\n    inputVisible: false,\n    inputValue: '',\n  };\n\n  handleClose = (removedTag) => {\n    const { data: tags, onTagUpdate } = this.props;\n    onTagUpdate(tags.filter(tag => tag !== removedTag));\n  }\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ inputValue: e.target.value });\n  }\n\n  handleInputConfirm = () => {\n    const { onTagUpdate, data: tags } = this.props;\n    const { inputValue } = this.state;\n    let newTags = [...tags];\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      newTags = [...newTags, inputValue];\n    }\n    onTagUpdate(newTags);\n    this.setState({ inputValue: '', inputVisible: false });\n  }\n\n  saveInputRef = input => this.input = input\n\n  render() {\n    const { inputVisible, inputValue } = this.state;\n    const { data: tags } = this.props;\n    return (\n      <div className={styles['tag-widget']}>\n        {tags.map((tag, index) => {\n          const isLongTag = tag.length > 20;\n          const tagElem = (\n            <Tag key={tag} closable afterClose={() => this.handleClose(tag)}>\n              {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n            </Tag>\n          );\n          return isLongTag ? <Tooltip title={tag} key={tag}>{tagElem}</Tooltip> : tagElem;\n        })}\n        {inputVisible && (\n          <Input\n            ref={this.saveInputRef}\n            type=\"text\"\n            size=\"small\"\n            style={{ width: 78 }}\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag\n            onClick={this.showInput}\n            style={{ background: '#fff', borderStyle: 'dashed' }}\n          >\n            <Icon type=\"plus\" />\n            New Tag\n          </Tag>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TagWidget;","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './ReactPage.module.scss';\n\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      name: '',\n      tags: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    const { compiledCode } = this.state;\n    debouncedRunCode({ code: compiledCode });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      // this.setState({ tape: [] }, () => {\n      debouncedRunCode({ code: compiledCode });\n      // });\n    }\n    return true;\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      name,\n      code,\n      test\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      tags,\n      name,\n      code,\n      test,\n      type: 'react'\n    });\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tags,\n      isLoading\n    } = this.state;\n    const { onChangeCategory, index } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 3, width: window.innerWidth / 2, height: 200, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>     \n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"jsx\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ test: newCode }, this.onCodeChange);\n                }}\n                data={test}\n                mode=\"jsx\"\n                theme=\"textmate\"\n              />\n            </GridItem>\n            <GridItem key=\"answer\">\n              <AnswerWidget />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                onChangeName={(name) => { this.setState({ name })}}\n                onSubmit={this.onSubmit}\n                type=\"react\"\n                onChangeCategory={onChangeCategory}\n                index={index}\n              />\n            </GridItem>\n            <GridItem key=\"result\">\n              <ResultWidget />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default ReactPage;\n","import React from 'react';\nimport AceEditor from 'react-ace';\nimport styles from './TestWidget.module.scss';\n\nconst TestWidget = ({ data, readOnly = true, handleCodeChange = () => {} }) => (\n  <div\n    className={`${styles['test-widget']}`}\n  >\n    <AceEditor\n      showPrintMargin={false}\n      mode=\"javascript\"\n      theme=\"textmate\"\n      value={data}\n      readOnly={readOnly}\n      tabSize={2}\n      onChange={handleCodeChange}\n    />\n  </div>\n);\n\nexport default TestWidget;\n","import React from 'react';\nimport styles from './TapeWidget.module.scss';\n\nconst TestRow = row => (\n  <div className={styles.test}>\n    { row.name }\n  </div>\n);\n\nconst AssertRow = (row) => {\n  const actual = typeof row.actual === 'object' ? JSON.stringify(row.actual) : `${row.actual}`;\n  const expected = typeof row.expected === 'object' ? JSON.stringify(row.expected) : `${row.expected}`;\n  return (\n    <div className={`${styles.assert} ${row.ok ? styles.ok : styles.fail}`}>\n      <div className={row.ok ? styles.ok : styles.fail}>{row.ok ? 'OK' : 'FAIL'}</div>\n      { row.name ? <div className={styles.name}>{ `${row.name}` }</div> : null }\n      {\n        !row.ok\n          ? (\n            <>\n              <div className={styles.actual}>{ actual }</div>\n              <div className={styles['not-equal']}>!=</div>\n              <div className={styles.expected}>{ expected }</div>\n              {\n                typeof row.actual === 'string' && typeof row.expected === 'string'\n                  ? (\n                    <div className={styles.diff}>\n                      <span className={styles.expected}>{ expected }</span>\n                      <span className={styles.actual}>{ actual }</span>\n                    </div>\n                  )\n                  : null\n              }\n            </>\n          )\n          : null\n      }\n    </div>\n  );\n};\n\n// TODO: add endrow component\nconst EndRow = row => (\n  <div>\n    { JSON.stringify(row) }\n  </div>\n);\n\nconst DescriptionRow = ({ description }) => (\n  <div className={styles.description}>\n    { description }\n  </div>\n);\n\nconst getRow = (row) => {\n  switch (row.type) {\n    case 'test':\n      return <TestRow key={JSON.stringify(row)} {...row} />;\n    case 'assert':\n      return <AssertRow key={JSON.stringify(row)} {...row} />;\n    case 'end':\n      return <EndRow key={JSON.stringify(row)} {...row} />;\n    case undefined && typeof row === 'string':\n      return <DescriptionRow description={row} key={row} />;\n    default:\n      return null;\n  }\n};\n\nconst TapeWidget = ({ data }) => {\n  return (\n    <div className={styles.tape}>{ data.map(getRow) }</div>\n  );\n};\n\nexport default TapeWidget;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\n\nimport { changeCategory } from 'app/actions/category';\n\nimport { getCategories } from 'app/questions/index';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './JavaScriptPage.module.scss';\n\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      tape: [],\n      name: '',\n      tags: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    const { compiledCode } = this.state;\n    const { actions } = this.props;\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      this.setState({ tape: [] }, () => {\n        debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n      });\n    }\n    return true;\n  }\n\n  addTape = (data) => {\n    const { tape } = this.state;\n    this.setState({\n      tape: [...tape, data]\n    });\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      name,\n      code,\n      test\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      tags,\n      name,\n      code,\n      test,\n      type: 'javascript'\n    });\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tape,\n      tags,\n      isLoading\n    } = this.state;\n    const { onChangeCategory, index } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"javascript\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <TestWidget\n                handleCodeChange={(newTest) => {\n                  this.setState({ test: newTest }, this.onCodeChange);\n                }}\n                data={test}\n                readOnly={false}\n              />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"javascript\"\n                onChangeName={(name) => { this.setState({ name })}}\n                onSubmit={this.onSubmit}\n                onChangeCategory={onChangeCategory}\n                index={index}\n              />\n            </GridItem>\n            <GridItem key=\"tape\">\n              <TapeWidget data={tape} />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default JavaScriptPage;\n","import React, { Component } from 'react';\n\nimport { createQuestion } from 'app/utils/question';\n\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\nconst getPageComponent = (args) => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { category: 0 };\n  }\n\n  componentDidMount() {\n    const { state, history } = this.props;\n    // if (!state.login.isLogin) {\n    //   history.push('/login');\n    //   return;\n    // }\n  }\n\n  onChangeCategory = (index) => {\n    this.setState({ category: index });\n  }\n\n  onSubmit = async (data) => {\n    try {\n      await createQuestion(data);\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  render() {\n    const { category } = this.state;\n    return (\n      <React.Fragment>\n        { getPageComponent({ index: category, onSubmit: this.onSubmit, onChangeCategory: this.onChangeCategory }) }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Page;\n","import React from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\n// const QuestionSelector = ({ actions, state }) => {\n//   const {\n//     questionIndex,\n//     type,\n//     questions\n//   } = getStateInformation(state);\n//   return (\n//     <Select\n//       onChange={index => actions.changeQuestion({ index, type: type.toUpperCase() })}\n//       defaultValue={questionIndex}\n//       style={{ minWidth: 200 }}\n//     >\n//       { questions.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\n//     </Select>\n//   );\n// };\n\nconst QuestionSelector = ({ index, onChange, list }) => (\n  <Select\n    onChange={onChange}\n    defaultValue={index}\n    style={{ minWidth: 200 }}\n  >\n    { list.map((q, i) => <Option key={q.id} value={i}>{q.name}</Option>)}\n  </Select>\n);\n\nexport default QuestionSelector;\n","import React from 'react';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\n\nimport { Button } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\n\nconst ControlWidget = ({\n  categoryIndex,\n  questionIndex,\n  onSubmit,\n  onChangeCategory,\n  onChangeQuestion,\n  questionList\n}) => (\n  <div className={styles.control}>\n    <CategorySelector onChange={onChangeCategory} index={categoryIndex} />\n    <QuestionSelector onChange={onChangeQuestion} index={questionIndex} list={questionList} />\n    <Button\n      type=\"danger\"\n      onClick={onSubmit}\n    >\n      Submit\n    </Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport { listQuestions, getQuestion } from 'app/utils/question';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './ReactPage.module.scss';\n\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      name: '',\n      tags: [],\n      index: 0,\n      questionList: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    const { compiledCode } = this.state;\n    this.setState({ isLoading: true });\n    const result = await listQuestions('react');\n    this.setState({ questionList: result.data.listQuestions.items, isLoading: false });\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      // this.setState({ tape: [] }, () => {\n      debouncedRunCode({ code: compiledCode });\n      // });\n    }\n    return true;\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      code,\n      test,\n      id\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      id,\n      tags,\n      code,\n      test\n    });\n    this.setState({ isLoading: false });\n  }\n\n  onChangeQuestion = async (index) => {\n    const { questionList } = this.state;\n    const { id } = questionList[index];\n    this.setState({ isLoading: true, index });\n    const result = await getQuestion({ id });\n    const { tags, content: code, test } = result.data.getQuestion;\n    this.setState({\n      tags,\n      code,\n      test,\n      isLoading: false,\n      id\n    });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tags,\n      isLoading,\n      questionList,\n      index\n    } = this.state;\n    const { onChangeCategory, categoryIndex } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 3, width: window.innerWidth / 2, height: 200, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>    \n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"jsx\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ test: newCode }, this.onCodeChange);\n                }}\n                data={test}\n                mode=\"jsx\"\n                theme=\"textmate\"\n              />\n            </GridItem>\n            <GridItem key=\"answer\">\n              <AnswerWidget />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"react\"\n                onChangeName={name => this.setState({ name })}\n                onSubmit={this.onSubmit}\n                onChangeCategory={onChangeCategory}\n                categoryIndex={categoryIndex}\n                questionIndex={index}\n                questionList={questionList}\n                onChangeQuestion={this.onChangeQuestion}\n              />\n            </GridItem>\n            <GridItem key=\"result\">\n              <ResultWidget />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate}/>\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default ReactPage;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\n\nimport { changeCategory } from 'app/actions/category';\n\nimport { getCategories } from 'app/questions/index';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport { listQuestions, getQuestion } from 'app/utils/question';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './JavaScriptPage.module.scss';\n\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      tape: [],\n      tags: [],\n      id: null,\n      questionList: [],\n      isLoading: false,\n      index: 0\n    };\n  }\n\n  async componentDidMount() {\n    const { compiledCode } = this.state;\n    this.setState({ isLoading: true });\n    const result = await listQuestions('javascript');\n    this.setState({ questionList: result.data.listQuestions.items, isLoading: false });\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      this.setState({ tape: [] }, () => {\n        debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n      });\n    }\n    return true;\n  }\n\n  addTape = (data) => {\n    const { tape } = this.state;\n    this.setState({\n      tape: [...tape, data]\n    });\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      code,\n      test,\n      id\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      id,\n      tags,\n      code,\n      test\n    });\n    this.setState({ isLoading: false });\n  }\n\n  onChangeQuestion = async (index) => {\n    const { questionList } = this.state;\n    const { id } = questionList[index];\n    this.setState({ isLoading: true, index });\n    const result = await getQuestion({ id });\n    const { tags, content: code, test } = result.data.getQuestion;\n    this.setState({\n      tags,\n      code,\n      test,\n      isLoading: false,\n      id\n    });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tape,\n      tags,\n      questionList,\n      isLoading,\n      index\n    } = this.state;\n    const { onChangeCategory, categoryIndex } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"javascript\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <TestWidget\n                handleCodeChange={(newTest) => {\n                  this.setState({ test: newTest }, this.onCodeChange);\n                }}\n                data={test}\n                readOnly={false}\n              />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"javascript\"\n                onChangeName={name => this.setState({ name })}\n                onSubmit={this.onSubmit}\n                onChangeCategory={onChangeCategory}\n                categoryIndex={categoryIndex}\n                questionIndex={index}\n                questionList={questionList}\n                onChangeQuestion={this.onChangeQuestion}\n              />\n            </GridItem>\n            <GridItem key=\"tape\">\n              <TapeWidget data={tape} />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default JavaScriptPage;\n","import React, { Component } from 'react';\n\nimport { updateQuestion } from 'app/utils/question';\n\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\n\nconst getPageComponent = (args) => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { category: 0 };\n  }\n\n  componentDidMount() {\n    const { state, history } = this.props;\n    // if (!state.login.isLogin) {\n    //   history.push('/login');\n    //   return;\n    // }\n  }\n\n  onChangeCategory = (index) => {\n    this.setState({ category: index });\n  }\n\n  onSubmit = async (data) => {\n    try {\n      await updateQuestion(data);\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  render() {\n    const { category } = this.state;\n    return (\n      <React.Fragment>\n        {\n          getPageComponent({\n            index: category,\n            onSubmit: this.onSubmit,\n            onChangeCategory: this.onChangeCategory,\n            categoryIndex: category\n          })\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Page;\n","import Amplify, { API, graphqlOperation } from 'aws-amplify';\nimport awsExportConfig from 'aws-exports';\nimport * as mutations from '../../graphql/mutations.js';\nimport * as subscriptions from '../../graphql/subscriptions.js';\n\nAmplify.configure(awsExportConfig);\n\nconst createRecord = async () => {\n  const params = {\n    input: {\n      subjectId: 'interviewee01',\n      history: [],\n      timeBegin: parseInt(new Date().getTime() / 1000, 10) // must to be Int\n    }\n  };\n  const { data } = await API.graphql(\n    graphqlOperation(mutations.createRecord, params)\n  );\n  return data.createRecord;\n};\nconst updateRecord = async (id, newHistory) => {\n  const params = {\n    input: {\n      id,\n      history: [newHistory],\n      timeEnd: parseInt(new Date().getTime() / 1000, 10) // must to be Int\n    }\n  };\n  const result = await API.graphql(\n    graphqlOperation(mutations.updateRecord, params)\n  );\n  return result;\n};\n\nconst subscribeOnCreateRecord = async (callback) => {\n  API.graphql(graphqlOperation(subscriptions.onCreateRecord)).subscribe({\n    next: ({ value }) => {\n      callback(value.data.onCreateRecord);\n    }\n  });\n};\n\nconst subscribeOnUpdateRecord = async (callback) => {\n  API.graphql(graphqlOperation(subscriptions.onUpdateRecord)).subscribe({\n    next: ({ value }) => {\n      callback(value.data.onUpdateRecord);\n    }\n  });\n};\nexport {\n  createRecord,\n  updateRecord,\n  subscribeOnCreateRecord,\n  subscribeOnUpdateRecord\n};\n","import React from 'react';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\n\nimport { Button } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\n\nconst ControlWidget = ({\n  categoryIndex,\n  questionIndex,\n  onDispatchQuestion,\n  onChangeCategory,\n  onChangeQuestion,\n  questionList\n}) => (\n  <div className={styles.control}>\n    <CategorySelector onChange={onChangeCategory} index={categoryIndex} />\n    <QuestionSelector onChange={onChangeQuestion} index={questionIndex} list={questionList} />\n    <Button\n      type=\"danger\"\n      onClick={onDispatchQuestion}\n    >\n    Dispatch Question\n    </Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport { listQuestions, getQuestion } from 'app/utils/question';\nimport debouncedRunCode from 'app/utils/runCode';\nimport { subscribeOnUpdateRecord } from 'app/utils/record';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './ReactPage.module.scss';\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      name: '',\n      tags: [],\n      index: 0,\n      questionList: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    const { compiledCode } = this.state;\n    this.setState({ isLoading: true });\n    const result = await listQuestions('react');\n    this.setState({\n      questionList: result.data.listQuestions.items,\n      isLoading: false\n    });\n    this.subscribeOnUpdateRecord();\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n    }\n    return true;\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: [\n          'es2015',\n          ['stage-2', { decoratorsBeforeExport: true }],\n          'react'\n        ],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  onTagUpdate = tags => {\n    this.setState({ tags });\n  };\n\n  onDispatchQuestion = async () => {\n    const { name, type, tags, code, test, id } = this.state;\n    const { onDispatchQuestion } = this.props;\n    console.log('onDispatchQuestion!', this.state);\n    this.setState({ isLoading: true });\n    await onDispatchQuestion({\n      name,\n      type,\n      content: code,\n      test\n    });\n    this.setState({ isLoading: false });\n  };\n\n  onChangeQuestion = async index => {\n    const { questionList } = this.state;\n    const { id, name, type } = questionList[index];\n    this.setState({ isLoading: true, index });\n    const result = await getQuestion({ id });\n    const { tags, content: code, test } = result.data.getQuestion;\n    this.setState({\n      name,\n      type,\n      tags,\n      code,\n      test,\n      isLoading: false,\n      id\n    });\n  };\n\n  subscribeOnUpdateRecord = () => {\n    subscribeOnUpdateRecord(data => {\n      const { id, history } = data;\n      const { recordId } = this.props;\n      if (id === recordId) {\n        console.log(data);\n        this.setState({ code: history[0] });\n      }\n    });\n  };\n\n  render() {\n    const { test, code, tags, isLoading, questionList, index } = this.state;\n    const { onChangeCategory, categoryIndex } = this.props;\n    const layout = [\n      {\n        key: 'code',\n        x: 0,\n        y: 0,\n        width: window.innerWidth / 2,\n        height: window.innerHeight / 2,\n        minWidth: 100,\n        minHeight: 100,\n        maxWidth: 700,\n        maxHeight: 500\n      },\n      {\n        key: 'test',\n        x: 0,\n        y: 1,\n        width: window.innerWidth / 2,\n        height: window.innerHeight / 2,\n        minWidth: 100,\n        maxWidth: 700\n      },\n      {\n        key: 'control',\n        x: 1,\n        y: 0,\n        width: window.innerWidth / 2,\n        height: this.controlHeight,\n        static: true\n      },\n      {\n        key: 'result',\n        x: 1,\n        y: 1,\n        width: window.innerWidth / 2,\n        height: (window.innerHeight - this.controlHeight) / 2 - 100,\n        minWidth: 100,\n        minHeight: 100,\n        maxWidth: 700,\n        maxHeight: 500\n      },\n      {\n        key: 'answer',\n        x: 1,\n        y: 2,\n        width: window.innerWidth / 2,\n        height: (window.innerHeight - this.controlHeight) / 2 - 100,\n        minWidth: 100,\n        minHeight: 100,\n        maxWidth: 700,\n        maxHeight: 500\n      },\n      {\n        key: 'tag',\n        x: 1,\n        y: 3,\n        width: window.innerWidth / 2,\n        height: 200,\n        minWidth: 100,\n        minHeight: 100,\n        maxWidth: 700,\n        maxHeight: 500\n      }\n    ];\n    return (\n      <div className={styles.app}>\n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={newCode => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"jsx\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <CodeWidget\n                handleCodeChange={newCode => {\n                  this.setState({ test: newCode }, this.onCodeChange);\n                }}\n                data={test}\n                mode=\"jsx\"\n                theme=\"textmate\"\n              />\n            </GridItem>\n            <GridItem key=\"answer\">\n              <AnswerWidget />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"react\"\n                onChangeName={name => this.setState({ name })}\n                onDispatchQuestion={this.onDispatchQuestion}\n                onChangeCategory={onChangeCategory}\n                categoryIndex={categoryIndex}\n                questionIndex={index}\n                questionList={questionList}\n                onChangeQuestion={this.onChangeQuestion}\n              />\n            </GridItem>\n            <GridItem key=\"result\">\n              <ResultWidget />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default ReactPage;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\n\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport { listQuestions, getQuestion } from 'app/utils/question';\nimport { subscribeOnUpdateRecord } from 'app/utils/record';\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './JavaScriptPage.module.scss';\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      tape: [],\n      tags: [],\n      id: null,\n      questionList: [],\n      isLoading: false,\n      index: 0\n    };\n  }\n\n  async componentDidMount() {\n    const { compiledCode } = this.state;\n    this.setState({ isLoading: true });\n    const result = await listQuestions('javascript');\n    this.setState({\n      questionList: result.data.listQuestions.items,\n      isLoading: false\n    });\n    this.onChangeQuestion(0);\n    this.subscribeOnUpdateRecord();\n\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      this.setState({ tape: [] }, () => {\n        debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n      });\n    }\n    return true;\n  }\n\n  addTape = data => {\n    const { tape } = this.state;\n    this.setState({\n      tape: [...tape, data]\n    });\n  };\n\n  onTagUpdate = tags => {\n    this.setState({ tags });\n  };\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: [\n          'es2015',\n          ['stage-2', { decoratorsBeforeExport: true }],\n          'react'\n        ],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  onDispatchQuestion = async () => {\n    const { name, type, tags, code, test, id } = this.state;\n    const { onDispatchQuestion } = this.props;\n    console.log('onDispatchQuestion!', this.state);\n    this.setState({ isLoading: true });\n    await onDispatchQuestion({\n      name,\n      type,\n      content: code,\n      test\n    });\n    this.setState({ isLoading: false });\n  };\n\n  onChangeQuestion = async index => {\n    const { questionList } = this.state;\n    const { id, name, type } = questionList[index];\n    this.setState({ isLoading: true, index });\n    const result = await getQuestion({ id });\n    const { tags, content: code, test } = result.data.getQuestion;\n    this.setState({\n      name,\n      type,\n      tags,\n      code,\n      test,\n      isLoading: false,\n      id\n    });\n  };\n\n  subscribeOnUpdateRecord = () => {\n    subscribeOnUpdateRecord(data => {\n      const { id, history } = data;\n      const { recordId } = this.props;\n      if (id === recordId) {\n        console.log(data);\n        this.setState({ code: history[0] });\n      }\n    });\n  };\n\n  render() {\n    const {\n      test,\n      code,\n      tape,\n      tags,\n      questionList,\n      isLoading,\n      index\n    } = this.state;\n    const { onChangeCategory, categoryIndex } = this.props;\n    const layout = [\n      {\n        key: 'code',\n        x: 0,\n        y: 0,\n        width: window.innerWidth / 2,\n        height: window.innerHeight / 2,\n        minWidth: 100,\n        minHeight: 100,\n        maxWidth: 700,\n        maxHeight: 500\n      },\n      {\n        key: 'test',\n        x: 0,\n        y: 1,\n        width: window.innerWidth / 2,\n        height: window.innerHeight / 2,\n        minWidth: 100,\n        maxWidth: 700\n      },\n      {\n        key: 'control',\n        x: 1,\n        y: 0,\n        width: window.innerWidth / 2,\n        height: this.controlHeight,\n        static: true\n      },\n      {\n        key: 'tape',\n        x: 1,\n        y: 1,\n        width: window.innerWidth / 2,\n        height: (window.innerHeight - this.controlHeight) / 2,\n        minWidth: 100,\n        minHeight: 100,\n        maxWidth: 700,\n        maxHeight: 500\n      },\n      {\n        key: 'tag',\n        x: 1,\n        y: 2,\n        width: window.innerWidth / 2,\n        height: (window.innerHeight - this.controlHeight) / 2,\n        minWidth: 100,\n        minHeight: 100,\n        maxWidth: 700,\n        maxHeight: 500\n      }\n    ];\n    return (\n      <div className={styles.app}>\n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={newCode => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"javascript\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <TestWidget\n                handleCodeChange={newTest => {\n                  this.setState({ test: newTest }, this.onCodeChange);\n                }}\n                data={test}\n                readOnly={false}\n              />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"javascript\"\n                onChangeName={name => this.setState({ name })}\n                onDispatchQuestion={this.onDispatchQuestion}\n                onChangeCategory={onChangeCategory}\n                categoryIndex={categoryIndex}\n                questionIndex={index}\n                questionList={questionList}\n                onChangeQuestion={this.onChangeQuestion}\n              />\n            </GridItem>\n            <GridItem key=\"tape\">\n              <TapeWidget data={tape} />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default JavaScriptPage;\n","import React, { Component } from 'react';\n\nimport { dispatchQuestion } from 'app/utils/question';\n\nimport {\n  createRecord,\n  subscribeOnCreateRecord\n} from 'app/utils/record';\n\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\nconst getPageComponent = args => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  state = {\n    category: 0,\n    recordId: ''\n  };\n\n  componentDidMount() {\n    this.subscribeOnCreateRecord();\n  }\n\n  onChangeCategory = index => {\n    this.setState({ category: index });\n  };\n\n  onDispatchQuestion = async data => {\n    try {\n      await dispatchQuestion(data);\n      this.createRecord();\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  createRecord = async () => {\n    try {\n      const result = await createRecord();\n      this.setState({ recordId: result.id });\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  subscribeOnCreateRecord = async () => {\n    try {\n      subscribeOnCreateRecord(data => {\n        const { id } = data;\n        this.setState({ recordId: id });\n      });\n    } catch (e) {\n      alert(e.message);\n    }\n  };\n\n  render() {\n    const { category, recordId } = this.state;\n    return (\n      <React.Fragment>\n        {getPageComponent({\n          index: category,\n          recordId,\n          onDispatchQuestion: this.onDispatchQuestion,\n          onChangeCategory: this.onChangeCategory,\n          onChangeCode: this.onChangeCode,\n          categoryIndex: category,\n        })}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Page;\n","import React, { Component } from 'react';\n\nconst NotFoundPage = () => (\n  <div>Not found</div>\n);\n\nexport default NotFoundPage;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Amplify from 'aws-amplify';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport AwsConfig from 'aws-exports';\n\nimport QuestionAddPage from 'app/pages/QuestionPage/AddPage';\nimport QuestionEditPage from 'app/pages/QuestionPage/EditPage';\nimport AdminQuestionDispatchPage from 'app/pages/QuestionPage/AdminQuestionDispatchPage';\nimport NotFoundPage from 'app/pages/NotFoundPage';\n\nAmplify.configure(AwsConfig);\n\nconst Question = ({ match }) => {\n  return (\n    <Switch>\n      <Route path={`${match.path}/add`} component={QuestionAddPage} />\n      <Route path={`${match.path}/edit`} component={QuestionEditPage} />\n      <Route\n        path={`${match.path}/dispatch`}\n        component={AdminQuestionDispatchPage}\n      />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n\nconst Admin = ({ match }) => {\n  return (\n    <Switch>\n      <Route path={`${match.path}/question`} render={Question} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n\nexport default withAuthenticator(Admin);\n","import React from 'react';\nimport { Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { submitPassword } from 'app/actions/login';\nimport styles from './LoginPage.module.scss';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { password: '', error: '' };\n  }\n\n  componentDidUpdate() {\n    const { isLogin, history } = this.props;\n    if (isLogin) {\n      history.push('/');\n    }\n  }\n\n  onSubmit = (e) => {\n    const { password } = this.state;\n    const { actions } = this.props;\n    e.preventDefault();\n    actions.submitPassword(password);\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <div className={styles.login}>\n        <form onSubmit={this.onSubmit}>\n          <div style={{ display: 'flex' }}>\n            <Input\n              placeholder=\"input the password to login\"\n              onChange={e => this.setState({ password: e.target.value })}\n              style={{ width: 200, marginRight: 5 }}\n            />\n            <Button type=\"primary\" htmlType=\"submit\">Login</Button>\n          </div>\n        </form>\n        <div className={styles.error}>{ error }</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      isLogin: state.login.isLogin\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        submitPassword: password => dispatch(submitPassword(password))\n      }\n    };\n  }\n)(LoginPage));\n","export function submitPassword(password) {\n  return {\n    type: 'LOGIN/LOGIN',\n    password\n  };\n}\n","const createWrappedConsole = (console, addConsole) => {\n  return Object.keys(console).reduce((cal, key) => {\n    const newCal = { ...cal };\n    newCal[key] = (...args) => {\n      addConsole(...args);\n    };\n    return newCal;\n  }, {});\n};\n\nexport default createWrappedConsole;\n","import React from 'react';\nimport styles from './ConsoleWidget.module.scss';\n\nconst isError = e => e && e.stack && e.message && typeof e.stack === 'string' && typeof e.message === 'string';\n\nconst Text = ({ text }) => <>{ `${text}`.trim() === '' ? <br /> : `${text}`.trim() }</>;\n\nconst ConsoleWidget = ({ data, className }) => (\n  <div className={`${styles['console-widget']} ${className || ''}`}>\n    Console:\n    {\n      data.map((text, index) => (\n        <div className={styles.console} key={index}>\n          <div className={styles.text}>\n            {\n              typeof text === 'object' && !isError(text)\n                ? JSON.stringify(text, null, 2)\n                : <Text text={text} />\n            }\n          </div>\n        </div>\n      ))\n    }\n  </div>\n);\n\nexport default ConsoleWidget;\n","import { getQuestions, getCategories } from 'app/questions/index';\n\nconst categories = getCategories();\n\nconst getStateInformation = (state) => {\n  const categoryIndex = state.category.index;\n  const type = categories[categoryIndex].name;\n  const questionIndex = state[type].index;\n  const questions = getQuestions(type);\n  const question = questions[questionIndex];\n  const { index, compiledCode } = state[type];\n  const code = (state[type][index] && state[type][index].code) || questions[questionIndex].content;\n  const remoteQuestion = state[type].remoteQuestion;\n\n  return {\n    type,\n    categoryIndex,\n    questionIndex,\n    questions,\n    question,\n    code,\n    compiledCode,\n    remoteQuestion\n  };\n};\n\nexport default getStateInformation;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { resetQuestion, changeQuestion } from 'app/actions/code';\nimport { changeCategory } from 'app/actions/category';\n\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\n\nimport { getStateInformation } from 'app/utils/stateHelper';\n\nimport { Button } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\nconst ControlWidget = ({\n  onReset,\n}) => (\n  <div className={styles.control}>\n    <Button type=\"danger\" onClick={onReset}>Reset</Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport ConsoleWidget from 'app/components/Widgets/ConsoleWidget';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ControlWidget from '../ControlWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\n\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport styles from './ReactPage.module.scss';\n\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n  }\n\n  componentDidMount() {\n    const { compiledCode, wrappedConsole, resetConsole } = this.props;\n    resetConsole();\n    debouncedRunCode({ code: compiledCode, wrappedConsole });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { compiledCode: previousCompiledCode } = this.props;\n    const { compiledCode, wrappedConsole, resetConsole } = nextProps;\n    if (previousCompiledCode !== compiledCode) {\n      resetConsole();\n      debouncedRunCode({ code: compiledCode, wrappedConsole });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      code,\n      handleCodeChange,\n      console: _console,\n      onReset,\n    } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'console', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n          <GridItem key=\"code\">\n            <CodeWidget\n              handleCodeChange={handleCodeChange}\n              data={code}\n              mode=\"jsx\"\n              theme=\"monokai\"\n            />\n          </GridItem>\n          <GridItem key=\"answer\">\n            <AnswerWidget />\n          </GridItem>\n          <GridItem key=\"control\">\n            <ControlWidget\n              type=\"react\"\n              onReset={() => onReset('react')}\n            />\n          </GridItem>\n          <GridItem key=\"result\">\n            <ResultWidget />\n          </GridItem>\n          <GridItem key=\"console\">\n            <ConsoleWidget data={_console} />\n          </GridItem>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(ReactPage);\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport ConsoleWidget from 'app/components/Widgets/ConsoleWidget';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\nimport ControlWidget from '../ControlWidget';\n\n\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport styles from './JavaScriptPage.module.scss';\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n  }\n\n  componentDidMount() {\n    const { compiledCode, wrappedConsole, resetConsole, addTape } = this.props;\n    resetConsole();\n    debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: addTape });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { compiledCode: previousCompiledCode, resetConsole, addTape, resetTape } = this.props;\n    const { compiledCode, wrappedConsole } = nextProps;\n    if (previousCompiledCode !== compiledCode) {\n      resetConsole();\n      resetTape();\n      debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: addTape });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      code,\n      test,\n      handleCodeChange,\n      tape,\n      console: _console,\n      onReset,\n    } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'console', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n          <GridItem key=\"code\">\n            <CodeWidget\n              handleCodeChange={handleCodeChange}\n              data={code}\n              mode=\"javascript\"\n              theme=\"monokai\"\n            />\n          </GridItem>\n          <GridItem key=\"test\">\n            <TestWidget data={test} />\n          </GridItem>\n          <GridItem key=\"control\">\n            <ControlWidget\n              onReset={() => onReset('javascript')}\n            />\n          </GridItem>\n          <GridItem key=\"tape\">\n            <TapeWidget data={tape} />\n          </GridItem>\n          <GridItem key=\"console\">\n            <ConsoleWidget data={_console} />\n          </GridItem>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(JavaScriptPage);\n","import React, { Component } from 'react';\n// import { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { transform } from '@babel/standalone';\n\n// import { resetConsole } from 'app/actions/console';\n\nimport createWrappedConsole from 'app/utils/consoleFactory';\nimport { subscribeOnCreateQuestionSnapshot } from 'app/utils/question';\nimport { subscribeOnCreateRecord, updateRecord } from 'app/utils/record';\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\nconst getPageComponent = args => {\n  switch (args.categoryIndex) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryIndex: 0,\n      code: '',\n      compiledCode: '',\n      questionContent: '',\n      test: '',\n      tape: [],\n      recordId: '',\n      console: []\n    };\n    this.wrappedConsole = createWrappedConsole(console, this.addConsole);\n  }\n\n  componentDidMount() {\n    this.subscribeOnDispatchQuestion();\n    this.subscribeOnCreateRecord();\n  }\n\n  componentWillUnmount() {\n    // this.subscriptionDispatchQuestion.unsubscribe();\n  }\n\n  updateRecordAction = async newCode => {\n    const { recordId } = this.state;\n    if (recordId !== '') {\n      await updateRecord(recordId, newCode);\n    }\n  };\n\n  handleCodeChange = newCode => {\n    const { test } = this.state;\n    const fullCode = `${newCode} ${test}`;\n\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: [\n          'es2015',\n          ['stage-2', { decoratorsBeforeExport: true }],\n          'react'\n        ],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode, code: newCode });\n      this.updateRecordAction(newCode);\n    } catch (e) {\n      this.setState({ code: newCode });\n      this.resetConsole();\n      this.wrappedConsole.log(e);\n      this.updateRecordAction(newCode);\n    }\n  };\n\n  onReset = type => {\n    const { questionContent } = this.state;\n    this.setState({ code: questionContent });\n    this.handleCodeChange(questionContent);\n  };\n\n  addTape = newTape => {\n    const { tape } = this.state;\n    this.setState({ tape: [...tape, newTape] });\n  };\n\n  resetTape = () => {\n    this.setState({ tape: [] });\n  };\n\n  addConsole = (...args) => {\n    const { console: _console } = this.state;\n    this.setState({ console: [..._console, ...args] });\n  };\n\n  resetConsole = () => {\n    this.setState({ console: [] });\n  };\n\n  subscribeOnCreateRecord = () => {\n    subscribeOnCreateRecord(data => {\n      const { id } = data;\n      this.setState({\n        recordId: id\n      });\n    });\n  };\n\n  subscribeOnDispatchQuestion = () => {\n    subscribeOnCreateQuestionSnapshot(({ data }) => {\n      const { type, content: code, test } = data.onCreateQuestionSnapshot;\n      this.setState({\n        categoryIndex: type === 'javascript' ? 0 : 1,\n        code,\n        test,\n        questionContent: code\n      });\n      const { questionContent } = this.state;\n      this.handleCodeChange(questionContent);\n    });\n  };\n\n  render() {\n    const {\n      handleCodeChange,\n      wrappedConsole,\n      onReset,\n      addTape,\n      resetTape,\n      resetConsole\n    } = this;\n    return (\n      <>\n        {getPageComponent({\n          handleCodeChange,\n          wrappedConsole,\n          onReset,\n          addTape,\n          resetTape,\n          resetConsole,\n          ...this.state,\n          ...this.props\n        })}\n      </>\n    );\n  }\n}\n\nexport default withRouter(Page);\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LoginPage from 'app/pages/LoginPage';\nimport ExamPage from 'app/pages/ExamPage';\nimport NotFoundPage from 'app/pages/NotFoundPage';\n\nconst Guest = ({ match }) => (\n  <Switch>\n    <Route path=\"/login\" component={LoginPage} />\n    <Route path=\"/\" component={ExamPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n);\n\nexport default Guest;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Admin from 'app/routes/Admin';\nimport Guest from 'app/routes/Guest';\n\nconst { PUBLIC_URL } = process.env;\n\nconst App = () => (\n  <Router basename={PUBLIC_URL}>\n    <div>\n      <Switch>\n        <Route path=\"/admin\" component={Admin} />\n        <Route path=\"/\" component={Guest} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport 'antd/dist/antd.css';\n\nimport { initErrorLogging } from 'app/utils/sentry';\n\nimport reducer from 'app/reducers';\nimport App from './App';\nimport './index.css';\n\ninitErrorLogging();\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}