(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{137:function(e,n,t){},178:function(e,n,t){e.exports=t(396)},324:function(e,n){},326:function(e,n){},356:function(e,n){},361:function(e,n,t){},363:function(e,n){},364:function(e,n,t){},394:function(e,n,t){},396:function(e,n,t){"use strict";t.r(n);var a=t(0),o=t.n(a),r=t(18),c=t.n(r),s=t(398),i=t(397),u=t(20),l=t(21),d=t(23),h=t(22),p=t(24),m=t(16),f=t(100),b=t.n(f),g=t(32),y=t(168),w=(t(73),t(189),t(191),t(192),t(103)),C=t.n(w),v=t(399),k=t(41),E=t.n(k),S=t(101),O=t(173),x=t.n(O),j=t(172),q=t.n(j),D=[{name:"countChar",content:"\n/**\n * Implement the function 'countChar'\n * to count the occurance of each character for the input string,\n * and return an object containing those information.\n *\n * For example :\n *  input string: 'abca'\n *\n *  returned object:\n *  {\n *     a: 2,\n *     b: 1,\n *     c: 1\n *  }\n */\n\n/**\n * Implement function body\n */\nfunction countChar(s) {\n\n}\n\n",test:"\ntest('countChar test', (t) => {\n  t.subtest('should return character count in an object', t => {\n    const result = countChar();\n    t.equal(typeof result, 'object');\n  });\n  t.subtest('should be able to count chars', t => {\n    const input = 'abca';\n    const result = countChar(input);\n    t.equal(result.a, 2);\n    t.equal(result.b, 1);\n  });\n  t.subtest('should be able count some longer string as well', t => {\n    const input = 'The Quick Brown Fox Jumps Over The Lazy Dog';\n    const result = countChar(input);\n    t.equal(result[' '], 8);\n    t.equal(result.T, 2);\n    t.equal(result.o, 3);\n  });\n})\n\n"},{name:"forEach, map and reduce",content:"\n/**\n * Implement the function 'forEach, map and reduce'\n *\n */\n\n/**\n * Implement function body\n */\nconst myForEach = function (array, callback) {\n\n}\n\nconst myMap = function (array, callback) {\n\n}\n\nconst myReduce = function (array, callback, initValue) {\n\n}\n\n",test:"\ntest('forEach, map and reduce test', (t) => {\n  t.subtest('should execute forEach correctly', t => {\n    let count = 0;\n    myForEach([1, 2, 3, 4], (val, index) => count += val * index * index);\n    t.equal(count, 50);\n  });\n  t.subtest('should execute map correctly', t => {\n    const result = myMap([1, 2, 3, 4], (val, index) => val * index * index);\n    t.equal(result[0], 0);\n    t.equal(result[2], 12);\n  });\n  t.subtest('should execute reduce correctly', t => {\n    const result = myReduce([10, 2, 3], (cal, val, index) => cal + val * index, 0);\n    t.equal(result, 8);\n  });\n});\n\n"},{name:"adder",content:"\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *   addTen = adder(10)\n *   addFive = adder(5)\n *\n *   addTen(10)  // return 20\n *   addFive(10) // return 15\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n",test:"\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should be able to add two numbers', t => {\n    const add5 = adder(5);\n    t.equal(add5(10), 15);\n    t.equal(add5(20), 25);\n\n    t.equal(adder(40)(2), 42);\n  });\n})\n\n"},{name:"infinite adder",content:"\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *\n *   adder(10)(20)(30).getValue()  // return 60\n *   adder(10)(20)(30)(40).getValue() // return 100\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n",test:"\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should get default value with 0', t => {\n    t.equal(adder().getValue(), 0);\n  });\n  t.subtest('should be able to add mutiple numbers', t => {\n    t.equal(adder(10).getValue(), 10);\n    t.equal(adder(10)(20)(30).getValue(), 60);\n    t.equal(adder(10)(20)(30)(40).getValue(), 100);\n  });\n})\n\n"},{name:"default function",content:"\n/**\n * Implement a function 'defaultWith'\n * which behavior is like the following example\n *\n * ex:\n *\n *   const fn = ({ a, b }) => a + b;\n *   const boundFn = defaultWith(fn, { a: 10 });\n *   boundFn({ b: 20 }); // return 30\n*/\n\n/**\n * Implement function body\n */\nfunction defaultWith() {\n}\n\n",test:"\ntest('defaultWith test', (t) => {\n  t.subtest('should return a function', t => {\n    const fn = () => {};\n    t.equal(typeof defaultWith(fn, {}), 'function');\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ a, b }) => a * 2 + b * 3;\n    const boundFn = defaultWith(fn, { a: 3 });\n    t.equal(boundFn({ b: 4 }), 18);\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ x, y, z }) => x * y * z;\n    const boundFn = defaultWith(fn, { x: 3, y: 4 });\n    t.equal(boundFn({ x: 7, z: 2 }), 56);\n  });\n})\n\n"},{name:"sequential",content:"\n/**\n * Implement the function 'sequential'\n * to execute async functions in sequence.\n *\n * 'sequential' takes an array of async functions as parameter,\n * and execute each of them after previous one has done.\n */\n\n/**\n * Implement function body\n */\nfunction sequential(tasks = []) {\n\n}\n\n",test:"\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('sequential test', (t) => {\n  const log = spy(console, 'log');\n  sequential(tasks);\n  t.equal(log.callCount(), 0);\n  clock.tick(600);\n  t.equal(log.callCount(), 1);\n  t.ok(log.calledWith('task 1 done'));\n  clock.tick(600);\n  t.equal(log.callCount(), 3);\n  t.ok(log.calledWith('task 3 done'));\n});\n\n    "},{name:"parallel",content:"\n/**\n * Implement the function 'parallel'\n * to execute async functions at once.\n *\n * 'parallel' takes an array of async functions as parameter,\n * and execute each of them in the same time.\n *\n */\n\n/**\n * Implement function body\n */\nfunction parallel(tasks = [], callback) {\n}\n\n",test:"\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('parallel test', t => {\n  t.subtest('should run all tasks at once', t => {\n    const spyLog = spy(console, 'log');\n    parallel(tasks, (result) => { /* do nothing */ });\n    t.equal(spyLog.callCount(), 0);\n    clock.tick(600);\n    t.equal(spyLog.callCount(), 3);\n  });\n\n  t.subtest('should get task result in an array', t => {\n    let obj = {};\n    parallel(tasks, (result) => {\n      obj.result = result;\n    });\n    clock.tick(600);\n    t.deepEqual(obj.result, [1, 2, 3]);\n  });\n\n  t.subtest('should trigger callback only once', t => {\n    let count = 0;\n    const callback = () => count++;\n\n    parallel(tasks, callback);\n    clock.tick(300);\n    t.equal(count, 0);\n    clock.tick(600);\n    t.equal(count, 1);\n  });\n});\n\n"},{name:"combineReducers",content:"\n// http://redux.js.org/docs/api/combineReducers.html\nfunction combineReducers(reducers) {\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nfunction calledCount(state = 0, action) {\n  if(action.type == 'CALL') {\n    return state + 1;\n  }\n  return state;\n}\n\n",test:"\ntest('combineReducers', t => {\n  const reducer = combineReducers({\n    calc: calc,\n    calls: calledCount,\n  });\n\n  t.subtest('should init states', t => {\n    let state = {};\n    state = reducer(state, {type: ''});\n    t.equal(state.calc, 0);\n    t.equal(state.calls, 0);\n  });\n\n  t.subtest('should handle actions', t => {\n    let state = {};\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 1);\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 2);\n  });\n})\n"},{name:"applyMiddleware",content:"\n// http://redux.js.org/docs/api/applyMiddleware.html\n\nfunction applyMiddleware(...middlewares) {\n  return createStore => (...args) => {\n    const store = createStore(...args);\n    let dispatch = store.dispatch;\n    /**************************\n     implement              here\n     **************************/\n\n\n\n\n    /***************************/\n    return Object.assign(store, { dispatch })\n  }\n}\n\n",test:"\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  if (typeof enhancer !== 'undefined') {\n    return enhancer(createStore)(reducer, preloadedState)\n  }\n\n  let currentReducer = reducer;\n  let currentState = preloadedState;\n\n  function getState() {\n    return currentState;\n  }\n\n  function dispatch(action) {\n    currentState = currentReducer(currentState, action);\n  }\n\n  dispatch({ type: '@@INIT' });\n\n  return {\n    dispatch,\n    getState\n  };\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst thunk = ({ getState, dispatch }) => next => action => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n  return next(action);\n}\n\ntest('applyMiddleware test', t => {\n\n  t.subtest('should execute normal action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute function action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n\n  t.subtest('should apply mutiple middlewares in the right order', t => {\n    let logCount = 1;\n    const log = () => next => action => {\n      logCount += 1;\n      next(action);\n    }\n    const log2 = () => next => action => {\n      logCount *= 2;\n      next(action);\n    }\n    const store = createStore(calc, 0, applyMiddleware(log, log2));\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(logCount, 22);\n  });\n})\n"},{name:"createStore",content:"\n// http://redux.js.org/docs/api/createStore.html\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  function getState() {\n\n  }\n\n  function subscribe(listener) {\n\n  }\n\n  function dispatch(action) {\n\n  }\n\n  dispatch({ type: '@@INIT' })\n\n  return {\n    dispatch,\n    subscribe,\n    getState\n  }\n}\n\n\n",test:"\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst wrappedThunk = (createStore) => {\n  return function (...args) {\n    const store = createStore(...args);\n    const { dispatch, getState } = store;\n    store.dispatch = (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n      dispatch(action);\n    }\n    return store;\n  }\n}\n\ntest('createStore test', t => {\n\n  t.subtest('should execute getState successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n  });\n\n  t.subtest('should execute dispatch successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute subscribe and unsubscribe successfully', t => {\n    const store = createStore(calc, 0);\n    let dispatchCount = 1;\n    let dispatchCount2 = 3;\n    const unsubscribeForCount = store.subscribe(() => dispatchCount *= 2);\n    const unsubscribeForCount2 = store.subscribe(() => dispatchCount2 *= 2);\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 24);\n    unsubscribeForCount();\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    unsubscribeForCount2();\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 96);\n  });\n\n  t.subtest('should execute enhancer successfully', t => {\n    const store = createStore(calc, 0, wrappedThunk);\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n})\n"},{name:"explain",content:"\n// explain the purpose of following code;\n// modify variable name and/or code style when appropriate;\n// add comments where you see fit\nfunction foo(a, b) {\n  var c = [];\n  for(var i0 = 0, i1 = 0; i0 < a.length && i1 < b.length; ) {\n    if(a[i0] < b[i1]) {\n      c.push(a[i0++]);\n    }\n    if(a[i0] >= b[i1]) {\n      c.push(b[i1++]);\n    }\n  }\n  if(i0 < a.length) {\n    for(var i = i0; i < a.length; i++) {\n      c.push(a[i]);\n    }\n  }\n  if(i1 < b.length) {\n    for(var i = i1; i < b.length; i++) {\n      c.push(b[i]);\n    }\n  }\n  return c;\n}\n\nconsole.log(foo([1,4,5], [2,3,6]))\n"},{name:"mergeSort",content:"\n// implement function merge, so mergeSort can run correctly\nfunction merge(arr1, arr2) {\n  // TODO enter your code here\n  return arr1;\n}\n\nfunction mergeSort(arr) {\n  if(arr.length <= 1) {\n    return arr;\n  }\n  const mid = Math.floor(arr.length / 2);\n  const sortedArr1 = mergeSort(arr.slice(0, mid));\n  const sortedArr2 = mergeSort(arr.slice(mid));\n  return merge(sortedArr1, sortedArr2);\n}\n\n",test:"\ntest('mergeSort', t => {\n  t.deepEqual(mergeSort([6,3,5,10,2,100,4,1]),[1,2,3,4,5,6,10,100]);\n  const randomNumbers = Array.from({length: 20})\n    .map(() => Math.floor(Math.random() * 100));\n  const sorted = randomNumbers.slice(0).sort((a, b) => a - b);\n  t.deepEqual(mergeSort(randomNumbers), sorted);\n})\n"}],T=function(e){function n(e){var t;return Object(u.a)(this,n),(t=Object(d.a)(this,Object(h.a)(n).call(this,e))).state={anchorEl:null},t.handleClicked=t.handleClicked.bind(Object(m.a)(Object(m.a)(t))),t}return Object(p.a)(n,e),Object(l.a)(n,[{key:"handleClicked",value:function(e){this.setState({anchorEl:e.currentTarget})}},{key:"render",value:function(){var e=this.handleClicked,n=this.props,t=n.handleSelected,a=n.activeIndex,r=n.classes,c=this.state.anchorEl,s=D.map(function(n,a){return o.a.createElement(q.a,{key:a,value:a,onClick:function(){e(!1),t(a)}},n.name)});return o.a.createElement("div",null,o.a.createElement(E.a,{"aria-owns":c?"simple-menu":null,"aria-haspopup":"true",className:r.button,variant:"outlined",onClick:e},"".concat(D[a].name,"  \u25bc")),o.a.createElement(x.a,{id:"simple-menu",open:Boolean(c),anchorEl:c},s))}}]),n}(a.Component),A=Object(S.withStyles)(function(){return{button:{"text-transform":"none"}}})(T);t(137);var N=t(104),R=t.n(N),I=t(53),L=t.n(I),z=function(e,n){var t=e[n],a=[],o={},r=Math.random().toFixed(4)+"";return e[n]=function(){for(var n=arguments.length,c=new Array(n),s=0;s<n;s++)c[s]=arguments[s];var i=t.apply(e,c);return a.push(c),o[c.join(r)]=!0,i},{calledWith:function(){for(var e=arguments.length,n=new Array(e),t=0;t<e;t++)n[t]=arguments[t];return!!o[n.join(r)]},callCount:function(){return a.length},restore:function(){return e[n]=t}}},F=t(68),M=t(177),H=function(e){return function(n,t){try{e.comment(n),t(e)}catch(a){e.fail(a)}}},W=function(){delete t.c[152];var e=t(152);return t(357)(e),function(e,n){return function(){for(var t=arguments.length,a=new Array(t),o=0;o<t;o++)a[o]=arguments[o];var r=a.slice(-1),c=Object(M.a)(r,1)[0];if("function"!==typeof c)throw new Error("should provide callback");e.apply(void 0,Object(F.a)(a.slice(0,-1)).concat([function(e){for(var t in n)e[t]=n[t](e);try{c(e)}catch(a){e.fail(a)}}]))}}(e,{subtest:H,should:H})},_=(t(161),function(){return(arguments.length>0&&void 0!==arguments[0]?arguments[0]:"").replace(/for *\(.*\{|while *\(.*\{|do *\{/g,function(e){return"let count = 0;\n      const detector = (c) => {\n        if (c > 100000) {\n          throw new Error('infinite');\n        }\n      }\n      ".concat(e,"\n      detector(count++);\n    ")})}),Q=b.a.debounce(function(e,n){var t=null,a=null,o=R.a.useFakeTimers(),r=W(),c={setTimeout:window.setTimeout,console:n,sinon:R.a,describe:r,test:r,clock:o,spy:z};try{t=new L.a.Script(_(e)),a=new L.a.createContext(c),t.runInContext(a)}catch(s){t=new L.a.Script(_("")),a=new L.a.createContext(c),t.runInContext(a),n.log(s)}o.restore()},200),U=function(e){function n(e){var t;return Object(u.a)(this,n),(t=Object(d.a)(this,Object(h.a)(n).call(this,e))).ref=o.a.createRef(),t.resize=t.resize.bind(Object(m.a)(Object(m.a)(t))),t.startResize=t.startResize.bind(Object(m.a)(Object(m.a)(t))),t.endResize=t.endResize.bind(Object(m.a)(Object(m.a)(t))),t.state={width:t.props.width,height:t.props.height},t}return Object(p.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){document.querySelector(".test-panel").style.height=window.innerHeight-this.state.height+"px",document.querySelector(".bottom-panel").style.height=window.innerHeight-document.querySelector(".top-panel").clientHeight+"px"}},{key:"startResize",value:function(e){e.target.contains(this.ref.current)&&(window.addEventListener("mousemove",this.resize),window.addEventListener("mouseup",this.endResize))}},{key:"resize",value:function(e){this.setState({width:this.props.allowWidth?e.clientX-this.ref.current.offsetLeft:this.state.width,height:this.props.allowHeight?e.clientY-this.ref.current.offsetTop:this.state.height}),document.querySelector(".test-panel").style.height=window.innerHeight-document.querySelector(".code-panel").clientHeight+"px",document.querySelector(".bottom-panel").style.height=window.innerHeight-document.querySelector(".top-panel").clientHeight+"px"}},{key:"endResize",value:function(e){window.removeEventListener("mousemove",this.resize),window.removeEventListener("mouseup",this.endResize),window.dispatchEvent(new Event("resize"))}},{key:"render",value:function(){return o.a.createElement("div",{ref:this.ref,className:"border ".concat(this.props.className?this.props.className:""),onMouseDown:this.startResize,style:{width:this.state.width+"px",height:this.state.height+"px"}},this.props.children)}}]),n}(a.Component),P=(t(361),function(e){function n(e){var t;return Object(u.a)(this,n),(t=Object(d.a)(this,Object(h.a)(n).call(this,e))).resetConsole=t.props.resetConsole,t}return Object(p.a)(n,e),Object(l.a)(n,[{key:"render",value:function(){return o.a.createElement("div",{className:this.props.className?this.props.className:""},"Console:",this.props.console.map(function(e,n){var t=e.args;return o.a.createElement("div",{className:"console",key:n},t.map(function(e,n){return o.a.createElement("div",{className:"text",key:n},""==="".concat(e).trim()?o.a.createElement("br",null):"".concat(e).trim())}))}))}}]),n}(a.Component)),V=Object(g.b)(function(e){return{console:e.console}},function(e){return{resetConsole:function(){return e({type:"CONSOLE/RESET"})}}})(P),G=function(e,n){return Object.keys(e).reduce(function(e,t){return e[t]=function(){for(var e=arguments.length,a=new Array(e),o=0;o<e;o++)a[o]=arguments[o];n({type:"CONSOLE/ADD",key:t,args:a.concat()})},e},{})},X=(t(363),function(e){function n(e){var t;return Object(u.a)(this,n),(t=Object(d.a)(this,Object(h.a)(n).call(this,e))).testsRef=o.a.createRef(),t.wrappedConsole=G(console,t.props.actions._dispatch),t.state={SyntaxError:""},t.handleSelected=t.handleSelected.bind(Object(m.a)(Object(m.a)(t))),t.handleCodeChange=t.handleCodeChange.bind(Object(m.a)(Object(m.a)(t))),t.actions=t.props.actions,t.resetQuestion=t.actions.resetQuestion,t.changeQuestion=t.actions.changeQuestion,t.changeCode=t.actions.changeCode,t.resetConsole=t.actions.resetConsole,t.changeSyntaxError=t.actions.changeSyntaxError,t}return Object(p.a)(n,e),Object(l.a)(n,[{key:"componentDidMount",value:function(){if(this.props.isLogin){var e=this.props.rawCode;this.handleCodeChange(e)}else this.props.history.push("/js-exam/login")}},{key:"componentWillUpdate",value:function(e,n){var t=e.compiledCode;this.testsRef.current&&(this.testsRef.current.innerHTML="",Q(t,this.wrappedConsole))}},{key:"componentWillReceiveProps",value:function(e){this.props.index===e.index&&""!==e.compiledCode||this.handleCodeChange(e.rawCode)}},{key:"handleSelected",value:function(e){this.changeQuestion(e)}},{key:"handleCodeChange",value:function(e){var n="".concat(e," ").concat(D[this.props.index].test);this.resetConsole();try{var t=Object(y.a)(n,{transforms:{dangerousForOf:!0,spreadRest:!0}}).code;this.changeCode({compiledCode:t,rawCode:e}),this.setState({SyntaxError:""})}catch(c){if(this.changeCode({rawCode:e}),c.loc){var a=c.loc,o=a.line,r=a.column;this.setState({SyntaxError:"Syntax error: line ".concat(o,", column ").concat(r)})}}}},{key:"render",value:function(){var e=this.props,n=e.rawCode,t=e.index;return o.a.createElement("div",{className:"App"},o.a.createElement(U,{className:"input-panel",allowWidth:!0},o.a.createElement(U,{className:"code-panel",allowHeight:!0,width:window.innerWidth/2,height:window.innerHeight/2},o.a.createElement(C.a,{showPrintMargin:!1,mode:"javascript",theme:"monokai",onChange:this.handleCodeChange,value:n,tabSize:2,debounceChangePeriod:800})),o.a.createElement("div",{className:"test-panel"},o.a.createElement(C.a,{showPrintMargin:!1,mode:"javascript",theme:"textmate",value:D[t].test,readOnly:!0,tabSize:2,debounceChangePeriod:800}))),o.a.createElement("div",{className:"result-panel"},o.a.createElement("div",{className:"top-panel"},o.a.createElement("div",{className:"additional-info"},o.a.createElement(A,{handleSelected:this.handleSelected,activeIndex:t}),o.a.createElement(E.a,{variant:"outlined",onClick:this.resetQuestion},"Reset"),this.state.SyntaxError?o.a.createElement("div",{className:"syntax-error"},this.state.SyntaxError):null),o.a.createElement(U,{className:"control-panel",allowHeight:!0,width:window.innerWidth/2,height:window.innerHeight/2},o.a.createElement("div",{id:"tests",ref:this.testsRef}))),o.a.createElement(V,{className:"bottom-panel"})))}}]),n}(a.Component)),B=Object(v.a)(Object(g.b)(function(e){var n=e.code,t=n.index,a=n.compiledCode;return{rawCode:n[t]&&n[t].code||D[t].content,compiledCode:a,index:t,isLogin:e.login.isLogin}},function(e){return{actions:{changeCode:function(n){return e({type:"CODE/CHANGE",compiledCode:(t=n).compiledCode,rawCode:t.rawCode});var t},changeQuestion:function(n){return e(function(e){return{type:"QUESTION/CHANGE",index:e}}(n))},resetQuestion:function(){return e({type:"QUESTION/RESET"})},_dispatch:e,resetConsole:function(){return e({type:"CONSOLE/RESET"})}}}})(X)),J=t(175),Y=t.n(J);t(364);var K=function(e){function n(e){var t;return Object(u.a)(this,n),(t=Object(d.a)(this,Object(h.a)(n).call(this,e))).actions=t.props.actions,t.submitPassword=t.actions.submitPassword,t.state={password:"",error:""},t}return Object(p.a)(n,e),Object(l.a)(n,[{key:"componentDidUpdate",value:function(){this.props.isLogin&&this.props.history.push("/js-exam")}},{key:"render",value:function(){var e=this;return o.a.createElement("div",{className:"login"},o.a.createElement(Y.a,{onChange:function(n){return e.setState({password:n.target.value})},margin:"normal",placeholder:"input the password to login",onKeyDown:function(n){13===n.keyCode&&e.submitPassword(e.state.password)}}),o.a.createElement(E.a,{variant:"outlined",onClick:function(){return e.submitPassword(e.state.password)}},"Login"),o.a.createElement("div",{className:"error"},this.state.error))}}]),n}(o.a.Component),Z=Object(v.a)(Object(g.b)(function(e){return{isLogin:e.login.isLogin}},function(e){return{actions:{submitPassword:function(n){return e(function(e){return{type:"LOGIN/LOGIN",password:e}}(n))}}}})(K)),$=function(){return o.a.createElement(s.a,null,o.a.createElement("div",null,o.a.createElement(i.a,{exact:!0,path:"/js-exam/",component:B}),o.a.createElement(i.a,{path:"/js-exam/login",component:Z})))},ee=(t(394),t(40)),ne=t(52),te=t(70),ae=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{index:0},n=arguments.length>1?arguments[1]:void 0;switch(n.type){case"CODE/RESET":return e;case"CODE/CHANGE":return Object(te.a)({},e,Object(ne.a)({compiledCode:n.compiledCode||e.compiledCode},e.index,{code:n.rawCode}));case"QUESTION/RESET":return Object(te.a)({},e,Object(ne.a)({compiledCode:""},e.index,{code:""}));case"QUESTION/CHANGE":return Object(te.a)({},e,{index:n.index,compiledCode:""});default:return e}},oe=function(){var e,n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{isLogin:!1},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"LOGIN/LOGIN":return{isLogin:(e=t.password,"".concat(((new Date).getUTCFullYear()+1)*((new Date).getUTCMonth()+1)*((new Date).getUTCDate()+1)*((new Date).getUTCHours()+1)).slice(0,4)===e)};default:return n}},re=function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],n=arguments.length>1?arguments[1]:void 0;switch(n.type){case"CONSOLE/RESET":return[];case"CONSOLE/ADD":return Object(F.a)(e).concat([{key:n.key,args:n.args}]);default:return e}},ce=Object(ee.b)({code:ae,login:oe,console:re}),se=Object(ee.c)(ce,window.__REDUX_DEVTOOLS_EXTENSION__&&window.__REDUX_DEVTOOLS_EXTENSION__());c.a.render(o.a.createElement(g.a,{store:se},o.a.createElement($,null)),document.getElementById("root"))}},[[178,2,1]]]);
//# sourceMappingURL=main.332c087e.chunk.js.map