{"version":3,"sources":["app/components/Grid/Grid.module.scss","app/components/Border/Border.module.scss","app/components/Widgets/ConsoleWidget/ConsoleWidget.module.scss","app/pages/LoginPage/LoginPage.module.scss","app/components/Widgets/CodeWidget/CodeWidget.module.scss","app/components/Widgets/ResultWidget/ResultWidget.module.scss","app/components/Widgets/AnswerWidget/AnswerWidget.module.scss","app/pages/QuestionPage/AddPage/ControlWidget/ControlWidget.module.scss","app/pages/QuestionPage/TagWidget/TagWidget.module.scss","app/pages/QuestionPage/AddPage/ReactPage/ReactPage.module.scss","app/components/Widgets/TestWidget/TestWidget.module.scss","app/pages/QuestionPage/AddPage/JavaScriptPage/JavaScriptPage.module.scss","app/pages/QuestionPage/EditPage/ControlWidget/ControlWidget.module.scss","app/pages/QuestionPage/EditPage/ReactPage/ReactPage.module.scss","app/pages/QuestionPage/EditPage/JavaScriptPage/JavaScriptPage.module.scss","app/pages/QuestionPage/AdminQuestionDispatchPage/ControlWidget/ControlWidget.module.scss","app/pages/QuestionPage/AdminQuestionDispatchPage/ReactPage/ReactPage.module.scss","app/components/Widgets/TapeWidget/TapeWidget.module.scss","app/pages/QuestionPage/AdminQuestionDispatchPage/JavaScriptPage/JavaScriptPage.module.scss","app/pages/ExamPage/ControlWidget/ControlWidget.module.scss","app/pages/ExamPage/ReactPage/ReactPage.module.scss","app/pages/ExamPage/JavaScriptPage/JavaScriptPage.module.scss","app/utils/sentry.js","app/reducers/javascript.js","app/reducers/react.js","app/reducers/login.js","app/utils/authLogin.js","app/reducers/category.js","app/reducers/tape.js","app/reducers/console.js","app/reducers/index.js","aws-exports.js","app/utils/question.js","graphql/mutations.js","app/components/Border/index.js","app/components/Grid/index.js","app/components/Grid/GridItem.js","app/components/Widgets/CodeWidget/index.js","app/components/Widgets/ResultWidget/index.js","app/components/Widgets/AnswerWidget/index.js","app/utils/spy.js","app/utils/tape.js","app/utils/runCode.js","app/questions/index.js","app/questions/javascript.js","app/questions/react.js","app/components/Selectors/CategorySelector/index.js","app/pages/QuestionPage/AddPage/ControlWidget/index.js","app/pages/QuestionPage/TagWidget/index.js","app/pages/QuestionPage/AddPage/ReactPage/index.js","app/components/Widgets/TestWidget/index.js","app/components/Widgets/TapeWidget/index.js","app/pages/QuestionPage/AddPage/JavaScriptPage/index.js","app/pages/QuestionPage/AddPage/index.js","app/components/Selectors/QuestionSelector/index.js","app/pages/QuestionPage/EditPage/ControlWidget/index.js","app/pages/QuestionPage/EditPage/ReactPage/index.js","app/pages/QuestionPage/EditPage/JavaScriptPage/index.js","app/pages/QuestionPage/EditPage/index.js","app/pages/QuestionPage/AdminQuestionDispatchPage/ControlWidget/index.js","app/pages/QuestionPage/AdminQuestionDispatchPage/ReactPage/index.js","app/pages/QuestionPage/AdminQuestionDispatchPage/JavaScriptPage/index.js","app/pages/QuestionPage/AdminQuestionDispatchPage/index_new.js","app/pages/NotFoundPage/index.js","app/routes/Admin.js","app/pages/LoginPage/index.js","app/actions/login.js","app/utils/consoleFactory.js","app/utils/stateHelper.js","app/components/Widgets/ConsoleWidget/index.js","app/pages/ExamPage/ControlWidget/index.js","app/pages/ExamPage/ReactPage/index.js","app/actions/console.js","app/pages/ExamPage/JavaScriptPage/index.js","app/actions/tape.js","app/pages/ExamPage/index.js","graphql/subscriptions.js","app/actions/code.js","app/actions/category.js","app/routes/Guest.js","App.js","index.js"],"names":["module","exports","grid","item","border","vertical","horizontal","console-widget","console","login","login-input","error","code","ace_layer","result","answer","control","tag-widget","app","test-widget","tape","test","description","assert","name","actual","not-equal","expected","ok","fail","diff","Sentry","dsn","state","arguments","length","undefined","index","action","type","toUpperCase","Object","objectSpread","defineProperty","compiledCode","rawCode","remoteQuestion","s","isLogin","password","concat","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","slice","category","toConsumableArray","data","Console","key","args","reducer","combineReducers","javascript","react","_console","awsmobile","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","aws_content_delivery_bucket","aws_content_delivery_bucket_region","aws_content_delivery_url","Amplify","configure","awsExportConfig","listQuestions","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","query","wrap","_context","prev","next","API","graphql","graphqlOperation","sent","abrupt","stop","this","_x","apply","createQuestion","_ref2","_callee2","tags","content","params","_context2","input","log","_x2","getQuestion","_ref3","_callee3","id","_context3","_x3","updateQuestion","_ref4","_callee4","_context4","_x4","dispatchQuestion","_ref5","_callee5","question","_context5","questionSnapshotRoomId","alert","JSON","stringify","_x5","Border","props","_this","classCallCheck","_this$props","possibleConstructorReturn","getPrototypeOf","call","allowWidth","allowHeight","disabled","borderSize","ref","React","createRef","resize","bind","assertThisInitialized","startResize","endResize","style","e","_this$props2","height","width","onUpdate","maxHeight","maxWidth","minWidth","minHeight","newHeight","clientY","current","offsetTop","newWidth","clientX","offsetLeft","window","removeEventListener","dispatchEvent","Event","target","contains","addEventListener","_this$props3","children","className","finalClassName","styles","paddingRight","paddingBottom","react_default","createElement","onMouseDown","Component","Grid","onResize","updateFullState","_this$ref$current","totalWidth","clientWidth","totalHeight","clientHeight","newData","map","column","indexOfColumn","indexOfItem","sumOfWidth","c","reduce","cal","val","sumOfHeight","setState","updateGridState","_this$ref$current2","layout","columns","newCal","x","sort","b","y","autoResize","_this2","Math","max","min","finalWidth","components_Border","w","itemInData","itemInColumns","isDisabled","static","h","find","GridItem","CodeWidget","handleCodeChange","mode","theme","react_ace_lib_default","showPrintMargin","onChange","value","tabSize","debounceChangePeriod","ResultWidget","AnswerWidget","spy","obj","methodName","origFn","callHistory","calledWith","secret","random","toFixed","_len","Array","_key","push","join","_len2","_key2","callCount","restore","tryCatchPatch","t","testBlock","comment","getPatchedTape","patches","harness","createHarness","createStream","objectMode","on","subtest","should","_args$slice","cb","slicedToArray","Error","wrapCode","replace","loopHead","runCode","_ref$wrappedConsole","wrappedConsole","onTapeUpdate","script","context","clock","sinon","useFakeTimers","sandbox","setTimeout","describe","ReactDOM","root","document","getElementById","renderToString","vm","Script","createContext","runInContext","Questions","getCategories","keys","getQuestions","categories","Option","Select","CategorySelector","es_select","defaultValue","q","i","ControlWidget","onChangeName","onSubmit","onChangeCategory","Selectors_CategorySelector","placeholder","marginRight","es_button","onClick","TagWidget","inputVisible","inputValue","handleClose","removedTag","onTagUpdate","filter","tag","showInput","focus","handleInputChange","handleInputConfirm","newTags","indexOf","saveInputRef","_this$state","isLongTag","tagElem","es_tag","closable","afterClose","tooltip","title","size","onBlur","onPressEnter","background","borderStyle","icon","ReactPage","onCodeChange","fullCode","transform","presets","decoratorsBeforeExport","plugins","_this$state2","isLoading","controlHeight","debouncedRunCode","nextProps","nextState","previousCompiledCode","_this$state3","innerWidth","innerHeight","spin","spinning","Grid_Grid","Grid_GridItem","Widgets_CodeWidget","newCode","Widgets_AnswerWidget","AddPage_ControlWidget","Widgets_ResultWidget","QuestionPage_TagWidget","TestWidget","_ref$readOnly","readOnly","_ref$handleCodeChange","TestRow","row","AssertRow","Fragment","EndRow","DescriptionRow","getRow","TapeWidget_TestRow","assign","TapeWidget_AssertRow","TapeWidget_EndRow","TapeWidget_DescriptionRow","TapeWidget","JavaScriptPage","addTape","actions","_this3","Widgets_TestWidget","newTest","Widgets_TapeWidget","Page","t0","message","history","AddPage_ReactPage","AddPage_JavaScriptPage","getPageComponent","QuestionSelector","list","QuestionSelector_Option","categoryIndex","questionIndex","onChangeQuestion","questionList","Selectors_QuestionSelector","_result$data$getQuest","items","EditPage_ControlWidget","EditPage_ReactPage","EditPage_JavaScriptPage","onDispatchQuestion","_questionList$index","_this$state4","AdminQuestionDispatchPage_ControlWidget","AdminQuestionDispatchPage_ReactPage","AdminQuestionDispatchPage_JavaScriptPage","NotFoundPage","AwsConfig","Question","match","Switch","Route","path","component","QuestionAddPage","QuestionEditPage","AdminQuestionDispatchPage","Admin","render","LoginPage","preventDefault","submitPassword","display","htmlType","withRouter","connect","dispatch","createWrappedConsole","Text","text","trim","ConsoleWidget","stack","ConsoleWidget_Text","onReset","questions","resetConsole","ExamPage_ControlWidget","Widgets_ConsoleWidget","resetTape","changeCode","resetQuestion","changeCategory","changeQuestion","_dispatch","subscribeOnCreateQuestionSnapshot","subscriptionDispatchQuestion","unsubscribe","prevProps","previousCategoryIndex","remoteChangeQuestion","subscribe","_result$value$data$on","onCreateQuestionSnapshot","ExamPage_ReactPage","ExamPage_JavaScriptPage","_getStateInformation","_state$type","getStateInformation","Guest","ExamPage","App","BrowserRouter","basename","process","onerror","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","es","src_App"],"mappings":"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","file":"static/js/main.3cd1e39f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__2q7ny\",\"item\":\"Grid_item__33vmX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"Border_border__15yaW\",\"vertical\":\"Border_vertical__36_oi\",\"horizontal\":\"Border_horizontal__1HkOq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"console-widget\":\"ConsoleWidget_console-widget__20g_t\",\"console\":\"ConsoleWidget_console__35AjV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginPage_login__2l_xO\",\"login-input\":\"LoginPage_login-input__3x01h\",\"error\":\"LoginPage_error__2BMa_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"CodeWidget_code__W1lSw\",\"ace_layer\":\"CodeWidget_ace_layer__1jVwP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"ResultWidget_result__3465S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer\":\"AnswerWidget_answer__162Z4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__IhK82\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag-widget\":\"TagWidget_tag-widget__3tbPe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__2A8xF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test-widget\":\"TestWidget_test-widget__3qXMR\",\"ace_layer\":\"TestWidget_ace_layer__9zC4h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__2eRYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__GqAJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__SbYd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__2Bgi2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__3TWPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__3KTUA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tape\":\"TapeWidget_tape__3ABWW\",\"test\":\"TapeWidget_test__Db_bS\",\"description\":\"TapeWidget_description__2oLMU\",\"assert\":\"TapeWidget_assert__2OV8n\",\"name\":\"TapeWidget_name__3LFlv\",\"actual\":\"TapeWidget_actual__CThOv\",\"not-equal\":\"TapeWidget_not-equal__2eeK6\",\"expected\":\"TapeWidget_expected__2dDMc\",\"ok\":\"TapeWidget_ok__1UJWf\",\"fail\":\"TapeWidget_fail__1qEaY\",\"diff\":\"TapeWidget_diff__3cASV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__3pO2O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__25yoc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__1aZgK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__1fIK_\"};","import * as Sentry from '@sentry/browser';\n\nSentry.init({\n  dsn: 'https://466d7a4e8d174006b5449330cc18e4cc@sentry.io/1323316'\n});\n\nconst initErrorLogging = () => {\n  window.onerror = (e) => {\n    Sentry.captureException(e);\n  };\n};\n\nexport {\n  initErrorLogging\n};\n","const code = (state = { index: 0 }, action) => {\n  switch (action.type.toUpperCase()) {\n    case 'JAVASCRIPT/CODE/RESET':\n      return state;\n    case 'JAVASCRIPT/CODE/CHANGE':\n      return {\n        ...state,\n        compiledCode: action.compiledCode || state.compiledCode,\n        [state.index]: {\n          code: action.rawCode\n        }\n      };\n    case 'JAVASCRIPT/QUESTION/RESET':\n      return {\n        ...state,\n        [state.index]: {\n          code: ''\n        }\n      };\n    case 'JAVASCRIPT/QUESTION/CHANGE':\n      return {\n        ...state,\n        index: action.index,\n        compiledCode: ''\n      };\n    case 'JAVASCRIPT/QUESTION/REMOTE/CHANGE':\n      return {\n        ...state,\n        index: 0, //remote don't use index\n        compiledCode: '',\n        remoteQuestion: {\n            name: action.name,\n            code: action.code,\n            test: action.test\n        }\n      };     \n    default:\n      return state;\n  }\n};\n\nexport default code;\n","const code = (state = { index: 0 }, action) => {\n  switch (action.type.toUpperCase()) {\n    case 'REACT/CODE/RESET':\n      return state;\n    case 'REACT/CODE/CHANGE':\n      return {\n        ...state,\n        compiledCode: action.compiledCode || state.compiledCode,\n        [state.index]: {\n          code: action.rawCode\n        }\n      };\n    case 'REACT/QUESTION/RESET':\n      return {\n        ...state,\n        compiledCode: '',\n        [state.index]: {\n          code: ''\n        }\n      };\n    case 'REACT/QUESTION/CHANGE':\n      return {\n        ...state,\n        index: action.index,\n        compiledCode: ''\n      };\n    case 'REACT/QUESTION/REMOTE/CHANGE':\n      return {\n        ...state,\n        index: 0, //remote don't use index\n        compiledCode: '',\n        remoteQuestion: {\n          name: action.name,\n          code: action.code,\n          test: action.test\n        }\n      };       \n    default:\n      return state;\n  }\n};\n\nexport default code;\n","import { authLogin } from '../utils/authLogin';\n\nconst login = (state = { isLogin: false }, action) => {\n  switch (action.type) {\n    case 'LOGIN/LOGIN': {\n      return { isLogin: authLogin(action.password) };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default login;\n","const authLogin = s => `${(new Date().getUTCFullYear() + 1) * (new Date().getUTCMonth() + 1) * (new Date().getUTCDate() + 1) * (new Date().getUTCHours() + 1)}`.slice(0, 4) === s;\n\nexport {\n  authLogin\n}","const category = (state = { index: 0 }, action) => {\n  switch (action.type) {\n    case 'CATEGORY/RESET':\n      return { index: 0 };\n    case 'CATEGORY/CHANGE':\n      return {\n        ...state,\n        index: action.index\n      };\n    default:\n      return state;\n  }\n};\n\nexport default category;\n","const tape = (state = [], action) => {\n  switch (action.type) {\n    case 'TAPE/RESET': {\n      return [];\n    }\n    case 'TAPE/ADD': {\n      return [...state, action.data];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default tape;\n","const Console = (state = [], action) => {\n  switch (action.type) {\n    case 'CONSOLE/RESET':\n      return [];\n    case 'CONSOLE/ADD':\n      return [\n        ...state,\n        {\n          key: action.key,\n          args: action.args\n        }\n      ];\n    default:\n      return state;\n  }\n};\n\nexport default Console;\n","import { combineReducers } from 'redux';\nimport javascript from './javascript';\nimport react from './react';\nimport login from './login';\nimport category from './category';\nimport tape from './tape';\nimport _console from './console';\n\nconst reducer = combineReducers({\n  javascript,\n  react,\n  login,\n  category,\n  tape,\n  console: _console\n});\n\nexport default reducer;\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile =  {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_appsync_graphqlEndpoint\": \"https://7hiay4be35bi5b2jujxw4lkfmu.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:ac3970c1-998e-44f5-b8e7-915b61c672dd\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_iZaYY7v3Z\",\n    \"aws_user_pools_web_client_id\": \"5doa5r4eeigmbvjmvo6475496a\",\n    \"aws_content_delivery_bucket\": \"innovap3-js-exam-dev\",\n    \"aws_content_delivery_bucket_region\": \"us-east-1\",\n    \"aws_content_delivery_url\": \"http://innovap3-js-exam-dev.s3-website-us-east-1.amazonaws.com\"\n};\n\n\nexport default awsmobile;\n","import Amplify, {\n  API,\n  graphqlOperation\n} from 'aws-amplify';\n\nimport awsExportConfig from 'aws-exports';\nimport * as mutations from '../../graphql/mutations.js';\n\nAmplify.configure(awsExportConfig);\n\nconst listQuestions = async (type) => {\n  const query = `\n    query {\n      listQuestions (\n        filter: {\n          type:{\n            eq: \"${type}\"\n          }\n        }\n        limit: 1000\n      ) {\n        items{\n          id,\n          name,\n          type\n        }\n      }\n    }`;\n  const result = await API.graphql(graphqlOperation(query));\n  return result;\n};\n\nconst createQuestion = async (data) => {\n  const {\n    tags,\n    name,\n    code: content,\n    test,\n    type\n  } = data;\n  const params = {\n    input: {\n      name,\n      content,\n      test,\n      tags,\n      type\n    }\n  };\n  const query = `mutation CreateQuestion($input: CreateQuestionInput!) {\n    createQuestion(input: $input) {\n      id\n      name\n      content\n      test\n      type\n      tags\n    }\n  }`;\n  const result = await API.graphql(graphqlOperation(query, params));\n  console.log(result);\n  return result;\n};\n\nconst getQuestion = async (data) => {\n  const { id } = data;\n  const query = `query {\n    getQuestion(id: \"${id}\") {\n      content,\n      test,\n      tags\n    }\n  }`;\n  const result = await API.graphql(graphqlOperation(query));\n  return result;\n};\n\nconst updateQuestion = async (data) => {\n  const {\n    id,\n    content,\n    test,\n    tags\n  } = data;\n  const params = {\n    input: {\n      id,\n      content,\n      test,\n      tags\n    }\n  };\n  const query = `mutation UpdateQuestion($input: UpdateQuestionInput!) {\n    updateQuestion(input: $input) {\n      id\n      content\n      test\n      tags\n    }\n  }`;\n  const result = await API.graphql(graphqlOperation(query, params));\n  return result;\n};\n\nconst dispatchQuestion = async function(question) {\n  console.log('dispatchQuestion / updateQuestionSnapshot');\n  const params = {\n    input: {\n      type: question.type,\n      name: question.name,\n      content: question.content,\n      test: question.test,\n      questionSnapshotRoomId: \"demoRoom1\"\n    }\n  };\n  const result = await API.graphql(graphqlOperation(mutations.createQuestionSnapshot, params));\n  alert(JSON.stringify(result));\n};\n\nexport {\n  listQuestions,\n  createQuestion,\n  getQuestion,\n  updateQuestion,\n  dispatchQuestion\n};\n","// eslint-disable\n// this is an auto generated file. This will be overwritten\n\nexport const createRoom = `mutation CreateRoom($input: CreateRoomInput!) {\n  createRoom(input: $input) {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const updateRoom = `mutation UpdateRoom($input: UpdateRoomInput!) {\n  updateRoom(input: $input) {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const deleteRoom = `mutation DeleteRoom($input: DeleteRoomInput!) {\n  deleteRoom(input: $input) {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const createJeUser = `mutation CreateJeUser($input: CreateJEUserInput!) {\n  createJEUser(input: $input) {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const updateJeUser = `mutation UpdateJeUser($input: UpdateJEUserInput!) {\n  updateJEUser(input: $input) {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const deleteJeUser = `mutation DeleteJeUser($input: DeleteJEUserInput!) {\n  deleteJEUser(input: $input) {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const createTeam = `mutation CreateTeam($input: CreateTeamInput!) {\n  createTeam(input: $input) {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const updateTeam = `mutation UpdateTeam($input: UpdateTeamInput!) {\n  updateTeam(input: $input) {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const deleteTeam = `mutation DeleteTeam($input: DeleteTeamInput!) {\n  deleteTeam(input: $input) {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const createTest = `mutation CreateTest($input: CreateTestInput!) {\n  createTest(input: $input) {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const updateTest = `mutation UpdateTest($input: UpdateTestInput!) {\n  updateTest(input: $input) {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const deleteTest = `mutation DeleteTest($input: DeleteTestInput!) {\n  deleteTest(input: $input) {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const createRecord = `mutation CreateRecord($input: CreateRecordInput!) {\n  createRecord(input: $input) {\n    id\n    subjectId\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    result {\n      input\n      output\n      testCaseResults\n    }\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const updateRecord = `mutation UpdateRecord($input: UpdateRecordInput!) {\n  updateRecord(input: $input) {\n    id\n    subjectId\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    result {\n      input\n      output\n      testCaseResults\n    }\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const deleteRecord = `mutation DeleteRecord($input: DeleteRecordInput!) {\n  deleteRecord(input: $input) {\n    id\n    subjectId\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    result {\n      input\n      output\n      testCaseResults\n    }\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const createResult = `mutation CreateResult($input: CreateResultInput!) {\n  createResult(input: $input) {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const updateResult = `mutation UpdateResult($input: UpdateResultInput!) {\n  updateResult(input: $input) {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const deleteResult = `mutation DeleteResult($input: DeleteResultInput!) {\n  deleteResult(input: $input) {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const createQuestionSnapshot = `mutation CreateQuestionSnapshot($input: CreateQuestionSnapshotInput!) {\n  createQuestionSnapshot(input: $input) {\n    id\n    type\n    name\n    content\n    test\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const updateQuestionSnapshot = `mutation UpdateQuestionSnapshot($input: UpdateQuestionSnapshotInput!) {\n  updateQuestionSnapshot(input: $input) {\n    id\n    type\n    name\n    content\n    test\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const deleteQuestionSnapshot = `mutation DeleteQuestionSnapshot($input: DeleteQuestionSnapshotInput!) {\n  deleteQuestionSnapshot(input: $input) {\n    id\n    type\n    name\n    content\n    test\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const createQuestionSet = `mutation CreateQuestionSet($input: CreateQuestionSetInput!) {\n  createQuestionSet(input: $input) {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const updateQuestionSet = `mutation UpdateQuestionSet($input: UpdateQuestionSetInput!) {\n  updateQuestionSet(input: $input) {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const deleteQuestionSet = `mutation DeleteQuestionSet($input: DeleteQuestionSetInput!) {\n  deleteQuestionSet(input: $input) {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const createQuestion = `mutation CreateQuestion($input: CreateQuestionInput!) {\n  createQuestion(input: $input) {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\nexport const updateQuestion = `mutation UpdateQuestion($input: UpdateQuestionInput!) {\n  updateQuestion(input: $input) {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\nexport const deleteQuestion = `mutation DeleteQuestion($input: DeleteQuestionInput!) {\n  deleteQuestion(input: $input) {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\nexport const createAuthedModelForOwner = `mutation CreateAuthedModelForOwner($input: CreateAuthedModelForOwnerInput!) {\n  createAuthedModelForOwner(input: $input) {\n    id\n    content\n  }\n}\n`;\nexport const updateAuthedModelForOwner = `mutation UpdateAuthedModelForOwner($input: UpdateAuthedModelForOwnerInput!) {\n  updateAuthedModelForOwner(input: $input) {\n    id\n    content\n  }\n}\n`;\nexport const deleteAuthedModelForOwner = `mutation DeleteAuthedModelForOwner($input: DeleteAuthedModelForOwnerInput!) {\n  deleteAuthedModelForOwner(input: $input) {\n    id\n    content\n  }\n}\n`;\n","import React, { Component } from 'react';\nimport styles from './Border.module.scss';\n\nclass Border extends Component {\n  constructor(props) {\n    super(props);\n    const {\n      allowWidth,\n      allowHeight,\n      disabled,\n      borderSize\n    } = this.props;\n    this.ref = React.createRef();\n    this.resize = this.resize.bind(this);\n    this.startResize = this.startResize.bind(this);\n    this.endResize = this.endResize.bind(this);\n    this.borderSize = borderSize || 10;\n    this.disabled = disabled;\n    this.allowWidth = allowWidth;\n    this.allowHeight = allowHeight;\n    this.style = {};\n  }\n\n  resize(e) {\n    const {\n      allowHeight,\n      height,\n      width,\n      onUpdate,\n      allowWidth,\n      maxHeight,\n      maxWidth,\n      minWidth,\n      minHeight\n    } = this.props;\n    let newHeight = allowHeight\n      ? e.clientY - this.ref.current.offsetTop\n      : height;\n    if (maxHeight && newHeight > maxHeight) {\n      newHeight = maxHeight;\n    }\n    if (minHeight && newHeight < minHeight) {\n      newHeight = minHeight;\n    }\n    let newWidth = allowWidth\n      ? e.clientX - this.ref.current.offsetLeft\n      : width;\n    if (maxWidth && newWidth > maxWidth) {\n      newWidth = maxWidth;\n    }\n    if (minWidth && newWidth < minWidth) {\n      newWidth = minWidth;\n    }\n    onUpdate({\n      width: newWidth,\n      height: newHeight\n    });\n  }\n\n  endResize() {\n    window.removeEventListener('mousemove', this.resize);\n    window.removeEventListener('mouseup', this.endResize);\n    window.dispatchEvent(new Event('resize'));\n  }\n\n  startResize(e) {\n    if (e.target.contains(this.ref.current)) {\n      window.addEventListener('mousemove', this.resize);\n      window.addEventListener('mouseup', this.endResize);\n    }\n  }\n\n\n  render() {\n    const {\n      width,\n      height,\n      disabled,\n      children,\n      className\n    } = this.props;\n    this.style = {\n      ...this.style,\n      width: `${width}px`,\n      height: `${height}px`\n    };\n    let finalClassName = `${styles.border} ${className || ''}`;\n    if (!disabled && this.allowWidth) {\n      finalClassName = `${finalClassName} ${styles.horizontal}`;\n      this.style.paddingRight = `${this.borderSize}px`;\n    }\n    if (!disabled && this.allowHeight) {\n      finalClassName = `${finalClassName} ${styles.vertical}`;\n      this.style.paddingBottom = `${this.borderSize}px`;\n    }\n    return (\n      <div\n        ref={this.ref}\n        className={finalClassName}\n        onMouseDown={!disabled ? this.startResize : null}\n        style={this.style}\n      >\n        { children }\n      </div>\n    );\n  }\n}\n\nexport default Border;\n","import React from 'react';\nimport Border from 'app/components/Border';\nimport styles from './Grid.module.scss';\n\nexport default class Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    const {\n      layout,\n      borderSize\n    } = this.props;\n    this.ref = React.createRef();\n    this.borderSize = borderSize || 10;\n    this.layout = layout;\n    this.columns = layout\n      .reduce((cal, item) => {\n        const newCal = [...cal];\n        const { x } = item;\n        newCal[x] = [...(newCal[x] || []), item];\n        return newCal;\n      }, [])\n      .map(column => column || [])\n      .map(column => column.sort((a, b) => a.y - b.y));\n\n    this.state = {\n      data: this.columns.map((column) => {\n        return column.map((item) => {\n          return {\n            width: item.width,\n            height: item.height\n          };\n        });\n      })\n    };\n  }\n\n  componentDidMount() {\n    const { autoResize } = this.props;\n    if (autoResize) {\n      window.addEventListener('resize', this.onResize);\n      window.dispatchEvent(new Event('resize'));\n    }\n  }\n\n  componentWillUnmount() {\n    const { autoResize } = this.props;\n    if (autoResize) {\n      window.removeEventListener('resize', this.onResize);\n    }\n  }\n\n  onResize = () => {\n    this.updateFullState();\n  }\n\n  updateFullState = () => {\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\n    const { data } = this.state;\n    const newData = data.map((column, indexOfColumn) => {\n      return column.map((item, indexOfItem) => {\n        const sumOfWidth = data\n          .slice(0, -1)\n          .map(c => (c[0] || { width: 0 }))\n          .map(c => c.width)\n          .reduce((cal, val) => cal + val, 0);\n        const sumOfHeight = column\n          .slice(0, -1)\n          .map(c => c.height)\n          .reduce((cal, val) => cal + val, 0);\n        return {\n          width: indexOfColumn === data.length - 1 ? totalWidth - sumOfWidth : item.width,\n          height: indexOfItem === column.length - 1 ? totalHeight - sumOfHeight : item.height\n        };\n      });\n    });\n    this.setState({ data: newData });\n  }\n\n  updateGridState = ({\n    indexOfColumn, indexOfItem, width, height\n  }) => {\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\n    const { data } = this.state;\n    const newData = [...data];\n    if (width !== newData[indexOfColumn][0].width) {\n      newData[indexOfColumn] = newData[indexOfColumn]\n        .map((item) => {\n          return {\n            ...item,\n            width\n          };\n        });\n      newData[newData.length - 1] = newData[newData.length - 1].map((item) => {\n        return {\n          ...item,\n          width: totalWidth - width\n        };\n      });\n    } else if (height !== undefined && indexOfColumn !== undefined && indexOfItem !== undefined) {\n      newData[indexOfColumn][indexOfItem].height = height;\n      newData[indexOfColumn][newData[indexOfColumn].length - 1].height = totalHeight - newData[indexOfColumn][indexOfItem].height;\n    }\n    this.setState({ data: newData });\n  }\n\n  render() {\n    const { columns } = this;\n    const { children, totalWidth, totalHeight } = this.props;\n    const { data } = this.state;\n    return (\n      <div\n        className={styles.grid}\n        style={{\n          width: totalWidth,\n          height: totalHeight\n        }}\n        ref={this.ref}\n      >\n        {\n          columns.map((column, indexOfColumn) => {\n            const maxWidth = Math.max(...column.map(item => item.maxWidth || 0));\n            const minWidth = Math.min(...column.map(item => item.minWidth || 999999));\n            const isDisabledForWidth = indexOfColumn === columns.length - 1;\n            const finalWidth = isDisabledForWidth\n              ? data[indexOfColumn][0].width\n              : data[indexOfColumn][0].width + this.borderSize;\n            return (\n              <Border\n                allowWidth\n                borderSize={this.borderSize}\n                width={finalWidth}\n                maxWidth={maxWidth}\n                minWidth={minWidth}\n                onUpdate={({ width: w }) => this.updateGridState({\n                  indexOfColumn,\n                  width: w\n                })}\n                disabled={indexOfColumn === columns.length - 1}\n                key={JSON.stringify(column)}\n              >\n                {\n                  column.map((item, indexOfItem) => {\n                    const itemInData = data[indexOfColumn][indexOfItem];\n                    const itemInColumns = columns[indexOfColumn][indexOfItem];\n                    const isDisabled = indexOfItem === column.length - 1 || itemInColumns.static;\n                    return (\n                      <Border\n                        allowHeight\n                        borderSize={this.borderSize}\n                        width={itemInData.width}\n                        height={itemInData.height}\n                        maxHeight={itemInColumns.maxHeight}\n                        minHeight={itemInColumns.minHeight}\n                        onUpdate={({ width: w, height: h }) => this.updateGridState({\n                          indexOfItem,\n                          indexOfColumn,\n                          width: w,\n                          height: h\n                        })}\n                        disabled={isDisabled}\n                        key={JSON.stringify(item)}\n                      >\n                        { children.find(({ key }) => key === item.key) }\n                      </Border>\n                    );\n                  })\n                }\n              </Border>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styles from './Grid.module.scss';\n\nconst GridItem = ({ children }) => (\n  <div className={styles.item}>\n    { children }\n  </div>\n);\n\nexport default GridItem;\n","import React from 'react';\nimport AceEditor from 'react-ace';\n\nimport styles from './CodeWidget.module.scss';\n\nconst CodeWidget = ({\n  handleCodeChange,\n  data,\n  mode,\n  theme\n}) => (\n  <AceEditor\n    className={styles.code}\n    showPrintMargin={false}\n    mode={mode}\n    theme={theme}\n    onChange={handleCodeChange}\n    value={data}\n    tabSize={2}\n    debounceChangePeriod={800}\n  />\n);\n\nexport default CodeWidget;\n","import React from 'react';\nimport styles from './ResultWidget.module.scss';\n\nconst ResultWidget = () => (\n  <div className={styles.result} id=\"result\" />\n);\n\nexport default ResultWidget;\n","import React from 'react';\nimport styles from './AnswerWidget.module.scss';\n\nconst AnswerWidget = () => (\n  <div id=\"answer\" className={styles.answer} />\n);\n\nexport default AnswerWidget;\n","const spy = (obj, methodName) => {\n  const origFn = obj[methodName];\n  let callHistory = [];\n  let calledWith = {};\n\n  const secret = Math.random().toFixed(4) + '';\n  obj[methodName] = (...args) => {\n    const result = origFn.apply(obj, args);\n    callHistory.push(args);\n    calledWith[args.join(secret)] = true;\n    return result;\n  };\n  return {\n    calledWith: (...args) => !!calledWith[args.join(secret)],\n    callCount: () => callHistory.length,\n    restore: () => (obj[methodName] = origFn)\n  };\n};\n\nexport default spy;\n","import { createHarness } from 'tape';\n\nconst tryCatchPatch = t => (description, testBlock) => {\n  try {\n    t.comment(description);\n    testBlock(t);\n  } catch (e) {\n    t.fail(e);\n  }\n};\n\nconst combinePatch = (tape, patches) => (...args) => {\n  const [cb] = args.slice(-1);\n  if (typeof cb !== 'function') {\n    throw new Error('should provide callback');\n  }\n  tape(...args.slice(0, -1), (t) => {\n    for (let key in patches) {\n      t[key] = patches[key](t);\n    }\n    try {\n      cb(t);\n    } catch (e) {\n      t.fail(e);\n    }\n  });\n};\n\nconst getPatchedTape = (onUpdate) => {\n  const harness = createHarness();\n  const stream = harness.createStream({ objectMode: true });\n  stream.on('data', onUpdate);\n  return combinePatch(harness, {\n    subtest: tryCatchPatch,\n    should: tryCatchPatch\n  });\n};\n\nexport default getPatchedTape ;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { renderToString } from 'react-dom/server';\nimport sinon from 'sinon';\nimport vm from 'vm';\nimport spy from './spy';\nimport getPatchedTape from './tape';\n\nconst wrapCode = (code = '') => {\n  return code.replace(/for *\\(.*\\{|while *\\(.*\\{|do *\\{/g, (loopHead) => {\n    return `let count = 0;\n      const detector = (c) => {\n        if (c > 100000) {\n          throw new Error('infinite');\n        }\n      }\n      ${loopHead}\n      detector(count++);\n    `;\n  });\n};\n\nconst runCode = ({ code, wrappedConsole = console, onTapeUpdate }) => {\n  let script = null;\n  let context = null;\n  const clock = sinon.useFakeTimers();\n  let test = null;\n  if (onTapeUpdate) {\n    test = getPatchedTape(onTapeUpdate);\n  }\n  // should hijack setTimeout before pass to sandbox\n  const sandbox = {\n    setTimeout: window.setTimeout, // need to be passed also...\n    console: wrappedConsole,\n    sinon,\n    describe: test,\n    test,\n    clock,\n    spy,\n    React,\n    ReactDOM,\n    root: document.getElementById('result'),\n    answer: document.getElementById('answer'),\n    renderToString\n  };\n  try {\n    script = new vm.Script(wrapCode(code));\n    // eslint-disable-next-line\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n  } catch (e) {\n    script = new vm.Script(wrapCode(''));\n    // eslint-disable-next-line\n    context = new vm.createContext(sandbox);\n    script.runInContext(context);\n    wrappedConsole.log(e);\n  }\n  clock.restore();\n};\n\n// const debouncedRunCode = _.debounce(runCode, 200);\n\nexport default runCode;\n","import javascript from './javascript';\nimport react from './react';\n\nconst Questions = {\n  javascript,\n  react\n};\n\nconst getCategories = () => Object.keys(Questions).map((name) => { return { name }; });\n\nconst getQuestions = type => Questions[type];\n\nexport {\n  getCategories,\n  getQuestions\n};\n","const questionList = [\n  {\n    name: 'countChar',\n    content: `\n/**\n * Implement the function 'countChar'\n * to count the occurance of each character for the input string,\n * and return an object containing those information.\n *\n * For example :\n *  input string: 'abca'\n *\n *  returned object:\n *  {\n *     a: 2,\n *     b: 1,\n *     c: 1\n *  }\n */\n\n/**\n * Implement function body\n */\nfunction countChar(s) {\n\n}\n\n`,\n    test: `\ntest('countChar test', (t) => {\n  t.subtest('should return character count in an object', t => {\n    const result = countChar();\n    t.equal(typeof result, 'object');\n  });\n  t.subtest('should be able to count chars', t => {\n    const input = 'abca';\n    const result = countChar(input);\n    t.equal(result.a, 2);\n    t.equal(result.b, 1);\n  });\n  t.subtest('should be able count some longer string as well', t => {\n    const input = 'The Quick Brown Fox Jumps Over The Lazy Dog';\n    const result = countChar(input);\n    t.equal(result[' '], 8);\n    t.equal(result.T, 2);\n    t.equal(result.o, 3);\n  });\n})\n\n`\n  },\n  {\n    name: 'forEach, map and reduce',\n    content: `\n/**\n * Implement the function 'forEach, map and reduce'\n *\n */\n\n/**\n * Implement function body\n */\nconst myForEach = function (array, callback) {\n\n}\n\nconst myMap = function (array, callback) {\n\n}\n\nconst myReduce = function (array, callback, initValue) {\n\n}\n\n`,\n    test: `\ntest('forEach, map and reduce test', (t) => {\n  t.subtest('should execute forEach correctly', t => {\n    let count = 0;\n    myForEach([1, 2, 3, 4], (val, index) => count += val * index * index);\n    t.equal(count, 50);\n  });\n  t.subtest('should execute map correctly', t => {\n    const result = myMap([1, 2, 3, 4], (val, index) => val * index * index);\n    t.equal(result[0], 0);\n    t.equal(result[2], 12);\n  });\n  t.subtest('should execute reduce correctly', t => {\n    const result = myReduce([10, 2, 3], (cal, val, index) => cal + val * index, 0);\n    t.equal(result, 8);\n  });\n});\n\n`\n  },\n  {\n    name: 'adder',\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *   addTen = adder(10)\n *   addFive = adder(5)\n *\n *   addTen(10)  // return 20\n *   addFive(10) // return 15\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should be able to add two numbers', t => {\n    const add5 = adder(5);\n    t.equal(add5(10), 15);\n    t.equal(add5(20), 25);\n\n    t.equal(adder(40)(2), 42);\n  });\n})\n\n`\n  },\n  {\n    name: 'infinite adder',\n    content: `\n/**\n * Implement a function 'adder'\n * which behavior is like the following example\n *\n * ex:\n *\n *   adder(10)(20)(30).getValue()  // return 60\n *   adder(10)(20)(30)(40).getValue() // return 100\n*/\n\n/**\n * Implement function body\n */\nfunction adder() {\n}\n\n`,\n    test: `\ntest('adder test', (t) => {\n  t.subtest('should return a function', t => {\n    t.equal(typeof adder(), 'function');\n  });\n  t.subtest('should get default value with 0', t => {\n    t.equal(adder().getValue(), 0);\n  });\n  t.subtest('should be able to add mutiple numbers', t => {\n    t.equal(adder(10).getValue(), 10);\n    t.equal(adder(10)(20)(30).getValue(), 60);\n    t.equal(adder(10)(20)(30)(40).getValue(), 100);\n  });\n})\n\n`\n  },\n  {\n    name: 'default function',\n    content: `\n/**\n * Implement a function 'defaultWith'\n * which behavior is like the following example\n *\n * ex:\n *\n *   const fn = ({ a, b }) => a + b;\n *   const boundFn = defaultWith(fn, { a: 10 });\n *   boundFn({ b: 20 }); // return 30\n*/\n\n/**\n * Implement function body\n */\nfunction defaultWith() {\n}\n\n`,\n    test: `\ntest('defaultWith test', (t) => {\n  t.subtest('should return a function', t => {\n    const fn = () => {};\n    t.equal(typeof defaultWith(fn, {}), 'function');\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ a, b }) => a * 2 + b * 3;\n    const boundFn = defaultWith(fn, { a: 3 });\n    t.equal(boundFn({ b: 4 }), 18);\n  });\n  t.subtest('should get correct result when all parameters are given', t => {\n    const fn = ({ x, y, z }) => x * y * z;\n    const boundFn = defaultWith(fn, { x: 3, y: 4 });\n    t.equal(boundFn({ x: 7, z: 2 }), 56);\n  });\n})\n\n`\n  },\n  {\n    name: 'sequential',\n    content: `\n/**\n * Implement the function 'sequential'\n * to execute async functions in sequence.\n *\n * 'sequential' takes an array of async functions as parameter,\n * and execute each of them after previous one has done.\n */\n\n/**\n * Implement function body\n */\nfunction sequential(tasks = []) {\n\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('sequential test', (t) => {\n  const log = spy(console, 'log');\n  sequential(tasks);\n  t.equal(log.callCount(), 0);\n  clock.tick(600);\n  t.equal(log.callCount(), 1);\n  t.ok(log.calledWith('task 1 done'));\n  clock.tick(600);\n  t.equal(log.callCount(), 3);\n  t.ok(log.calledWith('task 3 done'));\n});\n\n    `\n  },\n  {\n    name: 'parallel',\n    content: `\n/**\n * Implement the function 'parallel'\n * to execute async functions at once.\n *\n * 'parallel' takes an array of async functions as parameter,\n * and execute each of them in the same time.\n *\n */\n\n/**\n * Implement function body\n */\nfunction parallel(tasks = [], callback) {\n}\n\n`,\n    test: `\nfunction asyncTask1(done) {\n  setTimeout(() => {\n    console.log('task 1 done');\n    done(1);\n  }, 500);\n}\nfunction asyncTask2(done) {\n  setTimeout(() => {\n    console.log('task 2 done');\n    done(2);\n  }, 400);\n}\nfunction asyncTask3(done) {\n  setTimeout(() => {\n    console.log('task 3 done');\n    done(3);\n  }, 300);\n}\n\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\n\ntest('parallel test', t => {\n  t.subtest('should run all tasks at once', t => {\n    const spyLog = spy(console, 'log');\n    parallel(tasks, (result) => { /* do nothing */ });\n    t.equal(spyLog.callCount(), 0);\n    clock.tick(600);\n    t.equal(spyLog.callCount(), 3);\n  });\n\n  t.subtest('should get task result in an array', t => {\n    let obj = {};\n    parallel(tasks, (result) => {\n      obj.result = result;\n    });\n    clock.tick(600);\n    t.deepEqual(obj.result, [1, 2, 3]);\n  });\n\n  t.subtest('should trigger callback only once', t => {\n    let count = 0;\n    const callback = () => count++;\n\n    parallel(tasks, callback);\n    clock.tick(300);\n    t.equal(count, 0);\n    clock.tick(600);\n    t.equal(count, 1);\n  });\n});\n\n`\n  },\n  {\n    name: 'combineReducers',\n    content: `\n// http://redux.js.org/docs/api/combineReducers.html\nfunction combineReducers(reducers) {\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nfunction calledCount(state = 0, action) {\n  if(action.type == 'CALL') {\n    return state + 1;\n  }\n  return state;\n}\n\n`,\n    test: `\ntest('combineReducers', t => {\n  const reducer = combineReducers({\n    calc: calc,\n    calls: calledCount,\n  });\n\n  t.subtest('should init states', t => {\n    let state = {};\n    state = reducer(state, {type: ''});\n    t.equal(state.calc, 0);\n    t.equal(state.calls, 0);\n  });\n\n  t.subtest('should handle actions', t => {\n    let state = {};\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 1);\n    state = reducer(state, {type: 'ADD'});\n    t.equal(state.calc, 2);\n  });\n})\n`\n  },\n  {\n    name: 'applyMiddleware',\n    content: `\n// http://redux.js.org/docs/api/applyMiddleware.html\n\nfunction applyMiddleware(...middlewares) {\n  return createStore => (...args) => {\n    const store = createStore(...args);\n    let dispatch = store.dispatch;\n    /**************************\n     implement              here\n     **************************/\n\n\n\n\n    /***************************/\n    return Object.assign(store, { dispatch })\n  }\n}\n\n`,\n    test: `\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  if (typeof enhancer !== 'undefined') {\n    return enhancer(createStore)(reducer, preloadedState)\n  }\n\n  let currentReducer = reducer;\n  let currentState = preloadedState;\n\n  function getState() {\n    return currentState;\n  }\n\n  function dispatch(action) {\n    currentState = currentReducer(currentState, action);\n  }\n\n  dispatch({ type: '@@INIT' });\n\n  return {\n    dispatch,\n    getState\n  };\n}\n\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst thunk = ({ getState, dispatch }) => next => action => {\n  if (typeof action === 'function') {\n    return action(dispatch, getState);\n  }\n  return next(action);\n}\n\ntest('applyMiddleware test', t => {\n\n  t.subtest('should execute normal action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute function action', t => {\n    const store = createStore(calc, 0, applyMiddleware(thunk));\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n\n  t.subtest('should apply mutiple middlewares in the right order', t => {\n    let logCount = 1;\n    const log = () => next => action => {\n      logCount += 1;\n      next(action);\n    }\n    const log2 = () => next => action => {\n      logCount *= 2;\n      next(action);\n    }\n    const store = createStore(calc, 0, applyMiddleware(log, log2));\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(logCount, 22);\n  });\n})\n`\n  },\n  {\n    name: 'createStore',\n    content: `\n// http://redux.js.org/docs/api/createStore.html\n\nfunction createStore(reducer, preloadedState, enhancer) {\n\n  function getState() {\n\n  }\n\n  function subscribe(listener) {\n\n  }\n\n  function dispatch(action) {\n\n  }\n\n  dispatch({ type: '@@INIT' })\n\n  return {\n    dispatch,\n    subscribe,\n    getState\n  }\n}\n\n\n`,\n    test: `\nfunction calc(state = 0, action) {\n  switch(action.type) {\n    case 'ADD':\n      return state + 1;\n    case 'DEC':\n      return state - 1;\n    default:\n      return state;\n  }\n}\n\nconst wrappedThunk = (createStore) => {\n  return function (...args) {\n    const store = createStore(...args);\n    const { dispatch, getState } = store;\n    store.dispatch = (action) => {\n      if (typeof action === 'function') {\n        return action(dispatch, getState);\n      }\n      dispatch(action);\n    }\n    return store;\n  }\n}\n\ntest('createStore test', t => {\n\n  t.subtest('should execute getState successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n  });\n\n  t.subtest('should execute dispatch successfully', t => {\n    const store = createStore(calc, 0);\n    t.equal(store.getState(), 0);\n    store.dispatch({ type: 'ADD' });\n    t.equal(store.getState(), 1);\n  });\n\n  t.subtest('should execute subscribe and unsubscribe successfully', t => {\n    const store = createStore(calc, 0);\n    let dispatchCount = 1;\n    let dispatchCount2 = 3;\n    const unsubscribeForCount = store.subscribe(() => dispatchCount *= 2);\n    const unsubscribeForCount2 = store.subscribe(() => dispatchCount2 *= 2);\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 24);\n    unsubscribeForCount();\n    store.dispatch({ type: 'ADD' });\n    store.dispatch({ type: 'ADD' });\n    unsubscribeForCount2();\n    store.dispatch({ type: 'ADD' });\n    t.equal(dispatchCount, 8);\n    t.equal(dispatchCount2, 96);\n  });\n\n  t.subtest('should execute enhancer successfully', t => {\n    const store = createStore(calc, 0, wrappedThunk);\n    const incrementAsync = (dispatch, getState) => {\n      setTimeout(() => {\n        dispatch({ type: 'ADD' });\n      }, 1000);\n    };\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    store.dispatch(incrementAsync);\n    t.equal(store.getState(), 0);\n    clock.tick(1000);\n    t.equal(store.getState(), 5);\n  });\n})\n`\n  },\n  {\n    name: 'explain',\n    content: `\n// explain the purpose of following code;\n// modify variable name and/or code style when appropriate;\n// add comments where you see fit\nfunction foo(a, b) {\n  var c = [];\n  for(var i0 = 0, i1 = 0; i0 < a.length && i1 < b.length; ) {\n    if(a[i0] < b[i1]) {\n      c.push(a[i0++]);\n    }\n    if(a[i0] >= b[i1]) {\n      c.push(b[i1++]);\n    }\n  }\n  if(i0 < a.length) {\n    for(var i = i0; i < a.length; i++) {\n      c.push(a[i]);\n    }\n  }\n  if(i1 < b.length) {\n    for(var i = i1; i < b.length; i++) {\n      c.push(b[i]);\n    }\n  }\n  return c;\n}\n\nconsole.log(foo([1,4,5], [2,3,6]))\n`\n  },\n  {\n    name: 'mergeSort',\n    content: `\n// implement function merge, so mergeSort can run correctly\nfunction merge(arr1, arr2) {\n  // TODO enter your code here\n  return arr1;\n}\n\nfunction mergeSort(arr) {\n  if(arr.length <= 1) {\n    return arr;\n  }\n  const mid = Math.floor(arr.length / 2);\n  const sortedArr1 = mergeSort(arr.slice(0, mid));\n  const sortedArr2 = mergeSort(arr.slice(mid));\n  return merge(sortedArr1, sortedArr2);\n}\n\n`,\n    test: `\ntest('mergeSort', t => {\n  t.deepEqual(mergeSort([6,3,5,10,2,100,4,1]),[1,2,3,4,5,6,10,100]);\n  const randomNumbers = Array.from({length: 20})\n    .map(() => Math.floor(Math.random() * 100));\n  const sorted = randomNumbers.slice(0).sort((a, b) => a - b);\n  t.deepEqual(mergeSort(randomNumbers), sorted);\n})\n`\n  },\n];\n\nexport default questionList;\n","const questionList = [\n  {\n    name: 'Search',\n    content: `\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n      </div>\n    );\n  }\n}\n\nconst search = (query) => new Promise((resolve, reject) => {\n  const result = DATA.filter(({ name }) => name.includes(query.toLowerCase()));\n  if (result.length !== 0) {\n    resolve(result);\n  } else {\n    reject(new Error('not found'));\n  }\n});\n\nconst Item = ({ name, price }) => (\n  <div>\n    { name }: { price }$ \n  </div>\n);\n\nconst DATA = [\n  {\n    name: 'apple',\n    price: 10,\n    id: 1\n  },\n  {\n    name: 'orange',\n    price: 15,\n    id: 2\n  },\n  {\n    name: 'banana',\n    price: 7,\n    id: 3\n  },\n]\n\n`,\n    test: `\nclass AnswerApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '', data: [] };\n  }\n  changeValue = async (name) => {\n    this.setState({ value: name });\n    if (name.trim() === '') {\n      this.setState({ data: [] });\n      return;\n    }\n    try {\n      const result = await search(name);\n      this.setState({ data: result });\n    } catch (e) {\n      this.setState({ data: [] });\n    }\n  }\n  render() {\n    return (\n      <div>\n        <div>Hi, I want to buy { this.state.value }</div>\n        <input onChange={e => this.changeValue(e.target.value)}/>\n        <div>\n          {\n            this.state.data.map(({ price, name, id }) => <Item price={price} name={name} key={id} /> )\n          }\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <AnswerApp />,\n  answer\n);\n\ntry {\n  renderToString(\n    <App />\n  );\n  ReactDOM.render(\n    <App/>,\n    root\n  )\n} catch (e) {\n  console.log(e)\n}\n\n`\n  },\n];\n\nexport default questionList;\n","import React from 'react';\nimport { Select } from 'antd';\n\nimport { getCategories } from 'app/questions/index';\n\nconst categories = getCategories();\nconst { Option } = Select;\n\nconst CategorySelector = ({ index, onChange }) => (\n  <Select\n    onChange={onChange}\n    defaultValue={index}\n    style={{ minWidth: 200 }}\n  >\n    { categories.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\n  </Select>\n);\n\nexport default CategorySelector;\n","import React from 'react';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\n\nimport { Button, Input } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\n\nconst ControlWidget = ({\n  index,\n  onChangeName,\n  onSubmit,\n  onChangeCategory\n}) => (\n  <div className={styles.control}>\n    <CategorySelector onChange={onChangeCategory} index={index} />\n    <Input\n      placeholder=\"Question name\"\n      onChange={e => onChangeName(e.target.value)}\n      style={{ width: 200, marginRight: 5 }}\n    />\n    <Button\n      type=\"danger\"\n      onClick={onSubmit}\n    >\n      Submit\n    </Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport { Tag, Input, Tooltip, Icon } from 'antd';\n\nimport styles from './TagWidget.module.scss';\n\nclass TagWidget extends Component {\n  state = {\n    inputVisible: false,\n    inputValue: '',\n  };\n\n  handleClose = (removedTag) => {\n    const { data: tags, onTagUpdate } = this.props;\n    onTagUpdate(tags.filter(tag => tag !== removedTag));\n  }\n\n  showInput = () => {\n    this.setState({ inputVisible: true }, () => this.input.focus());\n  }\n\n  handleInputChange = (e) => {\n    this.setState({ inputValue: e.target.value });\n  }\n\n  handleInputConfirm = () => {\n    const { onTagUpdate, data: tags } = this.props;\n    const { inputValue } = this.state;\n    let newTags = [...tags];\n    if (inputValue && tags.indexOf(inputValue) === -1) {\n      newTags = [...newTags, inputValue];\n    }\n    onTagUpdate(newTags);\n    this.setState({ inputValue: '', inputVisible: false });\n  }\n\n  saveInputRef = input => this.input = input\n\n  render() {\n    const { inputVisible, inputValue } = this.state;\n    const { data: tags } = this.props;\n    return (\n      <div className={styles['tag-widget']}>\n        {tags.map((tag, index) => {\n          const isLongTag = tag.length > 20;\n          const tagElem = (\n            <Tag key={tag} closable afterClose={() => this.handleClose(tag)}>\n              {isLongTag ? `${tag.slice(0, 20)}...` : tag}\n            </Tag>\n          );\n          return isLongTag ? <Tooltip title={tag} key={tag}>{tagElem}</Tooltip> : tagElem;\n        })}\n        {inputVisible && (\n          <Input\n            ref={this.saveInputRef}\n            type=\"text\"\n            size=\"small\"\n            style={{ width: 78 }}\n            value={inputValue}\n            onChange={this.handleInputChange}\n            onBlur={this.handleInputConfirm}\n            onPressEnter={this.handleInputConfirm}\n          />\n        )}\n        {!inputVisible && (\n          <Tag\n            onClick={this.showInput}\n            style={{ background: '#fff', borderStyle: 'dashed' }}\n          >\n            <Icon type=\"plus\" />\n            New Tag\n          </Tag>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default TagWidget;","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './ReactPage.module.scss';\n\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      name: '',\n      tags: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    const { compiledCode } = this.state;\n    debouncedRunCode({ code: compiledCode });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      // this.setState({ tape: [] }, () => {\n      debouncedRunCode({ code: compiledCode });\n      // });\n    }\n    return true;\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      name,\n      code,\n      test\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      tags,\n      name,\n      code,\n      test,\n      type: 'react'\n    });\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tags,\n      isLoading\n    } = this.state;\n    const { onChangeCategory, index } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 3, width: window.innerWidth / 2, height: 200, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>     \n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"jsx\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ test: newCode }, this.onCodeChange);\n                }}\n                data={test}\n                mode=\"jsx\"\n                theme=\"textmate\"\n              />\n            </GridItem>\n            <GridItem key=\"answer\">\n              <AnswerWidget />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                onChangeName={(name) => { this.setState({ name })}}\n                onSubmit={this.onSubmit}\n                type=\"react\"\n                onChangeCategory={onChangeCategory}\n                index={index}\n              />\n            </GridItem>\n            <GridItem key=\"result\">\n              <ResultWidget />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default ReactPage;\n","import React from 'react';\nimport AceEditor from 'react-ace';\nimport styles from './TestWidget.module.scss';\n\nconst TestWidget = ({ data, readOnly = true, handleCodeChange = () => {} }) => (\n  <div\n    className={`${styles['test-widget']}`}\n  >\n    <AceEditor\n      showPrintMargin={false}\n      mode=\"javascript\"\n      theme=\"textmate\"\n      value={data}\n      readOnly={readOnly}\n      tabSize={2}\n      onChange={handleCodeChange}\n    />\n  </div>\n);\n\nexport default TestWidget;\n","import React from 'react';\nimport styles from './TapeWidget.module.scss';\n\nconst TestRow = row => (\n  <div className={styles.test}>\n    { row.name }\n  </div>\n);\n\nconst AssertRow = (row) => {\n  const actual = typeof row.actual === 'object' ? JSON.stringify(row.actual) : `${row.actual}`;\n  const expected = typeof row.expected === 'object' ? JSON.stringify(row.expected) : `${row.expected}`;\n  return (\n    <div className={`${styles.assert} ${row.ok ? styles.ok : styles.fail}`}>\n      <div className={row.ok ? styles.ok : styles.fail}>{row.ok ? 'OK' : 'FAIL'}</div>\n      { row.name ? <div className={styles.name}>{ `${row.name}` }</div> : null }\n      {\n        !row.ok\n          ? (\n            <>\n              <div className={styles.actual}>{ actual }</div>\n              <div className={styles['not-equal']}>!=</div>\n              <div className={styles.expected}>{ expected }</div>\n              {\n                typeof row.actual === 'string' && typeof row.expected === 'string'\n                  ? (\n                    <div className={styles.diff}>\n                      <span className={styles.expected}>{ expected }</span>\n                      <span className={styles.actual}>{ actual }</span>\n                    </div>\n                  )\n                  : null\n              }\n            </>\n          )\n          : null\n      }\n    </div>\n  );\n};\n\n// TODO: add endrow component\nconst EndRow = row => (\n  <div>\n    { JSON.stringify(row) }\n  </div>\n);\n\nconst DescriptionRow = ({ description }) => (\n  <div className={styles.description}>\n    { description }\n  </div>\n);\n\nconst getRow = (row) => {\n  switch (row.type) {\n    case 'test':\n      return <TestRow key={JSON.stringify(row)} {...row} />;\n    case 'assert':\n      return <AssertRow key={JSON.stringify(row)} {...row} />;\n    case 'end':\n      return <EndRow key={JSON.stringify(row)} {...row} />;\n    case undefined && typeof row === 'string':\n      return <DescriptionRow description={row} key={row} />;\n    default:\n      return null;\n  }\n};\n\nconst TapeWidget = ({ data }) => {\n  return (\n    <div className={styles.tape}>{ data.map(getRow) }</div>\n  );\n};\n\nexport default TapeWidget;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\n\nimport { changeCategory } from 'app/actions/category';\n\nimport { getCategories } from 'app/questions/index';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './JavaScriptPage.module.scss';\n\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      tape: [],\n      name: '',\n      tags: [],\n      isLoading: false\n    };\n  }\n\n  componentDidMount() {\n    const { compiledCode } = this.state;\n    const { actions } = this.props;\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      this.setState({ tape: [] }, () => {\n        debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n      });\n    }\n    return true;\n  }\n\n  addTape = (data) => {\n    const { tape } = this.state;\n    this.setState({\n      tape: [...tape, data]\n    });\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      name,\n      code,\n      test\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      tags,\n      name,\n      code,\n      test,\n      type: 'javascript'\n    });\n    this.setState({ isLoading: false });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tape,\n      tags,\n      isLoading\n    } = this.state;\n    const { onChangeCategory, index } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"javascript\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <TestWidget\n                handleCodeChange={(newTest) => {\n                  this.setState({ test: newTest }, this.onCodeChange);\n                }}\n                data={test}\n                readOnly={false}\n              />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"javascript\"\n                onChangeName={(name) => { this.setState({ name })}}\n                onSubmit={this.onSubmit}\n                onChangeCategory={onChangeCategory}\n                index={index}\n              />\n            </GridItem>\n            <GridItem key=\"tape\">\n              <TapeWidget data={tape} />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default JavaScriptPage;\n","import React, { Component } from 'react';\n\nimport { createQuestion } from 'app/utils/question';\n\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\nconst getPageComponent = (args) => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { category: 0 };\n  }\n\n  componentDidMount() {\n    const { state, history } = this.props;\n    // if (!state.login.isLogin) {\n    //   history.push('/login');\n    //   return;\n    // }\n  }\n\n  onChangeCategory = (index) => {\n    this.setState({ category: index });\n  }\n\n  onSubmit = async (data) => {\n    try {\n      await createQuestion(data);\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  render() {\n    const { category } = this.state;\n    return (\n      <React.Fragment>\n        { getPageComponent({ index: category, onSubmit: this.onSubmit, onChangeCategory: this.onChangeCategory }) }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Page;\n","import React from 'react';\nimport { Select } from 'antd';\n\nconst { Option } = Select;\n\n// const QuestionSelector = ({ actions, state }) => {\n//   const {\n//     questionIndex,\n//     type,\n//     questions\n//   } = getStateInformation(state);\n//   return (\n//     <Select\n//       onChange={index => actions.changeQuestion({ index, type: type.toUpperCase() })}\n//       defaultValue={questionIndex}\n//       style={{ minWidth: 200 }}\n//     >\n//       { questions.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\n//     </Select>\n//   );\n// };\n\nconst QuestionSelector = ({ index, onChange, list }) => (\n  <Select\n    onChange={onChange}\n    defaultValue={index}\n    style={{ minWidth: 200 }}\n  >\n    { list.map((q, i) => <Option key={q.id} value={i}>{q.name}</Option>)}\n  </Select>\n);\n\nexport default QuestionSelector;\n","import React from 'react';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\n\nimport { Button } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\n\nconst ControlWidget = ({\n  categoryIndex,\n  questionIndex,\n  onSubmit,\n  onChangeCategory,\n  onChangeQuestion,\n  questionList\n}) => (\n  <div className={styles.control}>\n    <CategorySelector onChange={onChangeCategory} index={categoryIndex} />\n    <QuestionSelector onChange={onChangeQuestion} index={questionIndex} list={questionList} />\n    <Button\n      type=\"danger\"\n      onClick={onSubmit}\n    >\n      Submit\n    </Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport { listQuestions, getQuestion } from 'app/utils/question';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './ReactPage.module.scss';\n\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      name: '',\n      tags: [],\n      index: 0,\n      questionList: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    const { compiledCode } = this.state;\n    this.setState({ isLoading: true });\n    const result = await listQuestions('react');\n    this.setState({ questionList: result.data.listQuestions.items, isLoading: false });\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      // this.setState({ tape: [] }, () => {\n      debouncedRunCode({ code: compiledCode });\n      // });\n    }\n    return true;\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      code,\n      test,\n      id\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      id,\n      tags,\n      code,\n      test\n    });\n    this.setState({ isLoading: false });\n  }\n\n  onChangeQuestion = async (index) => {\n    const { questionList } = this.state;\n    const { id } = questionList[index];\n    this.setState({ isLoading: true, index });\n    const result = await getQuestion({ id });\n    const { tags, content: code, test } = result.data.getQuestion;\n    this.setState({\n      tags,\n      code,\n      test,\n      isLoading: false,\n      id\n    });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tags,\n      isLoading,\n      questionList,\n      index\n    } = this.state;\n    const { onChangeCategory, categoryIndex } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 3, width: window.innerWidth / 2, height: 200, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>    \n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"jsx\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ test: newCode }, this.onCodeChange);\n                }}\n                data={test}\n                mode=\"jsx\"\n                theme=\"textmate\"\n              />\n            </GridItem>\n            <GridItem key=\"answer\">\n              <AnswerWidget />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"react\"\n                onChangeName={name => this.setState({ name })}\n                onSubmit={this.onSubmit}\n                onChangeCategory={onChangeCategory}\n                categoryIndex={categoryIndex}\n                questionIndex={index}\n                questionList={questionList}\n                onChangeQuestion={this.onChangeQuestion}\n              />\n            </GridItem>\n            <GridItem key=\"result\">\n              <ResultWidget />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate}/>\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default ReactPage;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\n\nimport { changeCategory } from 'app/actions/category';\n\nimport { getCategories } from 'app/questions/index';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport { listQuestions, getQuestion } from 'app/utils/question';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './JavaScriptPage.module.scss';\n\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      tape: [],\n      tags: [],\n      id: null,\n      questionList: [],\n      isLoading: false,\n      index: 0\n    };\n  }\n\n  async componentDidMount() {\n    const { compiledCode } = this.state;\n    this.setState({ isLoading: true });\n    const result = await listQuestions('javascript');\n    this.setState({ questionList: result.data.listQuestions.items, isLoading: false });\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      this.setState({ tape: [] }, () => {\n        debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n      });\n    }\n    return true;\n  }\n\n  addTape = (data) => {\n    const { tape } = this.state;\n    this.setState({\n      tape: [...tape, data]\n    });\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      code,\n      test,\n      id\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      id,\n      tags,\n      code,\n      test\n    });\n    this.setState({ isLoading: false });\n  }\n\n  onChangeQuestion = async (index) => {\n    const { questionList } = this.state;\n    const { id } = questionList[index];\n    this.setState({ isLoading: true, index });\n    const result = await getQuestion({ id });\n    const { tags, content: code, test } = result.data.getQuestion;\n    this.setState({\n      tags,\n      code,\n      test,\n      isLoading: false,\n      id\n    });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tape,\n      tags,\n      questionList,\n      isLoading,\n      index\n    } = this.state;\n    const { onChangeCategory, categoryIndex } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"javascript\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <TestWidget\n                handleCodeChange={(newTest) => {\n                  this.setState({ test: newTest }, this.onCodeChange);\n                }}\n                data={test}\n                readOnly={false}\n              />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"javascript\"\n                onChangeName={name => this.setState({ name })}\n                onSubmit={this.onSubmit}\n                onChangeCategory={onChangeCategory}\n                categoryIndex={categoryIndex}\n                questionIndex={index}\n                questionList={questionList}\n                onChangeQuestion={this.onChangeQuestion}\n              />\n            </GridItem>\n            <GridItem key=\"tape\">\n              <TapeWidget data={tape} />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default JavaScriptPage;\n","import React, { Component } from 'react';\n\nimport { updateQuestion } from 'app/utils/question';\n\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\n\nconst getPageComponent = (args) => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { category: 0 };\n  }\n\n  componentDidMount() {\n    const { state, history } = this.props;\n    // if (!state.login.isLogin) {\n    //   history.push('/login');\n    //   return;\n    // }\n  }\n\n  onChangeCategory = (index) => {\n    this.setState({ category: index });\n  }\n\n  onSubmit = async (data) => {\n    try {\n      await updateQuestion(data);\n    } catch (e) {\n      alert(e.message);\n    }\n  }\n\n  render() {\n    const { category } = this.state;\n    return (\n      <React.Fragment>\n        {\n          getPageComponent({\n            index: category,\n            onSubmit: this.onSubmit,\n            onChangeCategory: this.onChangeCategory,\n            categoryIndex: category\n          })\n        }\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Page;\n","import React from 'react';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\n\nimport { Button } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\n\nconst ControlWidget = ({\n  categoryIndex,\n  questionIndex,\n  onSubmit,\n  onDispatchQuestion,\n  onChangeCategory,\n  onChangeQuestion,\n  questionList\n}) => (\n  <div className={styles.control}>\n    <CategorySelector onChange={onChangeCategory} index={categoryIndex} />\n    <QuestionSelector onChange={onChangeQuestion} index={questionIndex} list={questionList} />\n    <Button\n      type=\"danger\"\n      // onClick={onSubmit}\n      onClick={onDispatchQuestion}\n    >\n      Dispatch Question\n    </Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport { listQuestions, getQuestion } from 'app/utils/question';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './ReactPage.module.scss';\n\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      name: '',\n      tags: [],\n      index: 0,\n      questionList: [],\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    const { compiledCode } = this.state;\n    this.setState({ isLoading: true });\n    const result = await listQuestions('react');\n    this.setState({ questionList: result.data.listQuestions.items, isLoading: false });\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      // this.setState({ tape: [] }, () => {\n      debouncedRunCode({ code: compiledCode });\n      // });\n    }\n    return true;\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      code,\n      test,\n      id\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      id,\n      tags,\n      code,\n      test\n    });\n    this.setState({ isLoading: false });\n  }\n\n  onDispatchQuestion = async () => {\n    const {\n      name,\n      type,\n      tags,\n      code,\n      test,\n      id\n    } = this.state;\n    const { onDispatchQuestion } = this.props;\n    console.log('onDispatchQuestion!', this.state)\n    this.setState({ isLoading: true });\n    await onDispatchQuestion({\n      name,\n      type,\n      content: code,\n      test\n    });\n    this.setState({ isLoading: false });\n  }\n\n  onChangeQuestion = async (index) => {\n    const { questionList } = this.state;\n    const { id, name, type } = questionList[index];\n    this.setState({ isLoading: true, index });\n    const result = await getQuestion({ id });\n    const { tags, content: code, test } = result.data.getQuestion;\n    this.setState({\n      name,\n      type,\n      tags,\n      code,\n      test,\n      isLoading: false,\n      id\n    });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tags,\n      isLoading,\n      questionList,\n      index\n    } = this.state;\n    const { onChangeCategory, categoryIndex } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 3, width: window.innerWidth / 2, height: 200, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>    \n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"jsx\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ test: newCode }, this.onCodeChange);\n                }}\n                data={test}\n                mode=\"jsx\"\n                theme=\"textmate\"\n              />\n            </GridItem>\n            <GridItem key=\"answer\">\n              <AnswerWidget />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"react\"\n                onChangeName={name => this.setState({ name })}\n                // onSubmit={this.onSubmit}\n                onDispatchQuestion={this.onDispatchQuestion}\n                onChangeCategory={onChangeCategory}\n                categoryIndex={categoryIndex}\n                questionIndex={index}\n                questionList={questionList}\n                onChangeQuestion={this.onChangeQuestion}\n              />\n            </GridItem>\n            <GridItem key=\"result\">\n              <ResultWidget />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate}/>\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default ReactPage;\n","import React, { Component } from 'react';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport { Spin } from 'antd';\n\nimport { transform } from '@babel/standalone';\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\n\nimport { changeCategory } from 'app/actions/category';\n\nimport { getCategories } from 'app/questions/index';\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport { listQuestions, getQuestion } from 'app/utils/question';\n\nimport ControlWidget from '../ControlWidget';\nimport TagWidget from '../../TagWidget';\nimport styles from './JavaScriptPage.module.scss';\n\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n    this.state = {\n      code: '',\n      compiledCode: '',\n      test: '',\n      tape: [],\n      tags: [],\n      id: null,\n      questionList: [],\n      isLoading: false,\n      index: 0\n    };\n  }\n\n  async componentDidMount() {\n    const { compiledCode } = this.state;\n    this.setState({ isLoading: true });\n    const result = await listQuestions('javascript');\n    this.setState({ questionList: result.data.listQuestions.items, isLoading: false });\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const { compiledCode: previousCompiledCode } = this.state;\n    const { compiledCode } = nextState;\n    if (previousCompiledCode !== compiledCode) {\n      this.setState({ tape: [] }, () => {\n        debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\n      });\n    }\n    return true;\n  }\n\n  addTape = (data) => {\n    const { tape } = this.state;\n    this.setState({\n      tape: [...tape, data]\n    });\n  }\n\n  onTagUpdate = (tags) => {\n    this.setState({ tags });\n  }\n\n  onCodeChange = () => {\n    const { code, test } = this.state;\n    const fullCode = `${code} ${test}`;\n    try {\n      const { code: compiledCode } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      this.setState({ compiledCode });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  onSubmit = async () => {\n    const {\n      tags,\n      code,\n      test,\n      id\n    } = this.state;\n    const { onSubmit } = this.props;\n    this.setState({ isLoading: true });\n    await onSubmit({\n      id,\n      tags,\n      code,\n      test\n    });\n    this.setState({ isLoading: false });\n  }\n\n  onDispatchQuestion = async () => {\n    const {\n      name, \n      type,\n      tags,\n      code,\n      test,\n      id\n    } = this.state;\n    const { onDispatchQuestion } = this.props;\n    console.log('onDispatchQuestion!', this.state)\n    this.setState({ isLoading: true });\n    await onDispatchQuestion({\n      name,\n      type,\n      content: code,\n      test\n    });\n    this.setState({ isLoading: false });\n  }\n\n  onChangeQuestion = async (index) => {\n    const { questionList } = this.state;\n    const { id, name, type } = questionList[index];\n    this.setState({ isLoading: true, index });\n    const result = await getQuestion({ id });\n    const { tags, content: code, test } = result.data.getQuestion;\n    this.setState({\n      name,\n      type,\n      tags,\n      code,\n      test,\n      isLoading: false,\n      id\n    });\n  }\n\n  render() {\n    const {\n      test,\n      code,\n      tape,\n      tags,\n      questionList,\n      isLoading,\n      index\n    } = this.state;\n    const { onChangeCategory, categoryIndex } = this.props;\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'tag', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Spin spinning={isLoading} size=\"large\">\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n            <GridItem key=\"code\">\n              <CodeWidget\n                handleCodeChange={(newCode) => {\n                  this.setState({ code: newCode }, this.onCodeChange);\n                }}\n                data={code}\n                mode=\"javascript\"\n                theme=\"monokai\"\n              />\n            </GridItem>\n            <GridItem key=\"test\">\n              <TestWidget\n                handleCodeChange={(newTest) => {\n                  this.setState({ test: newTest }, this.onCodeChange);\n                }}\n                data={test}\n                readOnly={false}\n              />\n            </GridItem>\n            <GridItem key=\"control\">\n              <ControlWidget\n                type=\"javascript\"\n                onChangeName={name => this.setState({ name })}\n                // onSubmit={this.onSubmit}\n                onDispatchQuestion={this.onDispatchQuestion}\n                onChangeCategory={onChangeCategory}\n                categoryIndex={categoryIndex}\n                questionIndex={index}\n                questionList={questionList}\n                onChangeQuestion={this.onChangeQuestion}\n              />\n            </GridItem>\n            <GridItem key=\"tape\">\n              <TapeWidget data={tape} />\n            </GridItem>\n            <GridItem key=\"tag\">\n              <TagWidget data={tags} onTagUpdate={this.onTagUpdate} />\n            </GridItem>\n          </Grid>\n        </Spin>\n      </div>\n    );\n  }\n}\n\nexport default JavaScriptPage;\n","import React, { Component } from 'react';\r\n\r\nimport { \r\n  updateQuestion,\r\n  dispatchQuestion\r\n} from 'app/utils/question';\r\n\r\nimport ReactPage from './ReactPage';\r\nimport JavaScriptPage from './JavaScriptPage';\r\n\r\n\r\nconst getPageComponent = (args) => {\r\n  switch (args.index) {\r\n    case 1: {\r\n      return <ReactPage {...args} />;\r\n    }\r\n    default: {\r\n      return <JavaScriptPage {...args} />;\r\n    }\r\n  }\r\n  return <ReactPage {...args} />;\r\n};\r\n\r\nclass Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { category: 0 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { state, history } = this.props;\r\n    // if (!state.login.isLogin) {\r\n    //   history.push('/login');\r\n    //   return;\r\n    // }\r\n  }\r\n\r\n  onChangeCategory = (index) => {\r\n    this.setState({ category: index });\r\n  }\r\n\r\n  onSubmit = async (data) => {\r\n    try {\r\n      await updateQuestion(data);\r\n    } catch (e) {\r\n      alert(e.message);\r\n    }\r\n  }\r\n\r\n  onDispatchQuestion = async (data) => {\r\n    try {\r\n      await dispatchQuestion(data);\r\n    } catch (e) {\r\n      alert(e.message);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { category } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        {\r\n          getPageComponent({\r\n            index: category,\r\n            onSubmit: this.onSubmit,\r\n            onDispatchQuestion: this.onDispatchQuestion,\r\n            onChangeCategory: this.onChangeCategory,\r\n            categoryIndex: category\r\n          })\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React, { Component } from 'react';\n\nconst NotFoundPage = () => (\n  <div>Not found</div>\n);\n\nexport default NotFoundPage;\n","import React, { Component } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Amplify from 'aws-amplify';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport AwsConfig from 'aws-exports';\n\nimport QuestionAddPage from 'app/pages/QuestionPage/AddPage';\nimport QuestionEditPage from 'app/pages/QuestionPage/EditPage';\nimport AdminQuestionDispatchPage from 'app/pages/QuestionPage/AdminQuestionDispatchPage/index_new';\nimport NotFoundPage from 'app/pages/NotFoundPage';\n\nAmplify.configure(AwsConfig);\n\n// Auth.signUp({\n//   username: 'Admin',\n//   password: 'Admin@123456',\n//   attributes: {\n//     email: 'test@innova.com'\n//   }\n// })\n//   .then(data => console.log(data))\n//   .catch(err => console.log(err));\n\n\n// class Admin extends Component {\n//   state = {\n//     isLoading: true\n//   }\n\n//   render() {\n//     const { isLoading, isLogin } = this.state;\n//     const { match } = this.props;\n//     return (\n//       <Switch>\n//         <Route path={`${match.path}/question`} component={QuestionPage} />\n//         <Route component={NotFoundPage} />\n//       </Switch>\n//     );\n//   }\n// }\n\n// const session = Amplify.Auth.currentSession()\n//   .then(s => {\n//     console.log(s.getAccessToken().getJwtToken());\n//   });\n\nconst Question = ({ match }) => {\n  return (\n    <Switch>\n      <Route path={`${match.path}/add`} component={QuestionAddPage} />\n      <Route path={`${match.path}/edit`} component={QuestionEditPage} />\n      <Route path={`${match.path}/dispatch`} component={AdminQuestionDispatchPage} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n\nconst Admin = ({ match }) => {\n  return (\n    <Switch>\n      <Route path={`${match.path}/question`} render={Question} />\n      <Route component={NotFoundPage} />\n    </Switch>\n  );\n};\n\nexport default (Admin);\n// export default withAuthenticator(Admin);\n","import React from 'react';\nimport { Input, Button } from 'antd';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { submitPassword } from 'app/actions/login';\nimport styles from './LoginPage.module.scss';\n\nclass LoginPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { password: '', error: '' };\n  }\n\n  componentDidUpdate() {\n    const { isLogin, history } = this.props;\n    if (isLogin) {\n      history.push('/');\n    }\n  }\n\n  onSubmit = (e) => {\n    const { password } = this.state;\n    const { actions } = this.props;\n    e.preventDefault();\n    actions.submitPassword(password);\n  }\n\n  render() {\n    const { error } = this.state;\n    return (\n      <div className={styles.login}>\n        <form onSubmit={this.onSubmit}>\n          <div style={{ display: 'flex' }}>\n            <Input\n              placeholder=\"input the password to login\"\n              onChange={e => this.setState({ password: e.target.value })}\n              style={{ width: 200, marginRight: 5 }}\n            />\n            <Button type=\"primary\" htmlType=\"submit\">Login</Button>\n          </div>\n        </form>\n        <div className={styles.error}>{ error }</div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      isLogin: state.login.isLogin\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        submitPassword: password => dispatch(submitPassword(password))\n      }\n    };\n  }\n)(LoginPage));\n","export function submitPassword(password) {\n  return {\n    type: 'LOGIN/LOGIN',\n    password\n  };\n}\n","const createWrappedConsole = (console, dispatch) => {\n  return Object.keys(console).reduce((cal, key) => {\n    const newCal = { ...cal };\n    newCal[key] = (...args) => {\n      dispatch({ type: 'CONSOLE/ADD', key, args: [...args] });\n    };\n    return newCal;\n  }, {});\n};\n\nexport default createWrappedConsole;\n","import { getQuestions, getCategories } from 'app/questions/index';\n\nconst categories = getCategories();\n\nconst getStateInformation = (state) => {\n  const categoryIndex = state.category.index;\n  const type = categories[categoryIndex].name;\n  const questionIndex = state[type].index;\n  const questions = getQuestions(type);\n  const question = questions[questionIndex];\n  let { index, compiledCode } = state[type];\n  let code = (state[type][index] && state[type][index].code) || questions[questionIndex].content;\n  const remoteQuestion = state[type].remoteQuestion;\n  if (remoteQuestion) {\n    code = (remoteQuestion && remoteQuestion.code) || code;\n  }\n  return {\n    type,\n    categoryIndex,\n    questionIndex,\n    questions,\n    question,\n    code,\n    compiledCode,\n    remoteQuestion\n  };\n};\n\nexport {\n  getStateInformation\n};\n","import React from 'react';\nimport styles from './ConsoleWidget.module.scss';\n\nconst isError = e => e && e.stack && e.message && typeof e.stack === 'string' && typeof e.message === 'string';\n\nconst Text = ({ text }) => <>{ `${text}`.trim() === '' ? <br /> : `${text}`.trim() }</>;\n\nconst ConsoleWidget = ({ data, className }) => (\n  <div className={`${styles['console-widget']} ${className || ''}`}>\n    Console:\n    {\n      data.map(({ args }) => (\n        <div className={styles.console} key={args}>\n          {\n            args.map((text, index) => (\n              <div className={styles.text} key={index}>\n                {\n                  typeof text === 'object' && !isError(text)\n                    ? JSON.stringify(text, null, 2)\n                    : <Text text={text} />\n                }\n              </div>\n            ))\n          }\n        </div>\n      ))\n    }\n  </div>\n);\n\nexport default ConsoleWidget;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\n\nimport { resetQuestion, changeQuestion } from 'app/actions/code';\nimport { changeCategory } from 'app/actions/category';\n\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\n\nimport { getStateInformation } from 'app/utils/stateHelper';\n\nimport { Button } from 'antd';\nimport styles from './ControlWidget.module.scss';\n\nconst ControlWidget = ({\n  categoryIndex,\n  questionIndex,\n  onReset,\n  onChangeCategory,\n  onChangeQuestion,\n  questionList\n}) => (\n  <div className={styles.control}>\n    {/* <CategorySelector\n      onChange={onChangeCategory}\n      index={categoryIndex}\n    />\n    <QuestionSelector\n      onChange={onChangeQuestion}\n      index={questionIndex}\n      list={questionList}\n    /> */}\n    <Button type=\"danger\" onClick={onReset}>Reset</Button>\n  </div>\n);\n\nexport default ControlWidget;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport 'brace';\nimport 'brace/mode/jsx';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport ConsoleWidget from 'app/components/Widgets/ConsoleWidget';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport ControlWidget from '../ControlWidget';\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\n\nimport { resetConsole } from 'app/actions/console';\n\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport { getQuestions } from 'app/questions/index';\n\nimport styles from './ReactPage.module.scss';\n\nconst questions = getQuestions('react');\n\nclass ReactPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n  }\n\n  componentDidMount() {\n    const { compiledCode, wrappedConsole, actions } = this.props;\n    actions.resetConsole();\n    debouncedRunCode({ code: compiledCode, wrappedConsole });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { compiledCode: previousCompiledCode } = this.props;\n    const { compiledCode, wrappedConsole, actions } = nextProps;\n    if (previousCompiledCode !== compiledCode) {\n      actions.resetConsole();\n      debouncedRunCode({ code: compiledCode, wrappedConsole });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      code,\n      questionIndex,\n      categoryIndex,\n      handleCodeChange,\n      console: _console,\n      onReset,\n      onChangeCategory,\n      onChangeQuestion,\n      remoteQuestion\n    } = this.props;\n    const { test } = remoteQuestion || questions[questionIndex];\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'answer', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'result', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'console', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n          <GridItem key=\"code\">\n            <CodeWidget\n              handleCodeChange={handleCodeChange}\n              data={code}\n              mode=\"jsx\"\n              theme=\"monokai\"\n            />\n          </GridItem>\n          <GridItem key=\"answer\">\n            <AnswerWidget />\n          </GridItem>\n          <GridItem key=\"control\">\n            <ControlWidget\n              type=\"react\"\n              onReset={() => onReset('react')}\n              onChangeCategory={onChangeCategory}\n              onChangeQuestion={index => onChangeQuestion({ type: 'react', index })}\n              questionList={questions}\n              categoryIndex={categoryIndex}\n              questionIndex={questionIndex}\n            />\n          </GridItem>\n          <GridItem key=\"result\">\n            <ResultWidget />\n          </GridItem>\n          <GridItem key=\"console\">\n            <ConsoleWidget data={_console} />\n          </GridItem>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  () => {\n    return {\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetConsole: () => dispatch(resetConsole())\n      }\n    };\n  }\n)(ReactPage));\n","export function resetConsole() {\n  return {\n    type: 'CONSOLE/RESET'\n  };\n}\n\nexport function addConsole(key, ...args) {\n  return {\n    type: 'CONSOLE/ADD',\n    key,\n    args: [...args]\n  };\n}","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport 'brace';\nimport 'brace/mode/javascript';\nimport 'brace/theme/textmate';\nimport 'brace/theme/monokai';\n\nimport Grid from 'app/components/Grid';\nimport GridItem from 'app/components/Grid/GridItem';\nimport ConsoleWidget from 'app/components/Widgets/ConsoleWidget';\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\nimport TestWidget from 'app/components/Widgets/TestWidget';\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\nimport ControlWidget from '../ControlWidget';\n\nimport { addTape, resetTape } from 'app/actions/tape';\nimport { resetConsole } from 'app/actions/console';\n\nimport { getQuestions } from 'app/questions/index';\n\nimport debouncedRunCode from 'app/utils/runCode';\n\nimport styles from './JavaScriptPage.module.scss';\n\nconst questions = getQuestions('javascript');\n\nclass JavaScriptPage extends Component {\n  constructor(props) {\n    super(props);\n    this.controlHeight = 70;\n  }\n\n  componentDidMount() {\n    const { compiledCode, wrappedConsole, actions } = this.props;\n    actions.resetConsole();\n    debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: actions.addTape });\n  }\n\n  shouldComponentUpdate(nextProps) {\n    const { compiledCode: previousCompiledCode } = this.props;\n    const { compiledCode, wrappedConsole, actions } = nextProps;\n    if (previousCompiledCode !== compiledCode) {\n      actions.resetConsole();\n      actions.resetTape();\n      debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: actions.addTape });\n    }\n    return true;\n  }\n\n  render() {\n    const {\n      code,\n      questionIndex,\n      categoryIndex,\n      handleCodeChange,\n      tape,\n      console: _console,\n      onReset,\n      onChangeCategory,\n      onChangeQuestion,\n      remoteQuestion\n    } = this.props;\n    const { test } = remoteQuestion || questions[questionIndex];\n    const layout = [\n      {\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\n      },\n      {\n        key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\n      },\n      {\n        key: 'tape', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n      {\n        key: 'console', x: 1, y: 2, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\n      },\n    ];\n    return (\n      <div className={styles.app}>\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\n          <GridItem key=\"code\">\n            <CodeWidget\n              handleCodeChange={handleCodeChange}\n              data={code}\n              mode=\"javascript\"\n              theme=\"monokai\"\n            />\n          </GridItem>\n          <GridItem key=\"test\">\n            <TestWidget data={test} />\n          </GridItem>\n          <GridItem key=\"control\">\n            <ControlWidget\n              onReset={() => onReset('javascript')}\n              onChangeCategory={onChangeCategory}\n              onChangeQuestion={index => onChangeQuestion({ type: 'javascript', index })}\n              questionList={questions}\n              categoryIndex={categoryIndex}\n              questionIndex={questionIndex}\n            />\n          </GridItem>\n          <GridItem key=\"tape\">\n            <TapeWidget data={tape} />\n          </GridItem>\n          <GridItem key=\"console\">\n            <ConsoleWidget data={_console} />\n          </GridItem>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    return {\n      tape: state.tape\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetTape: () => dispatch(resetTape()),\n        addTape: data => dispatch(addTape(data)),\n        resetConsole: () => dispatch(resetConsole())\n      }\n    };\n  }\n)(JavaScriptPage));\n","export function resetTape() {\n  return {\n    type: 'TAPE/RESET'\n  };\n}\n\nexport function addTape(data) {\n  return {\n    type: 'TAPE/ADD',\n    data\n  };\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { transform } from '@babel/standalone';\n\nimport { resetQuestion, changeQuestion, changeCode, remoteChangeQuestion } from 'app/actions/code';\nimport { changeCategory } from 'app/actions/category';\nimport { resetConsole } from 'app/actions/console';\n\nimport createWrappedConsole from 'app/utils/consoleFactory';\nimport { getStateInformation } from 'app/utils/stateHelper';\n\nimport ReactPage from './ReactPage';\nimport JavaScriptPage from './JavaScriptPage';\n\nimport Amplify, {\n  API,\n  graphqlOperation\n} from 'aws-amplify';\n\nimport awsExportConfig from '../../../aws-exports.js';\n\nimport * as subscriptions from '../../../graphql/subscriptions.js';\n\nAmplify.configure(awsExportConfig);\n\nconst getPageComponent = (args) => {\n  switch (args.index) {\n    case 1: {\n      return <ReactPage {...args} />;\n    }\n    default: {\n      return <JavaScriptPage {...args} />;\n    }\n  }\n};\n\nclass Page extends Component {\n  constructor(props) {\n    super(props);\n    const { actions } = this.props;\n    const { _dispatch: dispatch } = actions;\n    this.wrappedConsole = createWrappedConsole(console, dispatch);\n  }\n\n  componentDidMount() {\n    const { isLogin, history, code } = this.props;\n    // if (!isLogin) {\n    //   history.push('/login');\n    //   return;\n    // }\n    this.handleCodeChange(code);\n    this.subscribeOnCreateQuestionSnapshot();\n  }\n\n  componentWillUnmount() {\n    this.subscriptionDispatchQuestion.unsubscribe();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { categoryIndex: previousCategoryIndex } = prevProps;\n    const { categoryIndex, code } = this.props;\n    if (previousCategoryIndex !== categoryIndex) {\n      this.handleCodeChange(code);\n    }\n  }\n\n  handleCodeChange = (newCode) => {\n    const { actions, type, question } = this.props;\n    const fullCode = `${newCode} ${question.test}`;\n    try {\n      const { code } = transform(fullCode, {\n        presets: ['es2015', ['stage-2', { decoratorsBeforeExport: true }], 'react'],\n        plugins: ['proposal-object-rest-spread']\n      });\n      actions.changeCode({ compiledCode: code, rawCode: newCode, type });\n    } catch (e) {\n      actions.changeCode({ rawCode: newCode, type });\n      actions.resetConsole();\n      this.wrappedConsole.log(e);\n    }\n  }\n\n  onReset = (type) => {\n    const { actions } = this.props;\n    actions.resetQuestion(type);\n  }\n\n  onChangeCategory = (index) => {\n    const { actions } = this.props;\n    actions.changeCategory(index);\n  }\n  \n  onChangeQuestion = ({ index, type }) => {\n    const { actions } = this.props;\n    actions.changeQuestion({ index, type });\n  }\n  \n  remoteChangeQuestion({ type, name, code, test }) {\n    const { actions } = this.props;\n    actions.changeCategory(type == 'javascript' ? 0 : 1);\n    actions.remoteChangeQuestion({ type, name, code, test });\n  }\n\n  subscribeOnCreateQuestionSnapshot() {\n    this.subscriptionDispatchQuestion = API.graphql(\n      graphqlOperation(subscriptions.onCreateQuestionSnapshot)\n    ).subscribe({\n      next: (result) => {\n        if (result) {\n          console.log(\"#subscribeOnCreateQuestionSnapshot\", result);\n          const { type, name, content: code, test } = result.value.data.onCreateQuestionSnapshot\n          this.remoteChangeQuestion({ type, name, code, test })\n        }\n      }\n    });\n  };\n\n  render() {\n    const {\n      categoryIndex\n    } = this.props;\n    const {\n      handleCodeChange,\n      wrappedConsole,\n      onReset,\n      onChangeCategory,\n      onChangeQuestion,\n      onDispatchQuestion\n    } = this;\n    return (\n      <>\n        {\n          getPageComponent({\n            index: categoryIndex,\n            handleCodeChange,\n            wrappedConsole,\n            onReset,\n            onChangeCategory,\n            onChangeQuestion,\n            ...this.props\n          })\n        }\n      </>\n    );\n  }\n}\n\nexport default withRouter(connect(\n  (state) => {\n    const {\n      code,\n      questionIndex,\n      compiledCode,\n      categoryIndex,\n      type,\n      question,\n      remoteQuestion\n    } = getStateInformation(state);\n    return {\n      compiledCode,\n      questionIndex,\n      code,\n      console: state.console,\n      categoryIndex,\n      type,\n      question: remoteQuestion || question,\n      isLogin: state.login.isLogin,\n      remoteQuestion\n    };\n  },\n  (dispatch) => {\n    return {\n      actions: {\n        resetConsole: () => dispatch(resetConsole()),\n        changeCode: args => dispatch(changeCode({ ...args, type: (args.type || 'javascript').toUpperCase() })),\n        _dispatch: dispatch,\n        resetQuestion: type => dispatch(resetQuestion({ type: type.toUpperCase() })),\n        changeCategory: index => dispatch(changeCategory(index)),\n        changeQuestion: ({ index, type }) => dispatch(changeQuestion({ index, type })),\n        remoteChangeQuestion: ({ type, name, code, test }) => dispatch(remoteChangeQuestion({ type, name, code, test }))\n      }\n    };\n  }\n)(Page));\n","// eslint-disable\n// this is an auto generated file. This will be overwritten\n\nexport const onCreateRoom = `subscription OnCreateRoom {\n  onCreateRoom {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const onUpdateRoom = `subscription OnUpdateRoom {\n  onUpdateRoom {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const onDeleteRoom = `subscription OnDeleteRoom {\n  onDeleteRoom {\n    id\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n    subjectId\n    description\n    status\n    host {\n      id\n      name\n    }\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSource {\n      items {\n        id\n        type\n        name\n        content\n        test\n      }\n      nextToken\n    }\n    questionSourceStr\n    progress\n  }\n}\n`;\nexport const onCreateJeUser = `subscription OnCreateJeUser {\n  onCreateJEUser {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const onUpdateJeUser = `subscription OnUpdateJeUser {\n  onUpdateJEUser {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const onDeleteJeUser = `subscription OnDeleteJeUser {\n  onDeleteJEUser {\n    id\n    name\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n  }\n}\n`;\nexport const onCreateTeam = `subscription OnCreateTeam {\n  onCreateTeam {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const onUpdateTeam = `subscription OnUpdateTeam {\n  onUpdateTeam {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const onDeleteTeam = `subscription OnDeleteTeam {\n  onDeleteTeam {\n    id\n    name\n    description\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    questionSet {\n      items {\n        id\n        name\n        description\n        tags\n      }\n      nextToken\n    }\n  }\n}\n`;\nexport const onCreateTest = `subscription OnCreateTest {\n  onCreateTest {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const onUpdateTest = `subscription OnUpdateTest {\n  onUpdateTest {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const onDeleteTest = `subscription OnDeleteTest {\n  onDeleteTest {\n    id\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n    team {\n      id\n      name\n      description\n    }\n    subjectId\n    users {\n      items {\n        id\n        name\n      }\n      nextToken\n    }\n    description\n    timeBegin\n    timeEnd\n    records {\n      items {\n        id\n        subjectId\n        timeBegin\n        timeEnd\n        history\n      }\n      nextToken\n    }\n    status\n    tags\n  }\n}\n`;\nexport const onCreateRecord = `subscription OnCreateRecord {\n  onCreateRecord {\n    id\n    subjectId\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    result {\n      input\n      output\n      testCaseResults\n    }\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const onUpdateRecord = `subscription OnUpdateRecord {\n  onUpdateRecord {\n    id\n    subjectId\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    result {\n      input\n      output\n      testCaseResults\n    }\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const onDeleteRecord = `subscription OnDeleteRecord {\n  onDeleteRecord {\n    id\n    subjectId\n    interviewer {\n      id\n      name\n    }\n    timeBegin\n    timeEnd\n    history\n    result {\n      input\n      output\n      testCaseResults\n    }\n    question {\n      id\n      type\n      name\n      content\n      test\n    }\n    test {\n      id\n      subjectId\n      description\n      timeBegin\n      timeEnd\n      status\n      tags\n    }\n  }\n}\n`;\nexport const onCreateResult = `subscription OnCreateResult {\n  onCreateResult {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const onUpdateResult = `subscription OnUpdateResult {\n  onUpdateResult {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const onDeleteResult = `subscription OnDeleteResult {\n  onDeleteResult {\n    input\n    output\n    testCaseResults\n  }\n}\n`;\nexport const onCreateQuestionSnapshot = `subscription OnCreateQuestionSnapshot {\n  onCreateQuestionSnapshot {\n    id\n    type\n    name\n    content\n    test\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const onUpdateQuestionSnapshot = `subscription OnUpdateQuestionSnapshot {\n  onUpdateQuestionSnapshot {\n    id\n    type\n    name\n    content\n    test\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const onDeleteQuestionSnapshot = `subscription OnDeleteQuestionSnapshot {\n  onDeleteQuestionSnapshot {\n    id\n    type\n    name\n    content\n    test\n    room {\n      id\n      subjectId\n      description\n      status\n      questionSourceStr\n      progress\n    }\n  }\n}\n`;\nexport const onCreateQuestionSet = `subscription OnCreateQuestionSet {\n  onCreateQuestionSet {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const onUpdateQuestionSet = `subscription OnUpdateQuestionSet {\n  onUpdateQuestionSet {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const onDeleteQuestionSet = `subscription OnDeleteQuestionSet {\n  onDeleteQuestionSet {\n    id\n    team {\n      id\n      name\n      description\n    }\n    questions {\n      items {\n        id\n        type\n        name\n        content\n        test\n        tags\n      }\n      nextToken\n    }\n    name\n    description\n    tags\n  }\n}\n`;\nexport const onCreateQuestion = `subscription OnCreateQuestion {\n  onCreateQuestion {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\nexport const onUpdateQuestion = `subscription OnUpdateQuestion {\n  onUpdateQuestion {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\nexport const onDeleteQuestion = `subscription OnDeleteQuestion {\n  onDeleteQuestion {\n    id\n    type\n    questionSet {\n      id\n      name\n      description\n      tags\n    }\n    name\n    content\n    test\n    tags\n  }\n}\n`;\nexport const onCreateAuthedModelForOwner = `subscription OnCreateAuthedModelForOwner {\n  onCreateAuthedModelForOwner {\n    id\n    content\n  }\n}\n`;\nexport const onUpdateAuthedModelForOwner = `subscription OnUpdateAuthedModelForOwner {\n  onUpdateAuthedModelForOwner {\n    id\n    content\n  }\n}\n`;\nexport const onDeleteAuthedModelForOwner = `subscription OnDeleteAuthedModelForOwner {\n  onDeleteAuthedModelForOwner {\n    id\n    content\n  }\n}\n`;\n","export function changeCode({ compiledCode, rawCode, type }) {\n  return {\n    type: `${type}/CODE/CHANGE`,\n    compiledCode,\n    rawCode\n  };\n}\n\nexport function changeQuestion({ index, type }) {\n  return {\n    type: `${type}/QUESTION/CHANGE`,\n    index\n  };\n}\n\nexport function resetQuestion({ type }) {\n  return {\n    type: `${type}/QUESTION/RESET`\n  };\n}\n\nexport function remoteChangeQuestion({ type, name, code, test }) {\n  return {\n    type: `${type}/QUESTION/REMOTE/CHANGE`,\n    name,\n    code,\n    test\n  };\n}","export function changeCategory(index) {\n  return {\n    type: 'CATEGORY/CHANGE',\n    index\n  };\n}\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport LoginPage from 'app/pages/LoginPage';\nimport ExamPage from 'app/pages/ExamPage';\nimport NotFoundPage from 'app/pages/NotFoundPage';\n\nconst Guest = ({ match }) => (\n  <Switch>\n    <Route path=\"/login\" component={LoginPage} />\n    <Route path=\"/\" component={ExamPage} />\n    <Route component={NotFoundPage} />\n  </Switch>\n);\n\nexport default Guest;\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport Admin from 'app/routes/Admin';\nimport Guest from 'app/routes/Guest';\n\nconst { PUBLIC_URL } = process.env;\n\nconst App = () => (\n  <Router basename={PUBLIC_URL}>\n    <div>\n      <Switch>\n        <Route path=\"/admin\" component={Admin} />\n        <Route path=\"/\" component={Guest} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport 'antd/dist/antd.css';\n\nimport { initErrorLogging } from 'app/utils/sentry';\n\nimport reducer from 'app/reducers';\nimport App from './App';\nimport './index.css';\n\ninitErrorLogging();\n\nconst store = createStore(\n  reducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}