{"version":3,"sources":["app/components/Grid/Grid.module.scss","app/components/Border/Border.module.scss","app/components/Widgets/ConsoleWidget/ConsoleWidget.module.scss","app/pages/QuestionPage/DispatchPage/ControlWidget/ControlWidget.module.scss","app/pages/ExamPage/ControlWidget/ControlWidget.module.scss","app/components/Widgets/CodeWidget/CodeWidget.module.scss","app/components/Widgets/ResultWidget/ResultWidget.module.scss","app/components/Widgets/AnswerWidget/AnswerWidget.module.scss","app/pages/QuestionPage/TagWidget/TagWidget.module.scss","app/pages/QuestionPage/DispatchPage/ReactPage/ReactPage.module.scss","app/components/Widgets/TestWidget/TestWidget.module.scss","app/pages/QuestionPage/DispatchPage/JavaScriptPage/JavaScriptPage.module.scss","app/pages/QuestionPage/AddAndEditPage/ReactPage/ReactPage.module.scss","app/pages/QuestionPage/AddAndEditPage/JavaScriptPage/JavaScriptPage.module.scss","app/pages/QuestionPage/AddAndEditPage/ControlWidget/ControlWidget.module.scss","app/pages/ExamPage/ReactPage/ReactPage.module.scss","app/pages/ExamPage/JavaScriptPage/JavaScriptPage.module.scss","app/components/Widgets/TapeWidget/TapeWidget.module.scss","app/utils/sentry.js","app/reducers/javascript.js","app/reducers/react.js","app/reducers/login.js","app/utils/authLogin.js","app/reducers/category.js","app/reducers/tape.js","app/reducers/console.js","app/reducers/index.js","aws-exports.js","app/utils/question.js","graphql/mutations.js","graphql/subscriptions.js","app/utils/spy.js","app/utils/tape.js","app/utils/runCode.js","app/utils/record.js","app/components/Border/index.js","app/components/Grid/index.js","app/components/Grid/GridItem.js","app/components/Widgets/CodeWidget/index.js","app/components/Widgets/ResultWidget/index.js","app/components/Widgets/AnswerWidget/index.js","app/pages/QuestionPage/TagWidget/index.js","app/pages/QuestionPage/DispatchPage/ReactPage/index.js","app/components/Widgets/TestWidget/index.js","app/components/Widgets/TapeWidget/index.js","app/pages/QuestionPage/DispatchPage/JavaScriptPage/index.js","app/questions/index.js","app/questions/javascript.js","app/questions/react.js","app/components/Selectors/CategorySelector/index.js","app/components/Selectors/QuestionSelector/index.js","app/pages/QuestionPage/DispatchPage/ControlWidget/index.js","app/components/Modal/index.js","app/pages/QuestionPage/DispatchPage/index.js","app/pages/QuestionPage/AddAndEditPage/ReactPage/index.js","app/pages/QuestionPage/AddAndEditPage/JavaScriptPage/index.js","app/pages/QuestionPage/AddAndEditPage/ControlWidget/index.js","app/pages/QuestionPage/AddAndEditPage/index.js","app/pages/AdminPage/index.js","app/pages/NotFoundPage/index.js","app/routes/Admin.js","app/utils/stateHelper.js","app/pages/ExamPage/ControlWidget/index.js","app/utils/consoleFactory.js","app/components/Widgets/ConsoleWidget/index.js","app/pages/ExamPage/ReactPage/index.js","app/pages/ExamPage/JavaScriptPage/index.js","app/pages/ExamPage/index.js","app/pages/MainPage/index.js","index.js"],"names":["module","exports","grid","item","border","vertical","horizontal","console-widget","console","control","interviewee","code","ace_layer","result","answer","tag-widget","app","test-widget","tape","test","description","assert","name","actual","not-equal","expected","ok","fail","diff","Sentry","dsn","state","arguments","length","undefined","index","action","type","toUpperCase","Object","objectSpread","defineProperty","compiledCode","rawCode","remoteQuestion","login","s","isLogin","password","concat","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","slice","category","toConsumableArray","data","Console","key","args","reducer","combineReducers","javascript","react","_console","awsmobile","aws_project_region","aws_appsync_graphqlEndpoint","aws_appsync_region","aws_appsync_authenticationType","aws_cognito_identity_pool_id","aws_cognito_region","aws_user_pools_id","aws_user_pools_web_client_id","aws_content_delivery_bucket","aws_content_delivery_bucket_region","aws_content_delivery_url","Amplify","configure","awsExportConfig","listQuestions","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","query","wrap","_context","prev","next","API","graphql","graphqlOperation","sent","abrupt","stop","this","_x","apply","createQuestion","_ref2","_callee2","tags","content","params","_context2","input","_x2","getQuestion","_ref3","_callee3","id","_ref4","_context3","_x3","updateQuestion","_ref5","_callee4","_context4","_x4","deleteQuestion","_ref6","_callee5","_context5","_x5","dispatchQuestion","_ref7","_callee6","question","_ref8","_context6","questionSnapshotRoomId","createQuestionSnapshot","_x6","subscribeOnCreateQuestionSnapshot","callback","subscribe","_ref9","value","onCreateQuestionSnapshot","spy","obj","methodName","origFn","callHistory","calledWith","secret","Math","random","toFixed","_len","Array","_key","push","join","_len2","_key2","callCount","restore","tryCatchPatch","t","testBlock","comment","e","getPatchedTape","onUpdate","patches","harness","createHarness","createStream","objectMode","on","subtest","should","_args$slice","cb","slicedToArray","Error","wrapCode","replace","loopHead","runCode","_ref$wrappedConsole","wrappedConsole","onTapeUpdate","script","context","clock","sinon","useFakeTimers","sandbox","setTimeout","window","describe","React","ReactDOM","root","document","getElementById","renderToString","vm","Script","createContext","runInContext","log","createRecord","subjectId","questionContent","syncCode","timeBegin","parseInt","getTime","updateRecord","newCode","timeEnd","subscribeOnCreateRecord","onCreateRecord","error","subscribeOnUpdateRecord","onUpdateRecord","listRecords","items","Border","props","_this","classCallCheck","_this$props","possibleConstructorReturn","getPrototypeOf","call","allowWidth","allowHeight","disabled","borderSize","ref","createRef","resize","bind","assertThisInitialized","startResize","endResize","style","_this$props2","height","width","maxHeight","maxWidth","minWidth","minHeight","newHeight","clientY","current","offsetTop","newWidth","clientX","offsetLeft","removeEventListener","dispatchEvent","Event","target","contains","addEventListener","_this$props3","children","className","finalClassName","styles","paddingRight","paddingBottom","react_default","createElement","onMouseDown","Component","Grid","onResize","updateFullState","_this$ref$current","totalWidth","clientWidth","totalHeight","clientHeight","newData","map","column","indexOfColumn","indexOfItem","sumOfWidth","c","reduce","cal","val","sumOfHeight","setState","updateGridState","_this$ref$current2","layout","columns","newCal","x","sort","b","y","autoResize","_this2","max","min","finalWidth","components_Border","w","JSON","stringify","itemInData","itemInColumns","isDisabled","static","h","find","GridItem","CodeWidget","handleCodeChange","mode","theme","react_ace_lib_default","showPrintMargin","onChange","tabSize","debounceChangePeriod","ResultWidget","AnswerWidget","TagWidget","inputVisible","inputValue","handleClose","removedTag","onTagUpdate","filter","tag","showInput","focus","handleInputChange","handleInputConfirm","newTags","indexOf","saveInputRef","_this$state","isLongTag","tagElem","es_tag","closable","afterClose","tooltip","title","size","onBlur","onPressEnter","onClick","background","borderStyle","icon","ReactPage","controlHeight","addTape","debouncedRunCode","nextProps","previousCompiledCode","isLoading","innerWidth","innerHeight","spin","spinning","Grid_Grid","Grid_GridItem","Widgets_CodeWidget","Widgets_AnswerWidget","Widgets_ResultWidget","QuestionPage_TagWidget","TestWidget","_ref$readOnly","readOnly","_ref$handleCodeChange","TestRow","row","AssertRow","Fragment","EndRow","DescriptionRow","getRow","TapeWidget_TestRow","assign","TapeWidget_AssertRow","TapeWidget_EndRow","TapeWidget_DescriptionRow","TapeWidget","JavaScriptPage","resetTape","Widgets_TestWidget","Widgets_TapeWidget","Questions","getCategories","keys","categories","Option","Select","CategorySelector","categoryIndex","es_select","defaultValue","q","i","QuestionSelector","questionIndex","list","QuestionSelector_Option","ControlWidget","onDispatchQuestion","onChangeCategory","onChangeQuestion","questionList","setIntervieweeModal","intervieweeName","Selectors_CategorySelector","Selectors_QuestionSelector","es_button","UserModal","handleCancel","userName","submitName","mustEnterName","message","setIntervieweeName","onChangeSelect","recordId","recordList","recordSyncCode","changeTime","time","date","toDateString","toTimeString","searchName","getRecordListBySubjectId","joinAction","joinExam","visible","searchable","modal","maskClosable","onCancel","footer","placeholder","trim","opacity","Modal_Option","Page","questionName","visibleIntervieweeModal","success","_questionList$index","fullCode","transform","presets","decoratorsBeforeExport","plugins","warning","t0","newTape","_this$state2","record","_this$state3","DispatchPage_ControlWidget","DispatchPage_ReactPage","DispatchPage_JavaScriptPage","getPageComponent","Modal_UserModal","handleTestChange","onChangeName","onSubmit","onDelete","onSync","marginRight","float","shape","t1","getQuestionList","t2","onCreateQuestion","onUpdateQuestion","_callee7","_context7","compileCode","newTest","_callee8","_context8","AddAndEditPage_ControlWidget","AddAndEditPage_ReactPage","AddAndEditPage_JavaScriptPage","TabPane","Tabs","AdminPage","_React$Component","_getPrototypeOf2","activeKey","location","hash","onTabClick","inherits","createClass","tabs","tab","DispatchPage","AddAndEditPage","NotFoundPage","AwsConfig","Auth","signIn","then","user","currentSession","getAccessToken","getJwtToken","catch","err","withAuthenticator","match","Switch","Route","exact","path","component","onReset","createWrappedConsole","addConsole","Text","text","ConsoleWidget","stack","ConsoleWidget_Text","resetConsole","Widgets_ConsoleWidget","withRouter","updateRecordAction","subscribeOnDispatchQuestion","ExamPage_ControlWidget","ExamPage_ReactPage","ExamPage_JavaScriptPage","List","Avatar","Spin","fakeDataUrl","MainPage","loading","hasMore","fetchData","reqwest","url","method","contentType","res","handleInfiniteOnLoad","results","react_infinite_scroller_default","initialLoad","pageStart","loadMore","useWindow","dataSource","renderItem","Item","Meta","avatar","src","href","last","email","onerror","createStore","__REDUX_DEVTOOLS_EXTENSION__","render","pages_MainPage"],"mappings":"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","file":"static/js/main.c0c492a5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"Grid_grid__340jl\",\"item\":\"Grid_item__BUiiH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"border\":\"Border_border__3fExB\",\"vertical\":\"Border_vertical__wORPM\",\"horizontal\":\"Border_horizontal__1vOZo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"console-widget\":\"ConsoleWidget_console-widget__2dZGf\",\"console\":\"ConsoleWidget_console__1_bTE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__25TgQ\",\"interviewee\":\"ControlWidget_interviewee__3rjEA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__17w86\",\"interviewee\":\"ControlWidget_interviewee__2tuS-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"code\":\"CodeWidget_code__2b6JA\",\"ace_layer\":\"CodeWidget_ace_layer__3AatX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"ResultWidget_result__39hdN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"answer\":\"AnswerWidget_answer__oFey_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tag-widget\":\"TagWidget_tag-widget__3FINe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__1eNK7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test-widget\":\"TestWidget_test-widget__1QJ6m\",\"ace_layer\":\"TestWidget_ace_layer__13Zbz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__3CZJ6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__y5RjV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__1b6N0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"control\":\"ControlWidget_control__2TKYJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"ReactPage_app__1EocS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"JavaScriptPage_app__2JhQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tape\":\"TapeWidget_tape__24AiS\",\"test\":\"TapeWidget_test__1npbo\",\"description\":\"TapeWidget_description__3YyWc\",\"assert\":\"TapeWidget_assert__29Z3M\",\"name\":\"TapeWidget_name__3kuWY\",\"actual\":\"TapeWidget_actual__3ijVQ\",\"not-equal\":\"TapeWidget_not-equal__2WOE4\",\"expected\":\"TapeWidget_expected__hJqha\",\"ok\":\"TapeWidget_ok__3RVLj\",\"fail\":\"TapeWidget_fail__22j7e\",\"diff\":\"TapeWidget_diff__27cQp\"};","import * as Sentry from '@sentry/browser';\r\n\r\nSentry.init({\r\n  dsn: 'https://466d7a4e8d174006b5449330cc18e4cc@sentry.io/1323316'\r\n});\r\n\r\nconst initErrorLogging = () => {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    window.onerror = e => {\r\n      Sentry.captureException(e);\r\n    };\r\n  }\r\n};\r\n\r\nexport { initErrorLogging };\r\n","const code = (state = { index: 0 }, action) => {\r\n  switch (action.type.toUpperCase()) {\r\n    case 'JAVASCRIPT/CODE/RESET':\r\n      return state;\r\n    case 'JAVASCRIPT/CODE/CHANGE':\r\n      return {\r\n        ...state,\r\n        compiledCode: action.compiledCode || state.compiledCode,\r\n        [state.index]: {\r\n          code: action.rawCode\r\n        }\r\n      };\r\n    case 'JAVASCRIPT/QUESTION/RESET':\r\n      return {\r\n        ...state,\r\n        [state.index]: {\r\n          code: ''\r\n        }\r\n      };\r\n    case 'JAVASCRIPT/QUESTION/CHANGE':\r\n      return {\r\n        ...state,\r\n        index: action.index,\r\n        compiledCode: ''\r\n      };\r\n    case 'JAVASCRIPT/QUESTION/REMOTE/CHANGE':\r\n      return {\r\n        ...state,\r\n        index: 0, //remote don't use index\r\n        compiledCode: '',\r\n        remoteQuestion: {\r\n            name: action.name,\r\n            code: action.code,\r\n            test: action.test\r\n        }\r\n      };     \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default code;\r\n","const code = (state = { index: 0 }, action) => {\r\n  switch (action.type.toUpperCase()) {\r\n    case 'REACT/CODE/RESET':\r\n      return state;\r\n    case 'REACT/CODE/CHANGE':\r\n      return {\r\n        ...state,\r\n        compiledCode: action.compiledCode || state.compiledCode,\r\n        [state.index]: {\r\n          code: action.rawCode\r\n        }\r\n      };\r\n    case 'REACT/QUESTION/RESET':\r\n      return {\r\n        ...state,\r\n        compiledCode: '',\r\n        [state.index]: {\r\n          code: ''\r\n        }\r\n      };\r\n    case 'REACT/QUESTION/CHANGE':\r\n      return {\r\n        ...state,\r\n        index: action.index,\r\n        compiledCode: ''\r\n      };\r\n    case 'REACT/QUESTION/REMOTE/CHANGE':\r\n      return {\r\n        ...state,\r\n        index: 0, //remote don't use index\r\n        compiledCode: '',\r\n        remoteQuestion: {\r\n          name: action.name,\r\n          code: action.code,\r\n          test: action.test\r\n        }\r\n      };       \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default code;\r\n","import { authLogin } from '../utils/authLogin';\r\n\r\nconst login = (state = { isLogin: false }, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN/LOGIN': {\r\n      return { isLogin: authLogin(action.password) };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default login;\r\n","const authLogin = s => `${(new Date().getUTCFullYear() + 1) * (new Date().getUTCMonth() + 1) * (new Date().getUTCDate() + 1) * (new Date().getUTCHours() + 1)}`.slice(0, 4) === s;\r\n\r\nexport {\r\n  authLogin\r\n}","const category = (state = { index: 0 }, action) => {\r\n  switch (action.type) {\r\n    case 'CATEGORY/RESET':\r\n      return { index: 0 };\r\n    case 'CATEGORY/CHANGE':\r\n      return {\r\n        ...state,\r\n        index: action.index\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default category;\r\n","const tape = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'TAPE/RESET': {\r\n      return [];\r\n    }\r\n    case 'TAPE/ADD': {\r\n      return [...state, action.data];\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default tape;\r\n","const Console = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'CONSOLE/RESET':\r\n      return [];\r\n    case 'CONSOLE/ADD':\r\n      return [\r\n        ...state,\r\n        {\r\n          key: action.key,\r\n          args: action.args\r\n        }\r\n      ];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Console;\r\n","import { combineReducers } from 'redux';\r\nimport javascript from './javascript';\r\nimport react from './react';\r\nimport login from './login';\r\nimport category from './category';\r\nimport tape from './tape';\r\nimport _console from './console';\r\n\r\nconst reducer = combineReducers({\r\n  javascript,\r\n  react,\r\n  login,\r\n  category,\r\n  tape,\r\n  console: _console\r\n});\r\n\r\nexport default reducer;\r\n","// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\r\n\r\nconst awsmobile = {\r\n    \"aws_project_region\": \"us-east-1\",\r\n    // \"aws_appsync_graphqlEndpoint\": \"https://7hiay4be35bi5b2jujxw4lkfmu.appsync-api.us-east-1.amazonaws.com/graphql\",\r\n    \"aws_appsync_graphqlEndpoint\": \"https://l2ef6zhywnel3att32o53ns2ve.appsync-api.us-east-1.amazonaws.com/graphql\",    \r\n    \"aws_appsync_region\": \"us-east-1\",\r\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\r\n    // \"aws_cognito_identity_pool_id\": \"us-east-1:ac3970c1-998e-44f5-b8e7-915b61c672dd\",\r\n    \"aws_cognito_identity_pool_id\": \"us-east-1:08150bca-b94b-4b22-b34b-2b3cc4b4f2c8\",\r\n    \"aws_cognito_region\": \"us-east-1\",\r\n    // \"aws_user_pools_id\": \"us-east-1_iZaYY7v3Z\",\r\n    \"aws_user_pools_id\": \"us-east-1_M8wfpyIKJ\",\r\n    // \"aws_user_pools_web_client_id\": \"5doa5r4eeigmbvjmvo6475496a\",\r\n    \"aws_user_pools_web_client_id\": \"nkjhni8fo530fjmdkgseadri5\",\r\n    \"aws_content_delivery_bucket\": \"innovap3-js-exam-dev\",\r\n    \"aws_content_delivery_bucket_region\": \"us-east-1\",\r\n    \"aws_content_delivery_url\": \"http://innovap3-js-exam-dev.s3-website-us-east-1.amazonaws.com\"\r\n};\r\n\r\n\r\nexport default awsmobile;","import Amplify, { API, graphqlOperation } from 'aws-amplify';\r\n\r\nimport awsExportConfig from 'aws-exports';\r\nimport * as mutations from '../../graphql/mutations.js';\r\n\r\nimport * as subscriptions from '../../graphql/subscriptions';\r\n\r\nAmplify.configure(awsExportConfig);\r\n\r\nconst listQuestions = async type => {\r\n  const query = `\r\n    query {\r\n      listQuestions (\r\n        filter: {\r\n          type:{\r\n            eq: \"${type}\"\r\n          }\r\n        }\r\n        limit: 1000\r\n      ) {\r\n        items{\r\n          id,\r\n          name,\r\n          type\r\n        }\r\n      }\r\n    }`;\r\n  const result = await API.graphql(graphqlOperation(query));\r\n  return result.data.listQuestions;\r\n};\r\n\r\nconst createQuestion = async data => {\r\n  const { tags, name, content, test, type } = data;\r\n  const params = {\r\n    input: {\r\n      name,\r\n      content,\r\n      test,\r\n      tags,\r\n      type\r\n    }\r\n  };\r\n  const query = `mutation CreateQuestion($input: CreateQuestionInput!) {\r\n    createQuestion(input: $input) {\r\n      id\r\n      name\r\n      content\r\n      test\r\n      type\r\n      tags\r\n    }\r\n  }`;\r\n  const result = await API.graphql(graphqlOperation(query, params));\r\n  return result;\r\n};\r\n\r\nconst getQuestion = async id => {\r\n  const query = `query {\r\n    getQuestion(id: \"${id}\") {\r\n      content,\r\n      test,\r\n      tags\r\n    }\r\n  }`;\r\n  const { data } = await API.graphql(graphqlOperation(query));\r\n  return data.getQuestion;\r\n};\r\n\r\nconst updateQuestion = async data => {\r\n  const { id, content, test, tags } = data;\r\n  const params = {\r\n    input: {\r\n      id,\r\n      content,\r\n      test,\r\n      tags\r\n    }\r\n  };\r\n  const query = `mutation UpdateQuestion($input: UpdateQuestionInput!) {\r\n    updateQuestion(input: $input) {\r\n      id\r\n      content\r\n      test\r\n      tags\r\n    }\r\n  }`;\r\n  const result = await API.graphql(graphqlOperation(query, params));\r\n  return result;\r\n};\r\n\r\nconst deleteQuestion = async params => {\r\n  const result = await API.graphql(graphqlOperation(mutations.deleteQuestion, params));\r\n  return result;\r\n};\r\n\r\nconst dispatchQuestion = async question => {\r\n  const params = {\r\n    input: {\r\n      type: question.type,\r\n      name: question.name,\r\n      content: question.content,\r\n      test: question.test,\r\n      questionSnapshotRoomId: 'demoRoom1'\r\n    }\r\n  };\r\n  const { data } = await API.graphql(\r\n    graphqlOperation(mutations.createQuestionSnapshot, params)\r\n  );\r\n  return data.createQuestionSnapshot;\r\n};\r\n\r\nconst subscribeOnCreateQuestionSnapshot = callback => {\r\n  API.graphql(\r\n    graphqlOperation(subscriptions.onCreateQuestionSnapshot)\r\n  ).subscribe({\r\n    next: ({ value }) => {\r\n      callback(value.data.onCreateQuestionSnapshot);\r\n    }\r\n  });\r\n};\r\n\r\nexport {\r\n  listQuestions,\r\n  createQuestion,\r\n  getQuestion,\r\n  updateQuestion,\r\n  deleteQuestion,\r\n  dispatchQuestion,\r\n  subscribeOnCreateQuestionSnapshot\r\n};\r\n","// eslint-disable\r\n// this is an auto generated file. This will be overwritten\r\n\r\nexport const createRoom = `mutation CreateRoom($input: CreateRoomInput!) {\r\n  createRoom(input: $input) {\r\n    id\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n    subjectId\r\n    description\r\n    status\r\n    host {\r\n      id\r\n      name\r\n    }\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSource {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n      }\r\n      nextToken\r\n    }\r\n    questionSourceStr\r\n    progress\r\n  }\r\n}\r\n`;\r\nexport const updateRoom = `mutation UpdateRoom($input: UpdateRoomInput!) {\r\n  updateRoom(input: $input) {\r\n    id\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n    subjectId\r\n    description\r\n    status\r\n    host {\r\n      id\r\n      name\r\n    }\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSource {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n      }\r\n      nextToken\r\n    }\r\n    questionSourceStr\r\n    progress\r\n  }\r\n}\r\n`;\r\nexport const deleteRoom = `mutation DeleteRoom($input: DeleteRoomInput!) {\r\n  deleteRoom(input: $input) {\r\n    id\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n    subjectId\r\n    description\r\n    status\r\n    host {\r\n      id\r\n      name\r\n    }\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSource {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n      }\r\n      nextToken\r\n    }\r\n    questionSourceStr\r\n    progress\r\n  }\r\n}\r\n`;\r\nexport const createJeUser = `mutation CreateJeUser($input: CreateJEUserInput!) {\r\n  createJEUser(input: $input) {\r\n    id\r\n    name\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const updateJeUser = `mutation UpdateJeUser($input: UpdateJEUserInput!) {\r\n  updateJEUser(input: $input) {\r\n    id\r\n    name\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const deleteJeUser = `mutation DeleteJeUser($input: DeleteJEUserInput!) {\r\n  deleteJEUser(input: $input) {\r\n    id\r\n    name\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const createTeam = `mutation CreateTeam($input: CreateTeamInput!) {\r\n  createTeam(input: $input) {\r\n    id\r\n    name\r\n    description\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSet {\r\n      items {\r\n        id\r\n        name\r\n        description\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const updateTeam = `mutation UpdateTeam($input: UpdateTeamInput!) {\r\n  updateTeam(input: $input) {\r\n    id\r\n    name\r\n    description\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSet {\r\n      items {\r\n        id\r\n        name\r\n        description\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const deleteTeam = `mutation DeleteTeam($input: DeleteTeamInput!) {\r\n  deleteTeam(input: $input) {\r\n    id\r\n    name\r\n    description\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSet {\r\n      items {\r\n        id\r\n        name\r\n        description\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const createTest = `mutation CreateTest($input: CreateTestInput!) {\r\n  createTest(input: $input) {\r\n    id\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    subjectId\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    description\r\n    timeBegin\r\n    timeEnd\r\n    records {\r\n      items {\r\n        id\r\n        subjectId\r\n        syncCode\r\n        timeBegin\r\n        timeEnd\r\n        history\r\n      }\r\n      nextToken\r\n    }\r\n    status\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const updateTest = `mutation UpdateTest($input: UpdateTestInput!) {\r\n  updateTest(input: $input) {\r\n    id\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    subjectId\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    description\r\n    timeBegin\r\n    timeEnd\r\n    records {\r\n      items {\r\n        id\r\n        subjectId\r\n        syncCode\r\n        timeBegin\r\n        timeEnd\r\n        history\r\n      }\r\n      nextToken\r\n    }\r\n    status\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const deleteTest = `mutation DeleteTest($input: DeleteTestInput!) {\r\n  deleteTest(input: $input) {\r\n    id\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    subjectId\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    description\r\n    timeBegin\r\n    timeEnd\r\n    records {\r\n      items {\r\n        id\r\n        subjectId\r\n        syncCode\r\n        timeBegin\r\n        timeEnd\r\n        history\r\n      }\r\n      nextToken\r\n    }\r\n    status\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const createRecord = `mutation CreateRecord($input: CreateRecordInput!) {\r\n  createRecord(input: $input) {\r\n    id\r\n    subjectId\r\n    syncCode\r\n    interviewer {\r\n      id\r\n      name\r\n    }\r\n    timeBegin\r\n    timeEnd\r\n    history\r\n    result {\r\n      id\r\n      input\r\n      output\r\n      testCaseResults\r\n    }\r\n    question {\r\n      id\r\n      type\r\n      name\r\n      content\r\n      test\r\n    }\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const updateRecord = `mutation UpdateRecord($input: UpdateRecordInput!) {\r\n  updateRecord(input: $input) {\r\n    id\r\n    subjectId\r\n    syncCode\r\n    interviewer {\r\n      id\r\n      name\r\n    }\r\n    timeBegin\r\n    timeEnd\r\n    history\r\n    result {\r\n      id\r\n      input\r\n      output\r\n      testCaseResults\r\n    }\r\n    question {\r\n      id\r\n      type\r\n      name\r\n      content\r\n      test\r\n    }\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const deleteRecord = `mutation DeleteRecord($input: DeleteRecordInput!) {\r\n  deleteRecord(input: $input) {\r\n    id\r\n    subjectId\r\n    syncCode\r\n    interviewer {\r\n      id\r\n      name\r\n    }\r\n    timeBegin\r\n    timeEnd\r\n    history\r\n    result {\r\n      id\r\n      input\r\n      output\r\n      testCaseResults\r\n    }\r\n    question {\r\n      id\r\n      type\r\n      name\r\n      content\r\n      test\r\n    }\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const createResult = `mutation CreateResult($input: CreateResultInput!) {\r\n  createResult(input: $input) {\r\n    id\r\n    input\r\n    output\r\n    testCaseResults\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const updateResult = `mutation UpdateResult($input: UpdateResultInput!) {\r\n  updateResult(input: $input) {\r\n    id\r\n    input\r\n    output\r\n    testCaseResults\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const deleteResult = `mutation DeleteResult($input: DeleteResultInput!) {\r\n  deleteResult(input: $input) {\r\n    id\r\n    input\r\n    output\r\n    testCaseResults\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const createQuestionSnapshot = `mutation CreateQuestionSnapshot($input: CreateQuestionSnapshotInput!) {\r\n  createQuestionSnapshot(input: $input) {\r\n    id\r\n    type\r\n    name\r\n    content\r\n    test\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const updateQuestionSnapshot = `mutation UpdateQuestionSnapshot($input: UpdateQuestionSnapshotInput!) {\r\n  updateQuestionSnapshot(input: $input) {\r\n    id\r\n    type\r\n    name\r\n    content\r\n    test\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const deleteQuestionSnapshot = `mutation DeleteQuestionSnapshot($input: DeleteQuestionSnapshotInput!) {\r\n  deleteQuestionSnapshot(input: $input) {\r\n    id\r\n    type\r\n    name\r\n    content\r\n    test\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const createQuestionSet = `mutation CreateQuestionSet($input: CreateQuestionSetInput!) {\r\n  createQuestionSet(input: $input) {\r\n    id\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    questions {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n    name\r\n    description\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const updateQuestionSet = `mutation UpdateQuestionSet($input: UpdateQuestionSetInput!) {\r\n  updateQuestionSet(input: $input) {\r\n    id\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    questions {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n    name\r\n    description\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const deleteQuestionSet = `mutation DeleteQuestionSet($input: DeleteQuestionSetInput!) {\r\n  deleteQuestionSet(input: $input) {\r\n    id\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    questions {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n    name\r\n    description\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const createQuestion = `mutation CreateQuestion($input: CreateQuestionInput!) {\r\n  createQuestion(input: $input) {\r\n    id\r\n    type\r\n    questionSet {\r\n      id\r\n      name\r\n      description\r\n      tags\r\n    }\r\n    name\r\n    content\r\n    test\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const updateQuestion = `mutation UpdateQuestion($input: UpdateQuestionInput!) {\r\n  updateQuestion(input: $input) {\r\n    id\r\n    type\r\n    questionSet {\r\n      id\r\n      name\r\n      description\r\n      tags\r\n    }\r\n    name\r\n    content\r\n    test\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const deleteQuestion = `mutation DeleteQuestion($input: DeleteQuestionInput!) {\r\n  deleteQuestion(input: $input) {\r\n    id\r\n    type\r\n    questionSet {\r\n      id\r\n      name\r\n      description\r\n      tags\r\n    }\r\n    name\r\n    content\r\n    test\r\n    tags\r\n  }\r\n}\r\n`;\r\n","// eslint-disable\r\n// this is an auto generated file. This will be overwritten\r\n\r\nexport const onCreateRoom = `subscription OnCreateRoom {\r\n  onCreateRoom {\r\n    id\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n    subjectId\r\n    description\r\n    status\r\n    host {\r\n      id\r\n      name\r\n    }\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSource {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n      }\r\n      nextToken\r\n    }\r\n    questionSourceStr\r\n    progress\r\n  }\r\n}\r\n`;\r\nexport const onUpdateRoom = `subscription OnUpdateRoom {\r\n  onUpdateRoom {\r\n    id\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n    subjectId\r\n    description\r\n    status\r\n    host {\r\n      id\r\n      name\r\n    }\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSource {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n      }\r\n      nextToken\r\n    }\r\n    questionSourceStr\r\n    progress\r\n  }\r\n}\r\n`;\r\nexport const onDeleteRoom = `subscription OnDeleteRoom {\r\n  onDeleteRoom {\r\n    id\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n    subjectId\r\n    description\r\n    status\r\n    host {\r\n      id\r\n      name\r\n    }\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSource {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n      }\r\n      nextToken\r\n    }\r\n    questionSourceStr\r\n    progress\r\n  }\r\n}\r\n`;\r\nexport const onCreateJeUser = `subscription OnCreateJeUser {\r\n  onCreateJEUser {\r\n    id\r\n    name\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onUpdateJeUser = `subscription OnUpdateJeUser {\r\n  onUpdateJEUser {\r\n    id\r\n    name\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onDeleteJeUser = `subscription OnDeleteJeUser {\r\n  onDeleteJEUser {\r\n    id\r\n    name\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onCreateTeam = `subscription OnCreateTeam {\r\n  onCreateTeam {\r\n    id\r\n    name\r\n    description\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSet {\r\n      items {\r\n        id\r\n        name\r\n        description\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onUpdateTeam = `subscription OnUpdateTeam {\r\n  onUpdateTeam {\r\n    id\r\n    name\r\n    description\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSet {\r\n      items {\r\n        id\r\n        name\r\n        description\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onDeleteTeam = `subscription OnDeleteTeam {\r\n  onDeleteTeam {\r\n    id\r\n    name\r\n    description\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    questionSet {\r\n      items {\r\n        id\r\n        name\r\n        description\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onCreateTest = `subscription OnCreateTest {\r\n  onCreateTest {\r\n    id\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    subjectId\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    description\r\n    timeBegin\r\n    timeEnd\r\n    records {\r\n      items {\r\n        id\r\n        subjectId\r\n        syncCode\r\n        timeBegin\r\n        timeEnd\r\n        history\r\n      }\r\n      nextToken\r\n    }\r\n    status\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const onUpdateTest = `subscription OnUpdateTest {\r\n  onUpdateTest {\r\n    id\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    subjectId\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    description\r\n    timeBegin\r\n    timeEnd\r\n    records {\r\n      items {\r\n        id\r\n        subjectId\r\n        syncCode\r\n        timeBegin\r\n        timeEnd\r\n        history\r\n      }\r\n      nextToken\r\n    }\r\n    status\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const onDeleteTest = `subscription OnDeleteTest {\r\n  onDeleteTest {\r\n    id\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    subjectId\r\n    users {\r\n      items {\r\n        id\r\n        name\r\n      }\r\n      nextToken\r\n    }\r\n    description\r\n    timeBegin\r\n    timeEnd\r\n    records {\r\n      items {\r\n        id\r\n        subjectId\r\n        syncCode\r\n        timeBegin\r\n        timeEnd\r\n        history\r\n      }\r\n      nextToken\r\n    }\r\n    status\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const onCreateRecord = `subscription OnCreateRecord {\r\n  onCreateRecord {\r\n    id\r\n    subjectId\r\n    syncCode\r\n    interviewer {\r\n      id\r\n      name\r\n    }\r\n    timeBegin\r\n    timeEnd\r\n    history\r\n    result {\r\n      id\r\n      input\r\n      output\r\n      testCaseResults\r\n    }\r\n    question {\r\n      id\r\n      type\r\n      name\r\n      content\r\n      test\r\n    }\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onUpdateRecord = `subscription OnUpdateRecord {\r\n  onUpdateRecord {\r\n    id\r\n    subjectId\r\n    syncCode\r\n    interviewer {\r\n      id\r\n      name\r\n    }\r\n    timeBegin\r\n    timeEnd\r\n    history\r\n    result {\r\n      id\r\n      input\r\n      output\r\n      testCaseResults\r\n    }\r\n    question {\r\n      id\r\n      type\r\n      name\r\n      content\r\n      test\r\n    }\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onDeleteRecord = `subscription OnDeleteRecord {\r\n  onDeleteRecord {\r\n    id\r\n    subjectId\r\n    syncCode\r\n    interviewer {\r\n      id\r\n      name\r\n    }\r\n    timeBegin\r\n    timeEnd\r\n    history\r\n    result {\r\n      id\r\n      input\r\n      output\r\n      testCaseResults\r\n    }\r\n    question {\r\n      id\r\n      type\r\n      name\r\n      content\r\n      test\r\n    }\r\n    test {\r\n      id\r\n      subjectId\r\n      description\r\n      timeBegin\r\n      timeEnd\r\n      status\r\n      tags\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onCreateResult = `subscription OnCreateResult {\r\n  onCreateResult {\r\n    id\r\n    input\r\n    output\r\n    testCaseResults\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onUpdateResult = `subscription OnUpdateResult {\r\n  onUpdateResult {\r\n    id\r\n    input\r\n    output\r\n    testCaseResults\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onDeleteResult = `subscription OnDeleteResult {\r\n  onDeleteResult {\r\n    id\r\n    input\r\n    output\r\n    testCaseResults\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onCreateQuestionSnapshot = `subscription OnCreateQuestionSnapshot {\r\n  onCreateQuestionSnapshot {\r\n    id\r\n    type\r\n    name\r\n    content\r\n    test\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onUpdateQuestionSnapshot = `subscription OnUpdateQuestionSnapshot {\r\n  onUpdateQuestionSnapshot {\r\n    id\r\n    type\r\n    name\r\n    content\r\n    test\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onDeleteQuestionSnapshot = `subscription OnDeleteQuestionSnapshot {\r\n  onDeleteQuestionSnapshot {\r\n    id\r\n    type\r\n    name\r\n    content\r\n    test\r\n    record {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n      history\r\n    }\r\n    room {\r\n      id\r\n      subjectId\r\n      description\r\n      status\r\n      questionSourceStr\r\n      progress\r\n    }\r\n  }\r\n}\r\n`;\r\nexport const onCreateQuestionSet = `subscription OnCreateQuestionSet {\r\n  onCreateQuestionSet {\r\n    id\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    questions {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n    name\r\n    description\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const onUpdateQuestionSet = `subscription OnUpdateQuestionSet {\r\n  onUpdateQuestionSet {\r\n    id\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    questions {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n    name\r\n    description\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const onDeleteQuestionSet = `subscription OnDeleteQuestionSet {\r\n  onDeleteQuestionSet {\r\n    id\r\n    team {\r\n      id\r\n      name\r\n      description\r\n    }\r\n    questions {\r\n      items {\r\n        id\r\n        type\r\n        name\r\n        content\r\n        test\r\n        tags\r\n      }\r\n      nextToken\r\n    }\r\n    name\r\n    description\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const onCreateQuestion = `subscription OnCreateQuestion {\r\n  onCreateQuestion {\r\n    id\r\n    type\r\n    questionSet {\r\n      id\r\n      name\r\n      description\r\n      tags\r\n    }\r\n    name\r\n    content\r\n    test\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const onUpdateQuestion = `subscription OnUpdateQuestion {\r\n  onUpdateQuestion {\r\n    id\r\n    type\r\n    questionSet {\r\n      id\r\n      name\r\n      description\r\n      tags\r\n    }\r\n    name\r\n    content\r\n    test\r\n    tags\r\n  }\r\n}\r\n`;\r\nexport const onDeleteQuestion = `subscription OnDeleteQuestion {\r\n  onDeleteQuestion {\r\n    id\r\n    type\r\n    questionSet {\r\n      id\r\n      name\r\n      description\r\n      tags\r\n    }\r\n    name\r\n    content\r\n    test\r\n    tags\r\n  }\r\n}\r\n`;\r\n","const spy = (obj, methodName) => {\r\n  const origFn = obj[methodName];\r\n  let callHistory = [];\r\n  let calledWith = {};\r\n\r\n  const secret = Math.random().toFixed(4) + '';\r\n  obj[methodName] = (...args) => {\r\n    const result = origFn.apply(obj, args);\r\n    callHistory.push(args);\r\n    calledWith[args.join(secret)] = true;\r\n    return result;\r\n  };\r\n  return {\r\n    calledWith: (...args) => !!calledWith[args.join(secret)],\r\n    callCount: () => callHistory.length,\r\n    restore: () => (obj[methodName] = origFn)\r\n  };\r\n};\r\n\r\nexport default spy;\r\n","import { createHarness } from 'tape';\r\n\r\nconst tryCatchPatch = t => (description, testBlock) => {\r\n  try {\r\n    t.comment(description);\r\n    testBlock(t);\r\n  } catch (e) {\r\n    t.fail(e);\r\n  }\r\n};\r\n\r\nconst combinePatch = (tape, patches) => (...args) => {\r\n  const [cb] = args.slice(-1);\r\n  if (typeof cb !== 'function') {\r\n    throw new Error('should provide callback');\r\n  }\r\n  tape(...args.slice(0, -1), (t) => {\r\n    for (let key in patches) {\r\n      t[key] = patches[key](t);\r\n    }\r\n    try {\r\n      cb(t);\r\n    } catch (e) {\r\n      t.fail(e);\r\n    }\r\n  });\r\n};\r\n\r\nconst getPatchedTape = (onUpdate) => {\r\n  const harness = createHarness();\r\n  const stream = harness.createStream({ objectMode: true });\r\n  stream.on('data', onUpdate);\r\n  return combinePatch(harness, {\r\n    subtest: tryCatchPatch,\r\n    should: tryCatchPatch\r\n  });\r\n};\r\n\r\nexport default getPatchedTape ;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { renderToString } from 'react-dom/server';\r\nimport sinon from 'sinon';\r\nimport vm from 'vm';\r\nimport spy from './spy';\r\nimport getPatchedTape from './tape';\r\n\r\nconst wrapCode = (code = '') => {\r\n  return code.replace(/for *\\(.*\\{|while *\\(.*\\{|do *\\{/g, (loopHead) => {\r\n    return `let count = 0;\r\n      const detector = (c) => {\r\n        if (c > 100000) {\r\n          throw new Error('infinite');\r\n        }\r\n      }\r\n      ${loopHead}\r\n      detector(count++);\r\n    `;\r\n  });\r\n};\r\n\r\nconst runCode = ({ code, wrappedConsole = console, onTapeUpdate }) => {\r\n  let script = null;\r\n  let context = null;\r\n  const clock = sinon.useFakeTimers();\r\n  let test = null;\r\n  if (onTapeUpdate) {\r\n    test = getPatchedTape(onTapeUpdate);\r\n  }\r\n  // should hijack setTimeout before pass to sandbox\r\n  const sandbox = {\r\n    setTimeout: window.setTimeout, // need to be passed also...\r\n    console: wrappedConsole,\r\n    sinon,\r\n    describe: test,\r\n    test,\r\n    clock,\r\n    spy,\r\n    React,\r\n    ReactDOM,\r\n    root: document.getElementById('result'),\r\n    answer: document.getElementById('answer'),\r\n    renderToString\r\n  };\r\n  try {\r\n    script = new vm.Script(wrapCode(code));\r\n    // eslint-disable-next-line\r\n    context = new vm.createContext(sandbox);\r\n    script.runInContext(context);\r\n  } catch (e) {\r\n    script = new vm.Script(wrapCode(''));\r\n    // eslint-disable-next-line\r\n    context = new vm.createContext(sandbox);\r\n    script.runInContext(context);\r\n    wrappedConsole.log(e);\r\n  }\r\n  clock.restore();\r\n};\r\n\r\n// const debouncedRunCode = _.debounce(runCode, 200);\r\n\r\nexport default runCode;\r\n","import Amplify, { API, graphqlOperation } from 'aws-amplify';\r\nimport awsExportConfig from 'aws-exports';\r\nimport * as mutations from '../../graphql/mutations.js';\r\nimport * as subscriptions from '../../graphql/subscriptions.js';\r\n\r\nAmplify.configure(awsExportConfig);\r\n\r\nconst createRecord = async (subjectId, questionContent) => {\r\n  const params = {\r\n    input: {\r\n      subjectId,\r\n      syncCode: questionContent,\r\n      timeBegin: parseInt(new Date().getTime() / 1000, 10) // must to be Int\r\n    }\r\n  };\r\n  const { data } = await API.graphql(\r\n    graphqlOperation(mutations.createRecord, params)\r\n  );\r\n  return data.createRecord;\r\n};\r\nconst updateRecord = async (id, newCode, subjectId) => {\r\n  const params = {\r\n    input: {\r\n      id,\r\n      subjectId,\r\n      syncCode: newCode,\r\n      timeEnd: parseInt(new Date().getTime() / 1000, 10) // must to be Int\r\n    }\r\n  };\r\n  const result = await API.graphql(\r\n    graphqlOperation(mutations.updateRecord, params)\r\n  );\r\n  return result;\r\n};\r\n\r\nconst subscribeOnCreateRecord = callback => {\r\n  API.graphql(graphqlOperation(subscriptions.onCreateRecord)).subscribe({\r\n    next: ({ value }) => {\r\n      callback(value.data.onCreateRecord);\r\n    },\r\n    error: error => {\r\n      console.error(error);\r\n    }\r\n  });\r\n};\r\n\r\nconst subscribeOnUpdateRecord = callback => {\r\n  API.graphql(graphqlOperation(subscriptions.onUpdateRecord)).subscribe({\r\n    next: ({ value }) => {\r\n      callback(value.data.onUpdateRecord);\r\n    },\r\n    error: error => {\r\n      console.error(error);\r\n    }\r\n  });\r\n};\r\n\r\nconst listRecords = async subjectId => {\r\n  const query = `query {listRecords(filter:{subjectId:{eq:\"${subjectId}\"}}limit: 1000){\r\n    items {\r\n      id\r\n      subjectId\r\n      syncCode\r\n      timeBegin\r\n      timeEnd\r\n    }\r\n    nextToken\r\n  }\r\n  }\r\n `;\r\n  const { data } = await API.graphql(graphqlOperation(query));\r\n  return data.listRecords.items;\r\n};\r\n\r\nexport {\r\n  listRecords,\r\n  createRecord,\r\n  updateRecord,\r\n  subscribeOnCreateRecord,\r\n  subscribeOnUpdateRecord\r\n};\r\n","import React, { Component } from 'react';\r\nimport styles from './Border.module.scss';\r\n\r\nclass Border extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      allowWidth,\r\n      allowHeight,\r\n      disabled,\r\n      borderSize\r\n    } = this.props;\r\n    this.ref = React.createRef();\r\n    this.resize = this.resize.bind(this);\r\n    this.startResize = this.startResize.bind(this);\r\n    this.endResize = this.endResize.bind(this);\r\n    this.borderSize = borderSize || 10;\r\n    this.disabled = disabled;\r\n    this.allowWidth = allowWidth;\r\n    this.allowHeight = allowHeight;\r\n    this.style = {};\r\n  }\r\n\r\n  resize(e) {\r\n    const {\r\n      allowHeight,\r\n      height,\r\n      width,\r\n      onUpdate,\r\n      allowWidth,\r\n      maxHeight,\r\n      maxWidth,\r\n      minWidth,\r\n      minHeight\r\n    } = this.props;\r\n    let newHeight = allowHeight\r\n      ? e.clientY - this.ref.current.offsetTop\r\n      : height;\r\n    if (maxHeight && newHeight > maxHeight) {\r\n      newHeight = maxHeight;\r\n    }\r\n    if (minHeight && newHeight < minHeight) {\r\n      newHeight = minHeight;\r\n    }\r\n    let newWidth = allowWidth\r\n      ? e.clientX - this.ref.current.offsetLeft\r\n      : width;\r\n    if (maxWidth && newWidth > maxWidth) {\r\n      newWidth = maxWidth;\r\n    }\r\n    if (minWidth && newWidth < minWidth) {\r\n      newWidth = minWidth;\r\n    }\r\n    onUpdate({\r\n      width: newWidth,\r\n      height: newHeight\r\n    });\r\n  }\r\n\r\n  endResize() {\r\n    window.removeEventListener('mousemove', this.resize);\r\n    window.removeEventListener('mouseup', this.endResize);\r\n    window.dispatchEvent(new Event('resize'));\r\n  }\r\n\r\n  startResize(e) {\r\n    if (e.target.contains(this.ref.current)) {\r\n      window.addEventListener('mousemove', this.resize);\r\n      window.addEventListener('mouseup', this.endResize);\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const {\r\n      width,\r\n      height,\r\n      disabled,\r\n      children,\r\n      className\r\n    } = this.props;\r\n    this.style = {\r\n      ...this.style,\r\n      width: `${width}px`,\r\n      height: `${height}px`\r\n    };\r\n    let finalClassName = `${styles.border} ${className || ''}`;\r\n    if (!disabled && this.allowWidth) {\r\n      finalClassName = `${finalClassName} ${styles.horizontal}`;\r\n      this.style.paddingRight = `${this.borderSize}px`;\r\n    }\r\n    if (!disabled && this.allowHeight) {\r\n      finalClassName = `${finalClassName} ${styles.vertical}`;\r\n      this.style.paddingBottom = `${this.borderSize}px`;\r\n    }\r\n    return (\r\n      <div\r\n        ref={this.ref}\r\n        className={finalClassName}\r\n        onMouseDown={!disabled ? this.startResize : null}\r\n        style={this.style}\r\n      >\r\n        { children }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Border;\r\n","import React from 'react';\r\nimport Border from 'app/components/Border';\r\nimport styles from './Grid.module.scss';\r\n\r\nexport default class Grid extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const {\r\n      layout,\r\n      borderSize\r\n    } = this.props;\r\n    this.ref = React.createRef();\r\n    this.borderSize = borderSize || 10;\r\n    this.layout = layout;\r\n    this.columns = layout\r\n      .reduce((cal, item) => {\r\n        const newCal = [...cal];\r\n        const { x } = item;\r\n        newCal[x] = [...(newCal[x] || []), item];\r\n        return newCal;\r\n      }, [])\r\n      .map(column => column || [])\r\n      .map(column => column.sort((a, b) => a.y - b.y));\r\n\r\n    this.state = {\r\n      data: this.columns.map((column) => {\r\n        return column.map((item) => {\r\n          return {\r\n            width: item.width,\r\n            height: item.height\r\n          };\r\n        });\r\n      })\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { autoResize } = this.props;\r\n    if (autoResize) {\r\n      window.addEventListener('resize', this.onResize);\r\n      window.dispatchEvent(new Event('resize'));\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { autoResize } = this.props;\r\n    if (autoResize) {\r\n      window.removeEventListener('resize', this.onResize);\r\n    }\r\n  }\r\n\r\n  onResize = () => {\r\n    this.updateFullState();\r\n  }\r\n\r\n  updateFullState = () => {\r\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\r\n    const { data } = this.state;\r\n    const newData = data.map((column, indexOfColumn) => {\r\n      return column.map((item, indexOfItem) => {\r\n        const sumOfWidth = data\r\n          .slice(0, -1)\r\n          .map(c => (c[0] || { width: 0 }))\r\n          .map(c => c.width)\r\n          .reduce((cal, val) => cal + val, 0);\r\n        const sumOfHeight = column\r\n          .slice(0, -1)\r\n          .map(c => c.height)\r\n          .reduce((cal, val) => cal + val, 0);\r\n        return {\r\n          width: indexOfColumn === data.length - 1 ? totalWidth - sumOfWidth : item.width,\r\n          height: indexOfItem === column.length - 1 ? totalHeight - sumOfHeight : item.height\r\n        };\r\n      });\r\n    });\r\n    this.setState({ data: newData });\r\n  }\r\n\r\n  updateGridState = ({\r\n    indexOfColumn, indexOfItem, width, height\r\n  }) => {\r\n    const { clientWidth: totalWidth, clientHeight: totalHeight } = this.ref.current;\r\n    const { data } = this.state;\r\n    const newData = [...data];\r\n    if (width !== newData[indexOfColumn][0].width) {\r\n      newData[indexOfColumn] = newData[indexOfColumn]\r\n        .map((item) => {\r\n          return {\r\n            ...item,\r\n            width\r\n          };\r\n        });\r\n      newData[newData.length - 1] = newData[newData.length - 1].map((item) => {\r\n        return {\r\n          ...item,\r\n          width: totalWidth - width\r\n        };\r\n      });\r\n    } else if (height !== undefined && indexOfColumn !== undefined && indexOfItem !== undefined) {\r\n      newData[indexOfColumn][indexOfItem].height = height;\r\n      newData[indexOfColumn][newData[indexOfColumn].length - 1].height = totalHeight - newData[indexOfColumn][indexOfItem].height;\r\n    }\r\n    this.setState({ data: newData });\r\n  }\r\n\r\n  render() {\r\n    const { columns } = this;\r\n    const { children, totalWidth, totalHeight } = this.props;\r\n    const { data } = this.state;\r\n    return (\r\n      <div\r\n        className={styles.grid}\r\n        style={{\r\n          width: totalWidth,\r\n          height: totalHeight\r\n        }}\r\n        ref={this.ref}\r\n      >\r\n        {\r\n          columns.map((column, indexOfColumn) => {\r\n            const maxWidth = Math.max(...column.map(item => item.maxWidth || 0));\r\n            const minWidth = Math.min(...column.map(item => item.minWidth || 999999));\r\n            const isDisabledForWidth = indexOfColumn === columns.length - 1;\r\n            const finalWidth = isDisabledForWidth\r\n              ? data[indexOfColumn][0].width\r\n              : data[indexOfColumn][0].width + this.borderSize;\r\n            return (\r\n              <Border\r\n                allowWidth\r\n                borderSize={this.borderSize}\r\n                width={finalWidth}\r\n                maxWidth={maxWidth}\r\n                minWidth={minWidth}\r\n                onUpdate={({ width: w }) => this.updateGridState({\r\n                  indexOfColumn,\r\n                  width: w\r\n                })}\r\n                disabled={indexOfColumn === columns.length - 1}\r\n                key={JSON.stringify(column)}\r\n              >\r\n                {\r\n                  column.map((item, indexOfItem) => {\r\n                    const itemInData = data[indexOfColumn][indexOfItem];\r\n                    const itemInColumns = columns[indexOfColumn][indexOfItem];\r\n                    const isDisabled = indexOfItem === column.length - 1 || itemInColumns.static;\r\n                    return (\r\n                      <Border\r\n                        allowHeight\r\n                        borderSize={this.borderSize}\r\n                        width={itemInData.width}\r\n                        height={itemInData.height}\r\n                        maxHeight={itemInColumns.maxHeight}\r\n                        minHeight={itemInColumns.minHeight}\r\n                        onUpdate={({ width: w, height: h }) => this.updateGridState({\r\n                          indexOfItem,\r\n                          indexOfColumn,\r\n                          width: w,\r\n                          height: h\r\n                        })}\r\n                        disabled={isDisabled}\r\n                        key={JSON.stringify(item)}\r\n                      >\r\n                        { children.find(({ key }) => key === item.key) }\r\n                      </Border>\r\n                    );\r\n                  })\r\n                }\r\n              </Border>\r\n            );\r\n          })\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport styles from './Grid.module.scss';\r\n\r\nconst GridItem = ({ children }) => (\r\n  <div className={styles.item}>\r\n    { children }\r\n  </div>\r\n);\r\n\r\nexport default GridItem;\r\n","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\n\r\nimport styles from './CodeWidget.module.scss';\r\n\r\nconst CodeWidget = ({\r\n  handleCodeChange,\r\n  data,\r\n  mode,\r\n  theme\r\n}) => (\r\n  <AceEditor\r\n    className={styles.code}\r\n    showPrintMargin={false}\r\n    mode={mode}\r\n    theme={theme}\r\n    onChange={handleCodeChange}\r\n    value={data}\r\n    tabSize={2}\r\n    debounceChangePeriod={500}\r\n  />\r\n);\r\n\r\nexport default CodeWidget;\r\n","import React from 'react';\r\nimport styles from './ResultWidget.module.scss';\r\n\r\nconst ResultWidget = () => (\r\n  <div className={styles.result} id=\"result\" />\r\n);\r\n\r\nexport default ResultWidget;\r\n","import React from 'react';\r\nimport styles from './AnswerWidget.module.scss';\r\n\r\nconst AnswerWidget = () => (\r\n  <div id=\"answer\" className={styles.answer} />\r\n);\r\n\r\nexport default AnswerWidget;\r\n","import React, { Component } from 'react';\r\nimport { Tag, Input, Tooltip, Icon } from 'antd';\r\n\r\nimport styles from './TagWidget.module.scss';\r\n\r\nclass TagWidget extends Component {\r\n  state = {\r\n    inputVisible: false,\r\n    inputValue: '',\r\n  };\r\n\r\n  handleClose = (removedTag) => {\r\n    const { data: tags, onTagUpdate } = this.props;\r\n    onTagUpdate(tags.filter(tag => tag !== removedTag));\r\n  }\r\n\r\n  showInput = () => {\r\n    this.setState({ inputVisible: true }, () => this.input.focus());\r\n  }\r\n\r\n  handleInputChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  }\r\n\r\n  handleInputConfirm = () => {\r\n    const { onTagUpdate, data: tags } = this.props;\r\n    const { inputValue } = this.state;\r\n    let newTags = [...tags];\r\n    if (inputValue && tags.indexOf(inputValue) === -1) {\r\n      newTags = [...newTags, inputValue];\r\n    }\r\n    onTagUpdate(newTags);\r\n    this.setState({ inputValue: '', inputVisible: false });\r\n  }\r\n\r\n  saveInputRef = input => this.input = input\r\n\r\n  render() {\r\n    const { inputVisible, inputValue } = this.state;\r\n    const { data: tags } = this.props;\r\n    return (\r\n      <div className={styles['tag-widget']}>\r\n        {tags ? tags.map((tag, index) => {\r\n          const isLongTag = tag.length > 20;\r\n          const tagElem = (\r\n            <Tag key={tag} closable afterClose={() => this.handleClose(tag)}>\r\n              {isLongTag ? `${tag.slice(0, 20)}...` : tag}\r\n            </Tag>\r\n          );\r\n          return isLongTag ? <Tooltip title={tag} key={tag}>{tagElem}</Tooltip> : tagElem;\r\n        }) : null}\r\n        {inputVisible && (\r\n          <Input\r\n            ref={this.saveInputRef}\r\n            type=\"text\"\r\n            size=\"small\"\r\n            style={{ width: 78 }}\r\n            value={inputValue}\r\n            onChange={this.handleInputChange}\r\n            onBlur={this.handleInputConfirm}\r\n            onPressEnter={this.handleInputConfirm}\r\n          />\r\n        )}\r\n        {!inputVisible && (\r\n          <Tag\r\n            onClick={this.showInput}\r\n            style={{ background: '#fff', borderStyle: 'dashed' }}\r\n          >\r\n            <Icon type=\"plus\" />\r\n            New Tag\r\n          </Tag>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TagWidget;","import React, { Component } from 'react';\r\nimport 'brace';\r\nimport 'brace/mode/jsx';\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/textmate';\r\nimport 'brace/theme/monokai';\r\n\r\nimport { Spin } from 'antd';\r\n\r\nimport Grid from 'app/components/Grid';\r\nimport GridItem from 'app/components/Grid/GridItem';\r\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\r\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\r\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\r\n\r\nimport debouncedRunCode from 'app/utils/runCode';\r\n\r\nimport TagWidget from '../../TagWidget';\r\nimport styles from './ReactPage.module.scss';\r\n\r\nclass ReactPage extends Component {\r\n  controlHeight = 70;\r\n\r\n  async componentDidMount() {\r\n    const { compiledCode, addTape } = this.props;\r\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: addTape });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const { compiledCode: previousCompiledCode } = this.props;\r\n    const { compiledCode } = nextProps;\r\n    if (previousCompiledCode !== compiledCode) {\r\n      debouncedRunCode({ code: compiledCode });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onTagUpdate,\r\n      handleCodeChange,\r\n      test,\r\n      code,\r\n      tags,\r\n      isLoading,\r\n    } = this.props;\r\n    const layout = [\r\n      {\r\n        key: 'code',\r\n        x: 0,\r\n        y: 0,\r\n        width: window.innerWidth / 2,\r\n        height: window.innerHeight / 2,\r\n        minWidth: 100,\r\n        minHeight: 100,\r\n        maxWidth: 700,\r\n        maxHeight: 500\r\n      },\r\n      {\r\n        key: 'test',\r\n        x: 0,\r\n        y: 1,\r\n        width: window.innerWidth / 2,\r\n        height: window.innerHeight / 2,\r\n        minWidth: 100,\r\n        maxWidth: 700\r\n      },\r\n      {\r\n        key: 'result',\r\n        x: 1,\r\n        y: 0,\r\n        width: window.innerWidth / 2,\r\n        height: (window.innerHeight - this.controlHeight) / 2 - 100,\r\n        minWidth: 100,\r\n        minHeight: 100,\r\n        maxWidth: 700,\r\n        maxHeight: 500\r\n      },\r\n      {\r\n        key: 'answer',\r\n        x: 1,\r\n        y: 1,\r\n        width: window.innerWidth / 2,\r\n        height: (window.innerHeight - this.controlHeight) / 2 - 100,\r\n        minWidth: 100,\r\n        minHeight: 100,\r\n        maxWidth: 700,\r\n        maxHeight: 500\r\n      },\r\n      {\r\n        key: 'tag',\r\n        x: 1,\r\n        y: 3,\r\n        width: window.innerWidth / 2,\r\n        height: 200,\r\n        minWidth: 100,\r\n        minHeight: 100,\r\n        maxWidth: 700,\r\n        maxHeight: 500\r\n      }\r\n    ];\r\n    return (\r\n      <div className={styles.app}>\r\n        <Spin spinning={isLoading} size=\"large\">\r\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\r\n            <GridItem key=\"code\">\r\n              <CodeWidget\r\n                handleCodeChange={handleCodeChange}\r\n                data={code}\r\n                mode=\"jsx\"\r\n                theme=\"monokai\"\r\n              />\r\n            </GridItem>\r\n            <GridItem key=\"test\">\r\n              <CodeWidget\r\n                data={test}\r\n                mode=\"jsx\"\r\n                theme=\"textmate\"\r\n              />\r\n            </GridItem>\r\n            <GridItem key=\"answer\">\r\n              <AnswerWidget />\r\n            </GridItem>\r\n            <GridItem key=\"result\">\r\n              <ResultWidget />\r\n            </GridItem>\r\n            <GridItem key=\"tag\">\r\n              <TagWidget data={tags} onTagUpdate={onTagUpdate} />\r\n            </GridItem>\r\n          </Grid>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactPage;\r\n","import React from 'react';\r\nimport AceEditor from 'react-ace';\r\nimport styles from './TestWidget.module.scss';\r\n\r\nconst TestWidget = ({ data, readOnly = true, handleCodeChange = () => {} }) => (\r\n  <div\r\n    className={`${styles['test-widget']}`}\r\n  >\r\n    <AceEditor\r\n      showPrintMargin={false}\r\n      mode=\"javascript\"\r\n      theme=\"textmate\"\r\n      value={data}\r\n      readOnly={readOnly}\r\n      tabSize={2}\r\n      onChange={handleCodeChange}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default TestWidget;\r\n","import React from 'react';\r\nimport styles from './TapeWidget.module.scss';\r\n\r\nconst TestRow = row => (\r\n  <div className={styles.test}>\r\n    { row.name }\r\n  </div>\r\n);\r\n\r\nconst AssertRow = (row) => {\r\n  const actual = typeof row.actual === 'object' ? JSON.stringify(row.actual) : `${row.actual}`;\r\n  const expected = typeof row.expected === 'object' ? JSON.stringify(row.expected) : `${row.expected}`;\r\n  return (\r\n    <div className={`${styles.assert} ${row.ok ? styles.ok : styles.fail}`}>\r\n      <div className={row.ok ? styles.ok : styles.fail}>{row.ok ? 'OK' : 'FAIL'}</div>\r\n      { row.name ? <div className={styles.name}>{ `${row.name}` }</div> : null }\r\n      {\r\n        !row.ok\r\n          ? (\r\n            <>\r\n              <div className={styles.actual}>{ actual }</div>\r\n              <div className={styles['not-equal']}>!=</div>\r\n              <div className={styles.expected}>{ expected }</div>\r\n              {\r\n                typeof row.actual === 'string' && typeof row.expected === 'string'\r\n                  ? (\r\n                    <div className={styles.diff}>\r\n                      <span className={styles.expected}>{ expected }</span>\r\n                      <span className={styles.actual}>{ actual }</span>\r\n                    </div>\r\n                  )\r\n                  : null\r\n              }\r\n            </>\r\n          )\r\n          : null\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\n// TODO: add endrow component\r\nconst EndRow = row => (\r\n  <div>\r\n    { JSON.stringify(row) }\r\n  </div>\r\n);\r\n\r\nconst DescriptionRow = ({ description }) => (\r\n  <div className={styles.description}>\r\n    { description }\r\n  </div>\r\n);\r\n\r\nconst getRow = (row) => {\r\n  switch (row.type) {\r\n    case 'test':\r\n      return <TestRow key={JSON.stringify(row)} {...row} />;\r\n    case 'assert':\r\n      return <AssertRow key={JSON.stringify(row)} {...row} />;\r\n    case 'end':\r\n      return <EndRow key={JSON.stringify(row)} {...row} />;\r\n    case undefined && typeof row === 'string':\r\n      return <DescriptionRow description={row} key={row} />;\r\n    default:\r\n      return null;\r\n  }\r\n};\r\n\r\nconst TapeWidget = ({ data }) => {\r\n  return (\r\n    <div className={styles.tape}>{ data.map(getRow) }</div>\r\n  );\r\n};\r\n\r\nexport default TapeWidget;\r\n","import React, { Component } from 'react';\r\nimport 'brace';\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/textmate';\r\nimport 'brace/theme/monokai';\r\n\r\nimport { Spin } from 'antd';\r\n\r\nimport Grid from 'app/components/Grid';\r\nimport GridItem from 'app/components/Grid/GridItem';\r\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\r\nimport TestWidget from 'app/components/Widgets/TestWidget';\r\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\r\n\r\nimport debouncedRunCode from 'app/utils/runCode';\r\n\r\nimport TagWidget from '../../TagWidget';\r\nimport styles from './JavaScriptPage.module.scss';\r\n\r\nclass JavaScriptPage extends Component {\r\n\r\n  componentDidMount() {\r\n    const { compiledCode, addTape } = this.props;\r\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: addTape });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const { compiledCode: previousCompiledCode, addTape, resetTape } = this.props;\r\n    const { compiledCode } = nextProps;\r\n    if (previousCompiledCode !== compiledCode) {\r\n      resetTape();\r\n      debouncedRunCode({ code: compiledCode, onTapeUpdate: addTape });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      onTagUpdate,\r\n      handleCodeChange,\r\n      code,\r\n      test,\r\n      tape,\r\n      tags,\r\n      isLoading\r\n    } = this.props;\r\n    const layout = [\r\n      {\r\n        key: 'code',\r\n        x: 0,\r\n        y: 0,\r\n        width: window.innerWidth / 2,\r\n        height: window.innerHeight / 2,\r\n        minWidth: 100,\r\n        minHeight: 100,\r\n        maxWidth: 700,\r\n        maxHeight: 500\r\n      },\r\n      {\r\n        key: 'test',\r\n        x: 0,\r\n        y: 1,\r\n        width: window.innerWidth / 2,\r\n        height: window.innerHeight / 2,\r\n        minWidth: 100,\r\n        maxWidth: 700\r\n      },\r\n      {\r\n        key: 'tape',\r\n        x: 1,\r\n        y: 0,\r\n        width: window.innerWidth / 2,\r\n        height: window.innerHeight / 2,\r\n        minWidth: 100,\r\n        minHeight: 100,\r\n        maxWidth: 700,\r\n        maxHeight: 500\r\n      },\r\n      {\r\n        key: 'tag',\r\n        x: 1,\r\n        y: 1,\r\n        width: window.innerWidth / 2,\r\n        height: window.innerHeight / 2,\r\n        minWidth: 100,\r\n        minHeight: 100,\r\n        maxWidth: 700,\r\n        maxHeight: 500\r\n      }\r\n    ];\r\n    return (\r\n      <div className={styles.app}>\r\n        <Spin spinning={isLoading} size=\"large\">\r\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\r\n            <GridItem key=\"code\">\r\n              <CodeWidget\r\n                handleCodeChange={handleCodeChange}\r\n                data={code}\r\n                mode=\"javascript\"\r\n                theme=\"monokai\"\r\n              />\r\n            </GridItem>\r\n            <GridItem key=\"test\">\r\n              <TestWidget\r\n                data={test}\r\n                readOnly={false}\r\n              />\r\n            </GridItem>\r\n            <GridItem key=\"tape\">\r\n              <TapeWidget data={tape} />\r\n            </GridItem>\r\n            <GridItem key=\"tag\">\r\n              <TagWidget data={tags} onTagUpdate={onTagUpdate} />\r\n            </GridItem>\r\n          </Grid>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JavaScriptPage;\r\n","import javascript from './javascript';\r\nimport react from './react';\r\n\r\nconst Questions = {\r\n  javascript,\r\n  react\r\n};\r\n\r\nconst getCategories = () => Object.keys(Questions).map((name) => { return { name }; });\r\n\r\nconst getQuestions = type => Questions[type];\r\n\r\nexport {\r\n  getCategories,\r\n  getQuestions\r\n};\r\n","const questionList = [\r\n  {\r\n    name: 'countChar',\r\n    content: `\r\n/**\r\n * Implement the function 'countChar'\r\n * to count the occurance of each character for the input string,\r\n * and return an object containing those information.\r\n *\r\n * For example :\r\n *  input string: 'abca'\r\n *\r\n *  returned object:\r\n *  {\r\n *     a: 2,\r\n *     b: 1,\r\n *     c: 1\r\n *  }\r\n */\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction countChar(s) {\r\n\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('countChar test', (t) => {\r\n  t.subtest('should return character count in an object', t => {\r\n    const result = countChar();\r\n    t.equal(typeof result, 'object');\r\n  });\r\n  t.subtest('should be able to count chars', t => {\r\n    const input = 'abca';\r\n    const result = countChar(input);\r\n    t.equal(result.a, 2);\r\n    t.equal(result.b, 1);\r\n  });\r\n  t.subtest('should be able count some longer string as well', t => {\r\n    const input = 'The Quick Brown Fox Jumps Over The Lazy Dog';\r\n    const result = countChar(input);\r\n    t.equal(result[' '], 8);\r\n    t.equal(result.T, 2);\r\n    t.equal(result.o, 3);\r\n  });\r\n})\r\n\r\n`\r\n  },\r\n  {\r\n    name: 'forEach, map and reduce',\r\n    content: `\r\n/**\r\n * Implement the function 'forEach, map and reduce'\r\n *\r\n */\r\n\r\n/**\r\n * Implement function body\r\n */\r\nconst myForEach = function (array, callback) {\r\n\r\n}\r\n\r\nconst myMap = function (array, callback) {\r\n\r\n}\r\n\r\nconst myReduce = function (array, callback, initValue) {\r\n\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('forEach, map and reduce test', (t) => {\r\n  t.subtest('should execute forEach correctly', t => {\r\n    let count = 0;\r\n    myForEach([1, 2, 3, 4], (val, index) => count += val * index * index);\r\n    t.equal(count, 50);\r\n  });\r\n  t.subtest('should execute map correctly', t => {\r\n    const result = myMap([1, 2, 3, 4], (val, index) => val * index * index);\r\n    t.equal(result[0], 0);\r\n    t.equal(result[2], 12);\r\n  });\r\n  t.subtest('should execute reduce correctly', t => {\r\n    const result = myReduce([10, 2, 3], (cal, val, index) => cal + val * index, 0);\r\n    t.equal(result, 8);\r\n  });\r\n});\r\n\r\n`\r\n  },\r\n  {\r\n    name: 'adder',\r\n    content: `\r\n/**\r\n * Implement a function 'adder'\r\n * which behavior is like the following example\r\n *\r\n * ex:\r\n *   addTen = adder(10)\r\n *   addFive = adder(5)\r\n *\r\n *   addTen(10)  // return 20\r\n *   addFive(10) // return 15\r\n*/\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction adder() {\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('adder test', (t) => {\r\n  t.subtest('should return a function', t => {\r\n    t.equal(typeof adder(), 'function');\r\n  });\r\n  t.subtest('should be able to add two numbers', t => {\r\n    const add5 = adder(5);\r\n    t.equal(add5(10), 15);\r\n    t.equal(add5(20), 25);\r\n\r\n    t.equal(adder(40)(2), 42);\r\n  });\r\n})\r\n\r\n`\r\n  },\r\n  {\r\n    name: 'infinite adder',\r\n    content: `\r\n/**\r\n * Implement a function 'adder'\r\n * which behavior is like the following example\r\n *\r\n * ex:\r\n *\r\n *   adder(10)(20)(30).getValue()  // return 60\r\n *   adder(10)(20)(30)(40).getValue() // return 100\r\n*/\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction adder() {\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('adder test', (t) => {\r\n  t.subtest('should return a function', t => {\r\n    t.equal(typeof adder(), 'function');\r\n  });\r\n  t.subtest('should get default value with 0', t => {\r\n    t.equal(adder().getValue(), 0);\r\n  });\r\n  t.subtest('should be able to add mutiple numbers', t => {\r\n    t.equal(adder(10).getValue(), 10);\r\n    t.equal(adder(10)(20)(30).getValue(), 60);\r\n    t.equal(adder(10)(20)(30)(40).getValue(), 100);\r\n  });\r\n})\r\n\r\n`\r\n  },\r\n  {\r\n    name: 'default function',\r\n    content: `\r\n/**\r\n * Implement a function 'defaultWith'\r\n * which behavior is like the following example\r\n *\r\n * ex:\r\n *\r\n *   const fn = ({ a, b }) => a + b;\r\n *   const boundFn = defaultWith(fn, { a: 10 });\r\n *   boundFn({ b: 20 }); // return 30\r\n*/\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction defaultWith() {\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('defaultWith test', (t) => {\r\n  t.subtest('should return a function', t => {\r\n    const fn = () => {};\r\n    t.equal(typeof defaultWith(fn, {}), 'function');\r\n  });\r\n  t.subtest('should get correct result when all parameters are given', t => {\r\n    const fn = ({ a, b }) => a * 2 + b * 3;\r\n    const boundFn = defaultWith(fn, { a: 3 });\r\n    t.equal(boundFn({ b: 4 }), 18);\r\n  });\r\n  t.subtest('should get correct result when all parameters are given', t => {\r\n    const fn = ({ x, y, z }) => x * y * z;\r\n    const boundFn = defaultWith(fn, { x: 3, y: 4 });\r\n    t.equal(boundFn({ x: 7, z: 2 }), 56);\r\n  });\r\n})\r\n\r\n`\r\n  },\r\n  {\r\n    name: 'sequential',\r\n    content: `\r\n/**\r\n * Implement the function 'sequential'\r\n * to execute async functions in sequence.\r\n *\r\n * 'sequential' takes an array of async functions as parameter,\r\n * and execute each of them after previous one has done.\r\n */\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction sequential(tasks = []) {\r\n\r\n}\r\n\r\n`,\r\n    test: `\r\nfunction asyncTask1(done) {\r\n  setTimeout(() => {\r\n    console.log('task 1 done');\r\n    done(1);\r\n  }, 500);\r\n}\r\nfunction asyncTask2(done) {\r\n  setTimeout(() => {\r\n    console.log('task 2 done');\r\n    done(2);\r\n  }, 400);\r\n}\r\nfunction asyncTask3(done) {\r\n  setTimeout(() => {\r\n    console.log('task 3 done');\r\n    done(3);\r\n  }, 300);\r\n}\r\n\r\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\r\n\r\ntest('sequential test', (t) => {\r\n  const log = spy(console, 'log');\r\n  sequential(tasks);\r\n  t.equal(log.callCount(), 0);\r\n  clock.tick(600);\r\n  t.equal(log.callCount(), 1);\r\n  t.ok(log.calledWith('task 1 done'));\r\n  clock.tick(600);\r\n  t.equal(log.callCount(), 3);\r\n  t.ok(log.calledWith('task 3 done'));\r\n});\r\n\r\n    `\r\n  },\r\n  {\r\n    name: 'parallel',\r\n    content: `\r\n/**\r\n * Implement the function 'parallel'\r\n * to execute async functions at once.\r\n *\r\n * 'parallel' takes an array of async functions as parameter,\r\n * and execute each of them in the same time.\r\n *\r\n */\r\n\r\n/**\r\n * Implement function body\r\n */\r\nfunction parallel(tasks = [], callback) {\r\n}\r\n\r\n`,\r\n    test: `\r\nfunction asyncTask1(done) {\r\n  setTimeout(() => {\r\n    console.log('task 1 done');\r\n    done(1);\r\n  }, 500);\r\n}\r\nfunction asyncTask2(done) {\r\n  setTimeout(() => {\r\n    console.log('task 2 done');\r\n    done(2);\r\n  }, 400);\r\n}\r\nfunction asyncTask3(done) {\r\n  setTimeout(() => {\r\n    console.log('task 3 done');\r\n    done(3);\r\n  }, 300);\r\n}\r\n\r\nconst tasks = [asyncTask1, asyncTask2, asyncTask3];\r\n\r\ntest('parallel test', t => {\r\n  t.subtest('should run all tasks at once', t => {\r\n    const spyLog = spy(console, 'log');\r\n    parallel(tasks, (result) => { /* do nothing */ });\r\n    t.equal(spyLog.callCount(), 0);\r\n    clock.tick(600);\r\n    t.equal(spyLog.callCount(), 3);\r\n  });\r\n\r\n  t.subtest('should get task result in an array', t => {\r\n    let obj = {};\r\n    parallel(tasks, (result) => {\r\n      obj.result = result;\r\n    });\r\n    clock.tick(600);\r\n    t.deepEqual(obj.result, [1, 2, 3]);\r\n  });\r\n\r\n  t.subtest('should trigger callback only once', t => {\r\n    let count = 0;\r\n    const callback = () => count++;\r\n\r\n    parallel(tasks, callback);\r\n    clock.tick(300);\r\n    t.equal(count, 0);\r\n    clock.tick(600);\r\n    t.equal(count, 1);\r\n  });\r\n});\r\n\r\n`\r\n  },\r\n  {\r\n    name: 'combineReducers',\r\n    content: `\r\n// http://redux.js.org/docs/api/combineReducers.html\r\nfunction combineReducers(reducers) {\r\n}\r\n\r\nfunction calc(state = 0, action) {\r\n  switch(action.type) {\r\n    case 'ADD':\r\n      return state + 1;\r\n    case 'DEC':\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction calledCount(state = 0, action) {\r\n  if(action.type == 'CALL') {\r\n    return state + 1;\r\n  }\r\n  return state;\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('combineReducers', t => {\r\n  const reducer = combineReducers({\r\n    calc: calc,\r\n    calls: calledCount,\r\n  });\r\n\r\n  t.subtest('should init states', t => {\r\n    let state = {};\r\n    state = reducer(state, {type: ''});\r\n    t.equal(state.calc, 0);\r\n    t.equal(state.calls, 0);\r\n  });\r\n\r\n  t.subtest('should handle actions', t => {\r\n    let state = {};\r\n    state = reducer(state, {type: 'ADD'});\r\n    t.equal(state.calc, 1);\r\n    state = reducer(state, {type: 'ADD'});\r\n    t.equal(state.calc, 2);\r\n  });\r\n})\r\n`\r\n  },\r\n  {\r\n    name: 'applyMiddleware',\r\n    content: `\r\n// http://redux.js.org/docs/api/applyMiddleware.html\r\n\r\nfunction applyMiddleware(...middlewares) {\r\n  return createStore => (...args) => {\r\n    const store = createStore(...args);\r\n    let dispatch = store.dispatch;\r\n    /**************************\r\n     implement              here\r\n     **************************/\r\n\r\n\r\n\r\n\r\n    /***************************/\r\n    return Object.assign(store, { dispatch })\r\n  }\r\n}\r\n\r\n`,\r\n    test: `\r\n\r\nfunction createStore(reducer, preloadedState, enhancer) {\r\n\r\n  if (typeof enhancer !== 'undefined') {\r\n    return enhancer(createStore)(reducer, preloadedState)\r\n  }\r\n\r\n  let currentReducer = reducer;\r\n  let currentState = preloadedState;\r\n\r\n  function getState() {\r\n    return currentState;\r\n  }\r\n\r\n  function dispatch(action) {\r\n    currentState = currentReducer(currentState, action);\r\n  }\r\n\r\n  dispatch({ type: '@@INIT' });\r\n\r\n  return {\r\n    dispatch,\r\n    getState\r\n  };\r\n}\r\n\r\nfunction calc(state = 0, action) {\r\n  switch(action.type) {\r\n    case 'ADD':\r\n      return state + 1;\r\n    case 'DEC':\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst thunk = ({ getState, dispatch }) => next => action => {\r\n  if (typeof action === 'function') {\r\n    return action(dispatch, getState);\r\n  }\r\n  return next(action);\r\n}\r\n\r\ntest('applyMiddleware test', t => {\r\n\r\n  t.subtest('should execute normal action', t => {\r\n    const store = createStore(calc, 0, applyMiddleware(thunk));\r\n    store.dispatch({ type: 'ADD' });\r\n    t.equal(store.getState(), 1);\r\n  });\r\n\r\n  t.subtest('should execute function action', t => {\r\n    const store = createStore(calc, 0, applyMiddleware(thunk));\r\n    const incrementAsync = (dispatch, getState) => {\r\n      setTimeout(() => {\r\n        dispatch({ type: 'ADD' });\r\n      }, 1000);\r\n    };\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    t.equal(store.getState(), 0);\r\n    clock.tick(1000);\r\n    t.equal(store.getState(), 5);\r\n  });\r\n\r\n  t.subtest('should apply mutiple middlewares in the right order', t => {\r\n    let logCount = 1;\r\n    const log = () => next => action => {\r\n      logCount += 1;\r\n      next(action);\r\n    }\r\n    const log2 = () => next => action => {\r\n      logCount *= 2;\r\n      next(action);\r\n    }\r\n    const store = createStore(calc, 0, applyMiddleware(log, log2));\r\n    store.dispatch({ type: 'ADD' });\r\n    store.dispatch({ type: 'ADD' });\r\n    store.dispatch({ type: 'ADD' });\r\n    t.equal(logCount, 22);\r\n  });\r\n})\r\n`\r\n  },\r\n  {\r\n    name: 'createStore',\r\n    content: `\r\n// http://redux.js.org/docs/api/createStore.html\r\n\r\nfunction createStore(reducer, preloadedState, enhancer) {\r\n\r\n  function getState() {\r\n\r\n  }\r\n\r\n  function subscribe(listener) {\r\n\r\n  }\r\n\r\n  function dispatch(action) {\r\n\r\n  }\r\n\r\n  dispatch({ type: '@@INIT' })\r\n\r\n  return {\r\n    dispatch,\r\n    subscribe,\r\n    getState\r\n  }\r\n}\r\n\r\n\r\n`,\r\n    test: `\r\nfunction calc(state = 0, action) {\r\n  switch(action.type) {\r\n    case 'ADD':\r\n      return state + 1;\r\n    case 'DEC':\r\n      return state - 1;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nconst wrappedThunk = (createStore) => {\r\n  return function (...args) {\r\n    const store = createStore(...args);\r\n    const { dispatch, getState } = store;\r\n    store.dispatch = (action) => {\r\n      if (typeof action === 'function') {\r\n        return action(dispatch, getState);\r\n      }\r\n      dispatch(action);\r\n    }\r\n    return store;\r\n  }\r\n}\r\n\r\ntest('createStore test', t => {\r\n\r\n  t.subtest('should execute getState successfully', t => {\r\n    const store = createStore(calc, 0);\r\n    t.equal(store.getState(), 0);\r\n  });\r\n\r\n  t.subtest('should execute dispatch successfully', t => {\r\n    const store = createStore(calc, 0);\r\n    t.equal(store.getState(), 0);\r\n    store.dispatch({ type: 'ADD' });\r\n    t.equal(store.getState(), 1);\r\n  });\r\n\r\n  t.subtest('should execute subscribe and unsubscribe successfully', t => {\r\n    const store = createStore(calc, 0);\r\n    let dispatchCount = 1;\r\n    let dispatchCount2 = 3;\r\n    const unsubscribeForCount = store.subscribe(() => dispatchCount *= 2);\r\n    const unsubscribeForCount2 = store.subscribe(() => dispatchCount2 *= 2);\r\n    store.dispatch({ type: 'ADD' });\r\n    store.dispatch({ type: 'ADD' });\r\n    store.dispatch({ type: 'ADD' });\r\n    t.equal(dispatchCount, 8);\r\n    t.equal(dispatchCount2, 24);\r\n    unsubscribeForCount();\r\n    store.dispatch({ type: 'ADD' });\r\n    store.dispatch({ type: 'ADD' });\r\n    unsubscribeForCount2();\r\n    store.dispatch({ type: 'ADD' });\r\n    t.equal(dispatchCount, 8);\r\n    t.equal(dispatchCount2, 96);\r\n  });\r\n\r\n  t.subtest('should execute enhancer successfully', t => {\r\n    const store = createStore(calc, 0, wrappedThunk);\r\n    const incrementAsync = (dispatch, getState) => {\r\n      setTimeout(() => {\r\n        dispatch({ type: 'ADD' });\r\n      }, 1000);\r\n    };\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    store.dispatch(incrementAsync);\r\n    t.equal(store.getState(), 0);\r\n    clock.tick(1000);\r\n    t.equal(store.getState(), 5);\r\n  });\r\n})\r\n`\r\n  },\r\n  {\r\n    name: 'explain',\r\n    content: `\r\n// explain the purpose of following code;\r\n// modify variable name and/or code style when appropriate;\r\n// add comments where you see fit\r\nfunction foo(a, b) {\r\n  var c = [];\r\n  for(var i0 = 0, i1 = 0; i0 < a.length && i1 < b.length; ) {\r\n    if(a[i0] < b[i1]) {\r\n      c.push(a[i0++]);\r\n    }\r\n    if(a[i0] >= b[i1]) {\r\n      c.push(b[i1++]);\r\n    }\r\n  }\r\n  if(i0 < a.length) {\r\n    for(var i = i0; i < a.length; i++) {\r\n      c.push(a[i]);\r\n    }\r\n  }\r\n  if(i1 < b.length) {\r\n    for(var i = i1; i < b.length; i++) {\r\n      c.push(b[i]);\r\n    }\r\n  }\r\n  return c;\r\n}\r\n\r\nconsole.log(foo([1,4,5], [2,3,6]))\r\n`\r\n  },\r\n  {\r\n    name: 'mergeSort',\r\n    content: `\r\n// implement function merge, so mergeSort can run correctly\r\nfunction merge(arr1, arr2) {\r\n  // TODO enter your code here\r\n  return arr1;\r\n}\r\n\r\nfunction mergeSort(arr) {\r\n  if(arr.length <= 1) {\r\n    return arr;\r\n  }\r\n  const mid = Math.floor(arr.length / 2);\r\n  const sortedArr1 = mergeSort(arr.slice(0, mid));\r\n  const sortedArr2 = mergeSort(arr.slice(mid));\r\n  return merge(sortedArr1, sortedArr2);\r\n}\r\n\r\n`,\r\n    test: `\r\ntest('mergeSort', t => {\r\n  t.deepEqual(mergeSort([6,3,5,10,2,100,4,1]),[1,2,3,4,5,6,10,100]);\r\n  const randomNumbers = Array.from({length: 20})\r\n    .map(() => Math.floor(Math.random() * 100));\r\n  const sorted = randomNumbers.slice(0).sort((a, b) => a - b);\r\n  t.deepEqual(mergeSort(randomNumbers), sorted);\r\n})\r\n`\r\n  },\r\n];\r\n\r\nexport default questionList;\r\n","const questionList = [\r\n  {\r\n    name: 'Search',\r\n    content: `\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst search = (query) => new Promise((resolve, reject) => {\r\n  const result = DATA.filter(({ name }) => name.includes(query.toLowerCase()));\r\n  if (result.length !== 0) {\r\n    resolve(result);\r\n  } else {\r\n    reject(new Error('not found'));\r\n  }\r\n});\r\n\r\nconst Item = ({ name, price }) => (\r\n  <div>\r\n    { name }: { price }$ \r\n  </div>\r\n);\r\n\r\nconst DATA = [\r\n  {\r\n    name: 'apple',\r\n    price: 10,\r\n    id: 1\r\n  },\r\n  {\r\n    name: 'orange',\r\n    price: 15,\r\n    id: 2\r\n  },\r\n  {\r\n    name: 'banana',\r\n    price: 7,\r\n    id: 3\r\n  },\r\n]\r\n\r\n`,\r\n    test: `\r\nclass AnswerApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { value: '', data: [] };\r\n  }\r\n  changeValue = async (name) => {\r\n    this.setState({ value: name });\r\n    if (name.trim() === '') {\r\n      this.setState({ data: [] });\r\n      return;\r\n    }\r\n    try {\r\n      const result = await search(name);\r\n      this.setState({ data: result });\r\n    } catch (e) {\r\n      this.setState({ data: [] });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Hi, I want to buy { this.state.value }</div>\r\n        <input onChange={e => this.changeValue(e.target.value)}/>\r\n        <div>\r\n          {\r\n            this.state.data.map(({ price, name, id }) => <Item price={price} name={name} key={id} /> )\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <AnswerApp />,\r\n  answer\r\n);\r\n\r\ntry {\r\n  renderToString(\r\n    <App />\r\n  );\r\n  ReactDOM.render(\r\n    <App/>,\r\n    root\r\n  )\r\n} catch (e) {\r\n  console.log(e)\r\n}\r\n\r\n`\r\n  },\r\n];\r\n\r\nexport default questionList;\r\n","import React from 'react';\r\nimport { Select } from 'antd';\r\n\r\nimport { getCategories } from 'app/questions/index';\r\n\r\nconst categories = getCategories();\r\nconst { Option } = Select;\r\n\r\nconst CategorySelector = ({ categoryIndex, onChange }) => (\r\n  <Select\r\n    onChange={onChange}\r\n    defaultValue={categoryIndex}\r\n    style={{ minWidth: 200 }}\r\n  >\r\n    { categories.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\r\n  </Select>\r\n);\r\n\r\nexport default CategorySelector;\r\n","import React from 'react';\r\nimport { Select } from 'antd';\r\n\r\nconst { Option } = Select;\r\n\r\n// const QuestionSelector = ({ actions, state }) => {\r\n//   const {\r\n//     questionIndex,\r\n//     type,\r\n//     questions\r\n//   } = getStateInformation(state);\r\n//   return (\r\n//     <Select\r\n//       onChange={index => actions.changeQuestion({ index, type: type.toUpperCase() })}\r\n//       defaultValue={questionIndex}\r\n//       style={{ minWidth: 200 }}\r\n//     >\r\n//       { questions.map((q, i) => <Option key={q.name} value={i}>{q.name}</Option>)}\r\n//     </Select>\r\n//   );\r\n// };\r\n\r\nconst QuestionSelector = ({ questionIndex, onChange, list }) => (\r\n  <Select\r\n    onChange={onChange}\r\n    defaultValue={questionIndex}\r\n    value={questionIndex}\r\n    style={{ minWidth: 200 }}\r\n  >\r\n    { list.map((q, i) => <Option key={q.id} value={i}>{q.name}</Option>)}\r\n  </Select>\r\n);\r\n\r\nexport default QuestionSelector;\r\n","import React from 'react';\r\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\r\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\r\n\r\nimport { Button, Icon } from 'antd';\r\nimport styles from './ControlWidget.module.scss';\r\n\r\n\r\nconst ControlWidget = ({\r\n  categoryIndex,\r\n  questionIndex,\r\n  onDispatchQuestion,\r\n  onChangeCategory,\r\n  onChangeQuestion,\r\n  questionList,\r\n  setIntervieweeModal,\r\n  intervieweeName\r\n}) => (\r\n  <div className={styles.control}>\r\n    <div className={styles.interviewee}>\r\n      <Icon type=\"user\" />\r\n      <p>\r\n        Interviewee:\r\n        <span>{ intervieweeName || 'UNSET' }</span>\r\n      </p>\r\n    </div>\r\n    <div>\r\n      <CategorySelector onChange={onChangeCategory} categoryIndex={categoryIndex} />\r\n      <QuestionSelector onChange={onChangeQuestion} questionIndex={questionIndex} list={questionList} />\r\n      <Button\r\n        type=\"danger\"\r\n        onClick={onDispatchQuestion}\r\n      >\r\n      Dispatch Question\r\n      </Button>\r\n    </div>\r\n    <Button\r\n      type=\"primary\"\r\n      onClick={setIntervieweeModal}\r\n    >\r\n    Change Interviewee\r\n    </Button>\r\n  </div>\r\n);\r\n\r\nexport default ControlWidget;\r\n","import React from 'react';\r\nimport { Modal, Button, Input, message, Select } from 'antd';\r\nimport './Modal.scss';\r\n\r\nconst { Option } = Select;\r\nexport default class UserModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: '',\r\n      recordId: '',\r\n      recordSyncCode: ''\r\n    };\r\n  }\r\n\r\n  handleCancel = () => {\r\n    this.props.setIntervieweeModal();\r\n    this.setState({ userName: '' });\r\n  }\r\n\r\n  submitName = () => {\r\n    const { userName } = this.state;\r\n    if (this.props.mustEnterName && userName === '') {\r\n      message.error('Please Enter Interviewee\\'s Name');\r\n    } else {\r\n      this.props.setIntervieweeName(userName);\r\n      this.props.setIntervieweeModal();\r\n      this.setState({ userName: '' });\r\n    }\r\n  }\r\n\r\n  onChangeSelect = index => {\r\n    this.setState({\r\n      recordId: this.props.recordList[index].id,\r\n      recordSyncCode: this.props.recordList[index].syncCode,\r\n    });\r\n  }\r\n\r\n  changeTime = time => {\r\n    const date = new Date(time * 1000);\r\n    return date.toDateString() + date.toTimeString();\r\n  }\r\n\r\n  searchName = async () => {\r\n    const { userName } = this.state;\r\n    if (userName === '') {\r\n      message.error('Please Enter Interviewee\\'s Name');\r\n    } else {\r\n      this.props.setIntervieweeName(userName);\r\n      await this.props.getRecordListBySubjectId(userName);\r\n      this.onChangeSelect(0);\r\n    }\r\n  }\r\n\r\n  joinAction = () => {\r\n    const { recordId, recordSyncCode } = this.state;\r\n    this.props.joinExam({ recordId, recordSyncCode });\r\n  }\r\n\r\n  render() {\r\n    const { closable, visible, searchable, recordList } = this.props;\r\n    const { userName } = this.state;\r\n    return (\r\n      <Modal\r\n        title=\"Enter Interviewee's Name\"\r\n        maskClosable={false}\r\n        visible={visible}\r\n        closable={closable}\r\n        onCancel={this.handleCancel}\r\n        footer={null}\r\n      >\r\n        <Input\r\n          id=\"intervieweeNameInput\"\r\n          placeholder=\"Enter Name\"\r\n          value={userName}\r\n          onChange={e => this.setState({ userName: e.target.value.trim() })}\r\n        />\r\n        <div id=\"modalSubmitBtn\">\r\n          {\r\n            searchable ? (\r\n              <Button\r\n                id=\"getRecordListBtn\"\r\n                onClick={this.searchName}\r\n              >\r\n                Search\r\n              </Button>\r\n            ) : ''\r\n          }\r\n          <Button\r\n            id=\"intervieweeNameSubmitBtn\"\r\n            onClick={this.submitName}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </div>\r\n        {\r\n          recordList ? (\r\n            <div\r\n              id=\"searchRecordListStyle\"\r\n              style={\r\n                recordList.length > 0 ? { opacity: '1' }\r\n                  : { opacity: '0.5' }\r\n              }\r\n            >\r\n              <Select\r\n                defaultValue={0}\r\n                onChange={this.onChangeSelect}\r\n                style={{ width: '100%' }}\r\n                disabled={recordList.length <= 0}\r\n                placeholder={recordList.length > 0 ? 'Please select to join' : ''}\r\n                size=\"large\"\r\n              >\r\n                {\r\n                  recordList\r\n                    .map((item, index) => (\r\n                      <Option\r\n                        key={item.id}\r\n                        value={index}\r\n                      >\r\n                        {\r\n                          this.changeTime(item.timeBegin)\r\n                        }\r\n                      </Option>\r\n                    ))\r\n                }\r\n              </Select>\r\n              <Button\r\n                id=\"joinExamBtn\"\r\n                onClick={this.joinAction}\r\n              >\r\n                Join\r\n              </Button>\r\n            </div>\r\n          ) : ''\r\n        }\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { transform } from '@babel/standalone';\r\nimport { message } from 'antd';\r\n\r\nimport {\r\n  listQuestions,\r\n  getQuestion,\r\n  dispatchQuestion\r\n} from 'app/utils/question';\r\nimport debouncedRunCode from 'app/utils/runCode';\r\n\r\nimport {\r\n  createRecord,\r\n  subscribeOnCreateRecord,\r\n  subscribeOnUpdateRecord,\r\n  listRecords\r\n} from 'app/utils/record';\r\n\r\nimport ReactPage from './ReactPage';\r\nimport JavaScriptPage from './JavaScriptPage';\r\nimport ControlWidget from './ControlWidget';\r\nimport UserModal from 'app/components/Modal';\r\n\r\nconst getPageComponent = args => {\r\n  switch (args.categoryIndex) {\r\n    case 1: {\r\n      return <ReactPage {...args} />;\r\n    }\r\n    default: {\r\n      return <JavaScriptPage {...args} />;\r\n    }\r\n  }\r\n};\r\n\r\nclass Page extends Component {\r\n  state = {\r\n    categoryIndex: 0,\r\n    recordId: '',\r\n    questionName: '',\r\n    questionContent: '',\r\n    code: '',\r\n    compiledCode: '',\r\n    test: '',\r\n    tape: [],\r\n    tags: [],\r\n    id: null,\r\n    questionList: [],\r\n    questionIndex: 0,\r\n    isLoading: false,\r\n    intervieweeName: '',\r\n    visibleIntervieweeModal: true,\r\n    recordList: [],\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.setIntervieweeName = this.setIntervieweeName.bind(this);\r\n    this.getRecordListBySubjectId = this.getRecordListBySubjectId.bind(this);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    this.subscribeOnCreateRecord();\r\n    this.subscribeOnUpdateRecord();\r\n    const result = await listQuestions('javascript');\r\n    if (result) {\r\n      this.setState({ questionList: result.items, isLoading: false });\r\n      this.onChangeQuestion(0);\r\n    }\r\n\r\n    debouncedRunCode({\r\n      code: this.state.compiledCode,\r\n      onTapeUpdate: this.addTape\r\n    });\r\n  }\r\n\r\n  setIntervieweeName = name => {\r\n    this.setState({ intervieweeName: name });\r\n    message.success(name);\r\n  }\r\n\r\n  onChangeCategory = async index => {\r\n    this.setState({ categoryIndex: index, isLoading: true });\r\n    const result = await listQuestions(index === 0 ? 'javascript' : 'react');\r\n    this.setState({ questionList: result.items, isLoading: false });\r\n    this.onChangeQuestion(0);\r\n  };\r\n\r\n  onChangeQuestion = async index => {\r\n    const { questionList } = this.state;\r\n    const { id, name, type } = questionList[index];\r\n    this.setState({ isLoading: true, questionIndex: index });\r\n    const result = await getQuestion(id);\r\n    const { tags, content: code, test } = result;\r\n    this.setState({\r\n      questionName: name,\r\n      questionContent: code,\r\n      type,\r\n      tags,\r\n      code,\r\n      test,\r\n      isLoading: false,\r\n      id\r\n    });\r\n  };\r\n\r\n  handleCodeChange = (newCode) => {\r\n    const { test } = this.state;\r\n    const fullCode = `${newCode} ${test}`;\r\n    try {\r\n      const { code: compiledCode } = transform(fullCode, {\r\n        presets: [\r\n          'es2015',\r\n          ['stage-2', { decoratorsBeforeExport: true }],\r\n          'react'\r\n        ],\r\n        plugins: ['proposal-object-rest-spread']\r\n      });\r\n      this.setState({ code: newCode, compiledCode });\r\n    } catch (e) {\r\n      this.setState({ code: newCode });\r\n    }\r\n  };\r\n\r\n  onDispatchQuestion = async () => {\r\n    const { questionName, type, questionContent, test, intervieweeName } = this.state;\r\n    this.setState({ isLoading: true });\r\n    try {\r\n      if (intervieweeName === '') {\r\n        message.warning('Please Enter Interviewee First.');\r\n        this.setState({ isLoading: false });\r\n      } else {\r\n        const question = {\r\n          name: questionName,\r\n          type,\r\n          content: questionContent,\r\n          test,\r\n        };\r\n        await dispatchQuestion(question);\r\n        this.createRecord(intervieweeName, question.content);\r\n        message.success(\r\n          `Dispatching the question \"${questionName}\" to \"${intervieweeName}\" successfully!`\r\n        );\r\n        this.setState({ isLoading: false });\r\n      }\r\n    } catch (e) {\r\n      message.error(e.message, 2);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  };\r\n\r\n  addTape = newTape => {\r\n    const { tape } = this.state;\r\n    this.setState({ tape: [...tape, newTape] });\r\n  };\r\n\r\n  resetTape = () => {\r\n    this.setState({ tape: [] });\r\n  };\r\n\r\n  onTagUpdate = tags => {\r\n    this.setState({ tags });\r\n  };\r\n\r\n  setIntervieweeModal = () => {\r\n    const { visibleIntervieweeModal } = this.state;\r\n    this.setState({ visibleIntervieweeModal: !visibleIntervieweeModal });\r\n  }\r\n\r\n  createRecord = async (intervieweeName, questionContent) => {\r\n    const result = await createRecord(intervieweeName, questionContent);\r\n    this.setState({\r\n      recordId: result.id,\r\n    });\r\n  };\r\n\r\n  subscribeOnCreateRecord = () => {\r\n    subscribeOnCreateRecord(data => {\r\n      const { id } = data;\r\n      this.setState({ recordId: id });\r\n    });\r\n  };\r\n\r\n  subscribeOnUpdateRecord = () => {\r\n    subscribeOnUpdateRecord(data => {\r\n      const { id, syncCode, subjectId } = data;\r\n      const { recordId, intervieweeName } = this.state;\r\n      if (id === recordId && intervieweeName === subjectId) {\r\n        this.setState({ code: syncCode });\r\n      }\r\n    });\r\n  };\r\n\r\n  getRecordListBySubjectId = async intervieweeName => {\r\n    const result = await listRecords(intervieweeName);\r\n    this.setState({ recordList: result.sort((a, b) => b.timeBegin - a.timeBegin) });\r\n  }\r\n\r\n  joinExam = record => {\r\n    const { recordId, recordSyncCode } = record;\r\n    this.setState({\r\n      recordId,\r\n      recordList: []\r\n    });\r\n    this.handleCodeChange(recordSyncCode);\r\n    this.setIntervieweeModal();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      categoryIndex,\r\n      questionIndex,\r\n      questionList,\r\n      recordId,\r\n      intervieweeName,\r\n      visibleIntervieweeModal,\r\n      recordList,\r\n    } = this.state;\r\n    const {\r\n      onChangeCategory,\r\n      onChangeQuestion,\r\n      onDispatchQuestion,\r\n      handleCodeChange,\r\n      addTape,\r\n      resetTape,\r\n      onTagUpdate,\r\n      setIntervieweeName,\r\n      setIntervieweeModal,\r\n      getRecordListBySubjectId,\r\n      joinExam\r\n    } = this;\r\n    return (\r\n      <React.Fragment>\r\n        <ControlWidget\r\n          onDispatchQuestion={onDispatchQuestion}\r\n          onChangeCategory={onChangeCategory}\r\n          categoryIndex={categoryIndex}\r\n          questionIndex={questionIndex}\r\n          questionList={questionList}\r\n          onChangeQuestion={onChangeQuestion}\r\n          setIntervieweeModal={setIntervieweeModal}\r\n          intervieweeName={intervieweeName}\r\n        />\r\n        {getPageComponent({\r\n          categoryIndex,\r\n          recordId,\r\n          intervieweeName,\r\n          onDispatchQuestion,\r\n          onChangeCategory,\r\n          onChangeQuestion,\r\n          handleCodeChange,\r\n          addTape,\r\n          resetTape,\r\n          onTagUpdate,\r\n          ...this.state\r\n        })}\r\n        <UserModal\r\n          setIntervieweeModal={setIntervieweeModal}\r\n          mustEnterName={false}\r\n          closable\r\n          setIntervieweeName={setIntervieweeName}\r\n          getRecordListBySubjectId={getRecordListBySubjectId}\r\n          visible={visibleIntervieweeModal}\r\n          searchable\r\n          recordList={recordList}\r\n          joinExam={joinExam}\r\n        />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React, { Component } from 'react';\r\nimport 'brace';\r\nimport 'brace/mode/jsx';\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/textmate';\r\nimport 'brace/theme/monokai';\r\n\r\nimport { Spin } from 'antd';\r\n\r\nimport Grid from 'app/components/Grid';\r\nimport GridItem from 'app/components/Grid/GridItem';\r\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\r\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\r\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\r\n\r\nimport debouncedRunCode from 'app/utils/runCode';\r\n\r\nimport TagWidget from '../../TagWidget';\r\nimport styles from './ReactPage.module.scss';\r\n\r\n\r\nclass ReactPage extends Component {\r\n  componentDidMount() {\r\n    const { compiledCode } = this.props;\r\n    debouncedRunCode({ code: compiledCode });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const { compiledCode: previousCompiledCode } = this.props;\r\n    const { compiledCode } = nextProps;\r\n    if (previousCompiledCode !== compiledCode) {\r\n      debouncedRunCode({ code: compiledCode });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      isLoading,\r\n      test,\r\n      code,\r\n      tags,\r\n      onTagUpdate,\r\n      handleCodeChange,\r\n      handleTestChange } = this.props;\r\n    const layout = [\r\n      {\r\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\r\n      },\r\n      {\r\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\r\n      },\r\n      {\r\n        key: 'result', x: 1, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\r\n      },\r\n      {\r\n        key: 'answer', x: 1, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2 - 100, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\r\n      },\r\n      {\r\n        key: 'tag', x: 1, y: 3, width: window.innerWidth / 2, height: 200, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\r\n      },\r\n    ];\r\n    return (\r\n      <div className={styles.app}> \r\n        <Spin spinning={isLoading} size=\"large\">\r\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\r\n            <GridItem key=\"code\">\r\n              <CodeWidget\r\n                handleCodeChange={handleCodeChange}\r\n                data={code}\r\n                mode=\"jsx\"\r\n                theme=\"monokai\"\r\n              />\r\n            </GridItem>\r\n            <GridItem key=\"test\">\r\n              <CodeWidget\r\n                handleCodeChange={handleTestChange}\r\n                data={test}\r\n                mode=\"jsx\"\r\n                theme=\"textmate\"\r\n              />\r\n            </GridItem>\r\n            <GridItem key=\"answer\">\r\n              <AnswerWidget />\r\n            </GridItem>\r\n            <GridItem key=\"result\">\r\n              <ResultWidget />\r\n            </GridItem>\r\n            <GridItem key=\"tag\">\r\n              <TagWidget data={tags} onTagUpdate={onTagUpdate} />\r\n            </GridItem>\r\n          </Grid>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactPage;\r\n","import React, { Component } from 'react';\r\nimport 'brace';\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/textmate';\r\nimport 'brace/theme/monokai';\r\n\r\nimport { Spin } from 'antd';\r\n\r\nimport Grid from 'app/components/Grid';\r\nimport GridItem from 'app/components/Grid/GridItem';\r\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\r\nimport TestWidget from 'app/components/Widgets/TestWidget';\r\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\r\n\r\nimport debouncedRunCode from 'app/utils/runCode';\r\n\r\nimport TagWidget from '../../TagWidget';\r\nimport styles from './JavaScriptPage.module.scss';\r\n\r\nclass JavaScriptPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tape: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { compiledCode } = this.props;\r\n    debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const { compiledCode: previousCompiledCode } = this.props;\r\n    const { compiledCode } = nextProps;\r\n    if (previousCompiledCode !== compiledCode) {\r\n      this.setState({ tape: [] }, () => {\r\n        debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\r\n      });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  addTape = data => {\r\n    const { tape } = this.state;\r\n    this.setState({\r\n      tape: [...tape, data]\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { tape } = this.state;\r\n    const {\r\n      isLoading,\r\n      test,\r\n      code,\r\n      tags,\r\n      onTagUpdate,\r\n      handleCodeChange,\r\n      handleTestChange } = this.props;\r\n    const layout = [\r\n      {\r\n        key: 'code',\r\n        x: 0,\r\n        y: 0,\r\n        width: window.innerWidth / 2,\r\n        height: window.innerHeight / 2,\r\n        minWidth: 100,\r\n        minHeight: 100,\r\n        maxWidth: 700,\r\n        maxHeight: 500\r\n      },\r\n      {\r\n        key: 'test',\r\n        x: 0,\r\n        y: 1,\r\n        width: window.innerWidth / 2,\r\n        height: window.innerHeight / 2,\r\n        minWidth: 100,\r\n        maxWidth: 700\r\n      },\r\n      {\r\n        key: 'tape',\r\n        x: 1,\r\n        y: 0,\r\n        width: window.innerWidth / 2,\r\n        height: window.innerHeight / 2,\r\n        minWidth: 100,\r\n        minHeight: 100,\r\n        maxWidth: 700,\r\n        maxHeight: 500\r\n      },\r\n      {\r\n        key: 'tag',\r\n        x: 1,\r\n        y: 1,\r\n        width: window.innerWidth / 2,\r\n        height: window.innerHeight / 2,\r\n        minWidth: 100,\r\n        minHeight: 100,\r\n        maxWidth: 700,\r\n        maxHeight: 500\r\n      }\r\n    ];\r\n    return (\r\n      <div className={styles.app}>\r\n        <Spin spinning={isLoading} size=\"large\">\r\n          <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\r\n            <GridItem key=\"code\">\r\n              <CodeWidget\r\n                handleCodeChange={handleCodeChange}\r\n                data={code}\r\n                mode=\"javascript\"\r\n                theme=\"monokai\"\r\n              />\r\n            </GridItem>\r\n            <GridItem key=\"test\">\r\n              <TestWidget\r\n                handleCodeChange={handleTestChange}\r\n                data={test}\r\n                readOnly={false}\r\n              />\r\n            </GridItem>\r\n            <GridItem key=\"tape\">\r\n              <TapeWidget data={tape} />\r\n            </GridItem>\r\n            <GridItem key=\"tag\">\r\n              <TagWidget data={tags} onTagUpdate={onTagUpdate} />\r\n            </GridItem>\r\n          </Grid>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JavaScriptPage;\r\n","import React from 'react';\r\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\r\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\r\n\r\nimport { Button, Input } from 'antd';\r\nimport styles from './ControlWidget.module.scss';\r\n\r\nconst ControlWidget = ({\r\n  type,\r\n  categoryIndex,\r\n  questionIndex,\r\n  onChangeName,\r\n  onSubmit,\r\n  onDelete,\r\n  onChangeCategory,\r\n  onChangeQuestion,\r\n  onSync,\r\n  questionList\r\n}) => (\r\n  <div className={styles.control}>\r\n    <CategorySelector\r\n      onChange={onChangeCategory}\r\n      categoryIndex={categoryIndex}\r\n    />\r\n    {type === 'add' ? (\r\n      <>\r\n        <Input\r\n          placeholder=\"Question name\"\r\n          onChange={e => onChangeName(e.target.value)}\r\n          style={{ width: 200, marginRight: 5 }}\r\n        />\r\n        <Button type=\"primary\" icon=\"check-circle\" onClick={onSubmit}>\r\n          Submit\r\n        </Button>\r\n      </>\r\n    ) : (\r\n      <>\r\n        <QuestionSelector\r\n          onChange={onChangeQuestion}\r\n          questionIndex={questionIndex}\r\n          list={questionList}\r\n        />\r\n        <Button type=\"primary\" icon=\"check-circle\" onClick={onSubmit}>\r\n          Submit\r\n        </Button>\r\n        <Button type=\"danger\" icon=\"delete\" onClick={onDelete}>\r\n          Delete\r\n        </Button>\r\n        <Button style={{ float: 'right' }} shape=\"circle\" icon=\"sync\" onClick={onSync} />\r\n      </>\r\n    )}\r\n  </div>\r\n);\r\n\r\nexport default ControlWidget;\r\n","import React, { Component } from 'react';\r\n\r\nimport { transform } from '@babel/standalone';\r\n\r\nimport { message } from 'antd';\r\n\r\nimport { createQuestion, updateQuestion, deleteQuestion, listQuestions, getQuestion } from 'app/utils/question';\r\nimport debouncedRunCode from 'app/utils/runCode';\r\n\r\nimport ReactPage from './ReactPage';\r\nimport JavaScriptPage from './JavaScriptPage';\r\n\r\nimport ControlWidget from './ControlWidget';\r\n\r\nconst getPageComponent = (args) => {\r\n  switch (args.categoryIndex) {\r\n    case 1: {\r\n      return <ReactPage {...args} />;\r\n    }\r\n    default: {\r\n      return <JavaScriptPage {...args} />;\r\n    }\r\n  }\r\n};\r\n\r\nclass Page extends Component {\r\n  state = {\r\n    categoryIndex: 0,\r\n    name: '',\r\n    tags: [],\r\n    code: '',\r\n    compiledCode: '',\r\n    test: '',\r\n    id: null,\r\n    questionList: [],\r\n    questionIndex: 0,\r\n    isLoading: false\r\n  }\r\n\r\n  async componentDidMount() {\r\n    if (this.props.type === 'edit') {\r\n      const { compiledCode } = this.state;\r\n      this.setState({ isLoading: true });\r\n      await this.getQuestionList();\r\n      debouncedRunCode({ code: compiledCode, onTapeUpdate: this.addTape });\r\n    }\r\n  }\r\n\r\n  onChangeCategory = async (index) => {\r\n    this.setState({ categoryIndex: index }, await this.getQuestionList);\r\n  }\r\n\r\n  getQuestionList = async () => {\r\n    const { categoryIndex } = this.state;\r\n    const result = await listQuestions(categoryIndex === 0 ? 'javascript' : 'react');\r\n    this.setState({ questionList: result.items, isLoading: false });\r\n    this.onChangeQuestion(0);\r\n  }\r\n\r\n  onChangeQuestion = async (questionIndex) => {\r\n    const { questionList } = this.state;\r\n    const { id } = questionList[questionIndex];\r\n    this.setState({ isLoading: true, questionIndex });\r\n    const result = await getQuestion(id);\r\n    const { tags, content: code, test } = result;\r\n    this.setState({\r\n      tags,\r\n      code,\r\n      test,\r\n      isLoading: false,\r\n      id\r\n    });\r\n  }\r\n\r\n  onSubmit = async () => {\r\n    const {\r\n      categoryIndex,\r\n      tags,\r\n      name,\r\n      code: content,\r\n      test,\r\n      id\r\n    } = this.state;\r\n    this.setState({ isLoading: true });\r\n    if (this.props.type === 'add') {\r\n      await this.onCreateQuestion({\r\n        tags,\r\n        name,\r\n        content,\r\n        test,\r\n        type: categoryIndex === 0 ? 'javascript' : 'react'\r\n      });\r\n    } else {\r\n      await this.onUpdateQuestion({\r\n        id,\r\n        tags,\r\n        content,\r\n        test\r\n      });\r\n    }\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  onCreateQuestion = async data => {\r\n    try {\r\n      await createQuestion(data);\r\n      message.success(`Successfully add the question \"${data.name}\"!`, 0.5);\r\n    } catch (e) {\r\n      message.error(e);\r\n    }\r\n  }\r\n\r\n  onUpdateQuestion = async data => {\r\n    try {\r\n      await updateQuestion(data);\r\n      message.success('Successfully edited!', 0.5);\r\n    } catch (e) {\r\n      message.error(e);\r\n    }\r\n  }\r\n\r\n  onDelete = async () => {\r\n    const { id } = this.state;\r\n    this.setState({ isLoading: true });\r\n    try {\r\n      await deleteQuestion({\r\n        input: {\r\n          id\r\n        }\r\n      });\r\n      message.success('Successfully deleted!');\r\n    } catch (e) {\r\n      message.error(e);\r\n    }\r\n    await this.getQuestionList();\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  compileCode = () => {\r\n    const { test, code } = this.state;\r\n    const fullCode = `${code} ${test}`;\r\n    try {\r\n      const { code: compiledCode } = transform(fullCode, {\r\n        presets: [\r\n          'es2015',\r\n          ['stage-2', { decoratorsBeforeExport: true }],\r\n          'react'\r\n        ],\r\n        plugins: ['proposal-object-rest-spread']\r\n      });\r\n      this.setState({ compiledCode });\r\n    } catch (e) {\r\n      console.log('Compile code error!');\r\n    }\r\n  };\r\n\r\n  handleCodeChange = (newCode) => {\r\n    this.setState({ code: newCode }, this.compileCode);\r\n  }\r\n\r\n  handleTestChange = (newTest) => {\r\n    this.setState({ test: newTest }, this.compileCode);\r\n  }\r\n\r\n  onTagUpdate = tags => {\r\n    this.setState({ tags });\r\n  };\r\n\r\n  onSync = async () => {\r\n    const { categoryIndex } = this.state;\r\n    this.setState({ isLoading: true });\r\n    const result = await listQuestions(categoryIndex === 0 ? 'javascript' : 'react');\r\n    this.setState({ questionList: result.items, isLoading: false });\r\n  }\r\n\r\n  render() {\r\n    const { categoryIndex, questionIndex, questionList } = this.state;\r\n    return (\r\n      <React.Fragment>\r\n        <ControlWidget\r\n          type={this.props.type}\r\n          onChangeName={(name) => this.setState({ name })}\r\n          onSubmit={this.onSubmit}\r\n          onDelete={this.onDelete}\r\n          onChangeCategory={this.onChangeCategory}\r\n          onChangeQuestion={this.onChangeQuestion}\r\n          onSync={this.onSync}\r\n          categoryIndex={categoryIndex}\r\n          questionIndex={questionIndex}\r\n          questionList={questionList}\r\n        />\r\n        { getPageComponent({\r\n          categoryIndex,\r\n          onSubmit: this.onSubmit,\r\n          onChangeCategory: this.onChangeCategory,\r\n          handleCodeChange: this.handleCodeChange,\r\n          handleTestChange: this.handleTestChange,\r\n          onTagUpdate: this.onTagUpdate,\r\n          ...this.state\r\n        }) }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Page;\r\n","import React from 'react';\r\n\r\nimport { Tabs, Icon } from 'antd';\r\n\r\nimport DispatchPage from 'app/pages/QuestionPage/DispatchPage';\r\nimport AddAndEditPage from 'app/pages/QuestionPage/AddAndEditPage';\r\n\r\nimport './AdminPage.scss';\r\n\r\nconst TabPane = Tabs.TabPane;\r\n\r\nexport class AdminPage extends React.Component {\r\n  state = {\r\n    activeKey: this.props.location.hash || '#dispatch'\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    if (nextProps.location.hash !== this.props.location.hash) {\r\n      this.setState({ activeKey: nextProps.location.hash });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  onTabClick = (activeKey) => {\r\n    this.setState({ activeKey });\r\n    window.location.hash = activeKey;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"AdminPage\">\r\n        <Tabs activeKey={this.state.activeKey} onTabClick={this.onTabClick}>\r\n          <TabPane tab={<span><Icon type=\"eye\" />Dispatch</span>} key=\"#dispatch\">\r\n            <DispatchPage />\r\n          </TabPane>\r\n          <TabPane tab={<span><Icon type=\"plus-circle\" />Add</span>} key=\"#add\">\r\n            <AddAndEditPage type=\"add\" />\r\n          </TabPane>\r\n          <TabPane tab={<span><Icon type=\"edit\" />Edit</span>} key=\"#edit\">\r\n            <AddAndEditPage type=\"edit\" />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AdminPage;\r\n","import React, { Component } from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>Not found</div>\r\n);\r\n\r\nexport default NotFoundPage;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Amplify, { Auth } from 'aws-amplify';\r\nimport { withAuthenticator } from 'aws-amplify-react';\r\nimport AwsConfig from 'aws-exports';\r\n\r\nimport AdminPage from 'app/pages/AdminPage';\r\nimport NotFoundPage from 'app/pages/NotFoundPage';\r\n\r\n// for graphql test\r\nAmplify.configure(AwsConfig);\r\nAuth.signIn(\"Admin\", \"Admin@123456\")\r\n .then(user => {\r\n     const session = Amplify.Auth.currentSession()\r\n .then(s => {\r\n   console.log(s.getAccessToken().getJwtToken());\r\n }).catch(e=>console.log(e));\r\n   })\r\n .catch(err => console.log(err));\r\n\r\n\r\nconst Admin = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path={`${match.path}`} component={AdminPage} />\r\n      <Route component={NotFoundPage} />\r\n    </Switch>\r\n  );\r\n};\r\n\r\nexport default withAuthenticator(Admin);\r\n","import { getQuestions, getCategories } from 'app/questions/index';\r\n\r\nconst categories = getCategories();\r\n\r\nconst getStateInformation = (state) => {\r\n  const categoryIndex = state.category.index;\r\n  const type = categories[categoryIndex].name;\r\n  const questionIndex = state[type].index;\r\n  const questions = getQuestions(type);\r\n  const question = questions[questionIndex];\r\n  const { index, compiledCode } = state[type];\r\n  const code = (state[type][index] && state[type][index].code) || questions[questionIndex].content;\r\n  const remoteQuestion = state[type].remoteQuestion;\r\n\r\n  return {\r\n    type,\r\n    categoryIndex,\r\n    questionIndex,\r\n    questions,\r\n    question,\r\n    code,\r\n    compiledCode,\r\n    remoteQuestion\r\n  };\r\n};\r\n\r\nexport default getStateInformation;\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport { resetQuestion, changeQuestion } from 'app/actions/code';\r\nimport { changeCategory } from 'app/actions/category';\r\n\r\nimport QuestionSelector from 'app/components/Selectors/QuestionSelector';\r\nimport CategorySelector from 'app/components/Selectors/CategorySelector';\r\n\r\nimport { getStateInformation } from 'app/utils/stateHelper';\r\n\r\nimport { Button, Icon } from 'antd';\r\nimport styles from './ControlWidget.module.scss';\r\n\r\nconst ControlWidget = ({\r\n  onReset,\r\n  // setIntervieweeModal,\r\n  intervieweeName\r\n}) => (\r\n  <div className={styles.control}>\r\n    <div className={styles.interviewee}>\r\n      <Icon type=\"user\" />\r\n      <p>\r\n        Interviewee:\r\n        <span>{ intervieweeName || 'UNSET' }</span>\r\n      </p>\r\n    </div>\r\n    <Button type=\"danger\" onClick={onReset}>Reset</Button>\r\n    {/* <div>\r\n      <Button type=\"primary\" onClick={setIntervieweeModal}>Change Interviewee</Button>\r\n    </div> */}\r\n  </div>\r\n);\r\n\r\nexport default ControlWidget;\r\n","const createWrappedConsole = (console, addConsole) => {\r\n  return Object.keys(console).reduce((cal, key) => {\r\n    const newCal = { ...cal };\r\n    newCal[key] = (...args) => {\r\n      addConsole(...args);\r\n    };\r\n    return newCal;\r\n  }, {});\r\n};\r\n\r\nexport default createWrappedConsole;\r\n","import React from 'react';\r\nimport styles from './ConsoleWidget.module.scss';\r\n\r\nconst isError = e => e && e.stack && e.message && typeof e.stack === 'string' && typeof e.message === 'string';\r\n\r\nconst Text = ({ text }) => <>{ `${text}`.trim() === '' ? <br /> : `${text}`.trim() }</>;\r\n\r\nconst ConsoleWidget = ({ data, className }) => (\r\n  <div className={`${styles['console-widget']} ${className || ''}`}>\r\n    Console:\r\n    {\r\n      data.map((text, index) => (\r\n        <div className={styles.console} key={index}>\r\n          <div className={styles.text}>\r\n            {\r\n              typeof text === 'object' && !isError(text)\r\n                ? JSON.stringify(text, null, 2)\r\n                : <Text text={text} />\r\n            }\r\n          </div>\r\n        </div>\r\n      ))\r\n    }\r\n  </div>\r\n);\r\n\r\nexport default ConsoleWidget;\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport 'brace';\r\nimport 'brace/mode/jsx';\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/textmate';\r\nimport 'brace/theme/monokai';\r\n\r\nimport Grid from 'app/components/Grid';\r\nimport GridItem from 'app/components/Grid/GridItem';\r\nimport ConsoleWidget from 'app/components/Widgets/ConsoleWidget';\r\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\r\nimport ResultWidget from 'app/components/Widgets/ResultWidget';\r\nimport AnswerWidget from 'app/components/Widgets/AnswerWidget';\r\n\r\n\r\nimport debouncedRunCode from 'app/utils/runCode';\r\n\r\nimport styles from './ReactPage.module.scss';\r\n\r\n\r\nclass ReactPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.controlHeight = 70;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { compiledCode, wrappedConsole, resetConsole } = this.props;\r\n    resetConsole();\r\n    debouncedRunCode({ code: compiledCode, wrappedConsole });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const { compiledCode: previousCompiledCode } = this.props;\r\n    const { compiledCode, wrappedConsole, resetConsole } = nextProps;\r\n    if (previousCompiledCode !== compiledCode) {\r\n      resetConsole();\r\n      debouncedRunCode({ code: compiledCode, wrappedConsole });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      code,\r\n      handleCodeChange,\r\n      console: _console,\r\n      onReset,\r\n    } = this.props;\r\n    const layout = [\r\n      {\r\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\r\n      },\r\n      {\r\n        key: 'answer', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\r\n      },\r\n      // {\r\n      //   key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\r\n      // },\r\n      {\r\n        key: 'result', x: 1, y: 0, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\r\n      },\r\n      {\r\n        key: 'console', x: 1, y: 1, width: window.innerWidth / 2, height: (window.innerHeight - this.controlHeight) / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\r\n      },\r\n    ];\r\n    return (\r\n      <div className={styles.app}>\r\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\r\n          <GridItem key=\"code\">\r\n            <CodeWidget\r\n              handleCodeChange={handleCodeChange}\r\n              data={code}\r\n              mode=\"jsx\"\r\n              theme=\"monokai\"\r\n            />\r\n          </GridItem>\r\n          <GridItem key=\"answer\">\r\n            <AnswerWidget />\r\n          </GridItem>\r\n          <GridItem key=\"result\">\r\n            <ResultWidget />\r\n          </GridItem>\r\n          <GridItem key=\"console\">\r\n            <ConsoleWidget data={_console} />\r\n          </GridItem>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(ReactPage);\r\n","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport 'brace';\r\nimport 'brace/mode/javascript';\r\nimport 'brace/theme/textmate';\r\nimport 'brace/theme/monokai';\r\n\r\nimport Grid from 'app/components/Grid';\r\nimport GridItem from 'app/components/Grid/GridItem';\r\nimport ConsoleWidget from 'app/components/Widgets/ConsoleWidget';\r\nimport CodeWidget from 'app/components/Widgets/CodeWidget';\r\nimport TestWidget from 'app/components/Widgets/TestWidget';\r\nimport TapeWidget from 'app/components/Widgets/TapeWidget';\r\n\r\n\r\nimport debouncedRunCode from 'app/utils/runCode';\r\n\r\nimport styles from './JavaScriptPage.module.scss';\r\n\r\nclass JavaScriptPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.controlHeight = 70;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { compiledCode, wrappedConsole, resetConsole, addTape } = this.props;\r\n    resetConsole();\r\n    debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: addTape });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps) {\r\n    const { compiledCode: previousCompiledCode, resetConsole, addTape, resetTape } = this.props;\r\n    const { compiledCode, wrappedConsole } = nextProps;\r\n    if (previousCompiledCode !== compiledCode) {\r\n      resetConsole();\r\n      resetTape();\r\n      debouncedRunCode({ code: compiledCode, wrappedConsole, onTapeUpdate: addTape });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      code,\r\n      test,\r\n      handleCodeChange,\r\n      tape,\r\n      console: _console,\r\n    } = this.props;\r\n    const layout = [\r\n      {\r\n        key: 'code', x: 0, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\r\n      },\r\n      {\r\n        key: 'test', x: 0, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, maxWidth: 700\r\n      },\r\n      // {\r\n      //   key: 'control', x: 1, y: 0, width: window.innerWidth / 2, height: this.controlHeight, static: true\r\n      // },\r\n      {\r\n        key: 'tape', x: 1, y: 0, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\r\n      },\r\n      {\r\n        key: 'console', x: 1, y: 1, width: window.innerWidth / 2, height: window.innerHeight / 2, minWidth: 100, minHeight: 100, maxWidth: 700, maxHeight: 500\r\n      },\r\n    ];\r\n    return (\r\n      <div className={styles.app}>\r\n        <Grid layout={layout} totalWidth=\"100%\" totalHeight=\"100%\" autoResize>\r\n          <GridItem key=\"code\">\r\n            <CodeWidget\r\n              handleCodeChange={handleCodeChange}\r\n              data={code}\r\n              mode=\"javascript\"\r\n              theme=\"monokai\"\r\n            />\r\n          </GridItem>\r\n          <GridItem key=\"test\">\r\n            <TestWidget data={test} />\r\n          </GridItem>\r\n          <GridItem key=\"tape\">\r\n            <TapeWidget data={tape} />\r\n          </GridItem>\r\n          <GridItem key=\"console\">\r\n            <ConsoleWidget data={_console} />\r\n          </GridItem>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(JavaScriptPage);\r\n","import React, { Component } from 'react';\r\n// import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { transform } from '@babel/standalone';\r\nimport { message } from 'antd';\r\n\r\n// import { resetConsole } from 'app/actions/console';\r\nimport ControlWidget from './ControlWidget';\r\nimport createWrappedConsole from 'app/utils/consoleFactory';\r\nimport { subscribeOnCreateQuestionSnapshot } from 'app/utils/question';\r\nimport { subscribeOnCreateRecord, updateRecord } from 'app/utils/record';\r\nimport UserModal from 'app/components/Modal';\r\nimport ReactPage from './ReactPage';\r\nimport JavaScriptPage from './JavaScriptPage';\r\n\r\nconst getPageComponent = args => {\r\n  switch (args.categoryIndex) {\r\n    case 1: {\r\n      return <ReactPage {...args} />;\r\n    }\r\n    default: {\r\n      return <JavaScriptPage {...args} />;\r\n    }\r\n  }\r\n};\r\n\r\nclass Page extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categoryIndex: 0,\r\n      code: '',\r\n      compiledCode: '',\r\n      questionContent: '',\r\n      test: '',\r\n      tape: [],\r\n      recordId: '',\r\n      console: [],\r\n      intervieweeName: '',\r\n      visibleIntervieweeModal: true,\r\n    };\r\n    this.wrappedConsole = createWrappedConsole(console, this.addConsole);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.subscribeOnCreateRecord();\r\n    this.subscribeOnDispatchQuestion();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // this.subscriptionDispatchQuestion.unsubscribe();\r\n  }\r\n\r\n  updateRecordAction = async newCode => {\r\n    const { recordId, intervieweeName } = this.state;\r\n    if (recordId !== '') {\r\n      await updateRecord(recordId, newCode, intervieweeName);\r\n    }\r\n  };\r\n\r\n  handleCodeChange = newCode => {\r\n    const { test } = this.state;\r\n    const fullCode = `${newCode} ${test}`;\r\n\r\n    try {\r\n      const { code: compiledCode } = transform(fullCode, {\r\n        presets: [\r\n          'es2015',\r\n          ['stage-2', { decoratorsBeforeExport: true }],\r\n          'react'\r\n        ],\r\n        plugins: ['proposal-object-rest-spread']\r\n      });\r\n      this.setState({ compiledCode, code: newCode });\r\n      this.updateRecordAction(newCode);\r\n    } catch (e) {\r\n      this.setState({ code: newCode });\r\n      this.resetConsole();\r\n      this.wrappedConsole.log(e);\r\n      this.updateRecordAction(newCode);\r\n    }\r\n  };\r\n\r\n  onReset = () => {\r\n    const { questionContent } = this.state;\r\n    this.setState({ code: questionContent });\r\n    this.handleCodeChange(questionContent);\r\n  };\r\n\r\n  addTape = newTape => {\r\n    const { tape } = this.state;\r\n    this.setState({ tape: [...tape, newTape] });\r\n  };\r\n\r\n  resetTape = () => {\r\n    this.setState({ tape: [] });\r\n  };\r\n\r\n  setIntervieweeModal = () => {\r\n    const { visibleIntervieweeModal } = this.state;\r\n    this.setState({ visibleIntervieweeModal: !visibleIntervieweeModal });\r\n  }\r\n\r\n  addConsole = (...args) => {\r\n    const { console: _console } = this.state;\r\n    this.setState({ console: [..._console, ...args] });\r\n  };\r\n\r\n  resetConsole = () => {\r\n    this.setState({ console: [] });\r\n  };\r\n\r\n  setIntervieweeName = name => {\r\n    this.setState({ intervieweeName: name });\r\n    message.success(name);\r\n  }\r\n\r\n\r\n  subscribeOnCreateRecord = () => {\r\n    subscribeOnCreateRecord(data => {\r\n      const { intervieweeName } = this.state;\r\n      const { id, subjectId } = data;\r\n      if (intervieweeName === subjectId) {\r\n        this.setState({\r\n          recordId: id\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  subscribeOnDispatchQuestion = () => {\r\n    subscribeOnCreateQuestionSnapshot(data => {\r\n      const { type, content: code, test } = data;\r\n      this.setState({\r\n        categoryIndex: type === 'javascript' ? 0 : 1,\r\n        code,\r\n        test,\r\n        questionContent: code\r\n      });\r\n      const { questionContent } = this.state;\r\n      this.handleCodeChange(questionContent);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      handleCodeChange,\r\n      wrappedConsole,\r\n      onReset,\r\n      addTape,\r\n      resetTape,\r\n      resetConsole,\r\n      setIntervieweeModal,\r\n      setIntervieweeName,\r\n    } = this;\r\n    const { visibleIntervieweeModal, intervieweeName } = this.state;\r\n    return (\r\n      <>\r\n        <ControlWidget\r\n          intervieweeName={intervieweeName}\r\n          onReset={() => onReset('javascript')}\r\n          setIntervieweeModal={setIntervieweeModal}\r\n        />\r\n        {getPageComponent({\r\n          handleCodeChange,\r\n          wrappedConsole,\r\n          onReset,\r\n          addTape,\r\n          resetTape,\r\n          resetConsole,\r\n          setIntervieweeModal,\r\n          ...this.state,\r\n          ...this.props\r\n        })}\r\n        <UserModal\r\n          setIntervieweeModal={setIntervieweeModal}\r\n          mustEnterName\r\n          closable={false}\r\n          setIntervieweeName={setIntervieweeName}\r\n          visible={visibleIntervieweeModal}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Page);\r\n","import React, { Component } from 'react';\r\nimport 'antd/dist/antd.css';\r\nimport './main.css';\r\nimport reqwest from 'reqwest';\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\nconst { List, message, Avatar, Spin, } = 'antd';\r\nconst fakeDataUrl = 'https://randomuser.me/api/?results=5&inc=name,gender,email,nat&noinfo';\r\n\r\nclass MainPage extends Component {\r\n  state = {\r\n    data: [],\r\n    loading: false,\r\n    hasMore: true,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData((res) => {\r\n      this.setState({\r\n        data: res.results,\r\n      });\r\n    });\r\n  }\r\n\r\n  fetchData = (callback) => {\r\n    reqwest({\r\n      url: fakeDataUrl,\r\n      type: 'json',\r\n      method: 'get',\r\n      contentType: 'application/json',\r\n      success: (res) => {\r\n        callback(res);\r\n      },\r\n    });\r\n  }\r\n\r\n  handleInfiniteOnLoad = () => {\r\n    let data = this.state.data;\r\n    this.setState({\r\n      loading: true,\r\n    });\r\n    if (data.length > 14) {\r\n      message.warning('Infinite List loaded all');\r\n      this.setState({\r\n        hasMore: false,\r\n        loading: false,\r\n      });\r\n      return;\r\n    }\r\n    this.fetchData((res) => {\r\n      data = data.concat(res.results);\r\n      this.setState({\r\n        data,\r\n        loading: false,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"demo-infinite-container\">\r\n        <InfiniteScroll\r\n          initialLoad={false}\r\n          pageStart={0}\r\n          loadMore={this.handleInfiniteOnLoad}\r\n          hasMore={!this.state.loading && this.state.hasMore}\r\n          useWindow={false}\r\n        >\r\n          <List\r\n            dataSource={this.state.data}\r\n            renderItem={item => (\r\n              <List.Item key={item.id}>\r\n                <List.Item.Meta\r\n                  avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\r\n                  title={<a href=\"https://ant.design\">{item.name.last}</a>}\r\n                  description={item.email}\r\n                />\r\n                <div>Content</div>\r\n              </List.Item>\r\n            )}\r\n          >\r\n            {this.state.loading && this.state.hasMore && (\r\n              <div className=\"demo-loading-container\">\r\n                <Spin />\r\n              </div>\r\n            )}\r\n          </List>\r\n        </InfiniteScroll>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport 'antd/dist/antd.css';\r\n\r\nimport { initErrorLogging } from 'app/utils/sentry';\r\n\r\nimport reducer from 'app/reducers';\r\nimport App from './App';\r\nimport './index.css';\r\nimport MainPage from 'app/pages/MainPage';\r\n\r\ninitErrorLogging();\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\n/* ReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n); */\r\n\r\nReactDOM.render(\r\n  <MainPage />,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}